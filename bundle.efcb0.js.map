{"version":3,"sources":["webpack:///bundle.efcb0.js","webpack:///webpack/bootstrap 3e5bb050e6823b7f2a8f","webpack:///./node_modules/@firebase/polyfill/dist/index.esm.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/preact/dist/preact.min.js","webpack:///./node_modules/classnames/index.js","webpack:///./firebase.js","webpack:///./index.js","webpack:///./node_modules/@firebase/app/dist/index.cjs.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./assets/flexicon.svg","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/preact-cli/lib/lib/entry.js","webpack:///./node_modules/firebase/app/dist/index.cjs.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DFDv","__webpack_exports__","value","global","noop","bind","fn","thisArg","apply","arguments","Promise","this","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","push","_immediateFn","cb","onFulfilled","onRejected","resolve","reject","promise","ret","e","newValue","then","finale","length","_unhandledRejectionFn","len","Handler","done","reason","ex","createCommonjsModule","__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__","setTimeoutFunc","setTimeout","prom","constructor","callback","all","arr","res","val","args","remaining","Array","slice","race","values","setImmediate","err","console","warn","globalNS","window","Error","_global","Math","Function","__g","_core","core","version","__e","_isObject","it","_anObject","_fails","exec","_descriptors","a","document","is","createElement","_domCreate","_ie8DomDefine","_toPrimitive","S","toString","valueOf","dP","f","O","P","Attributes","_objectDp","_propertyDesc","bitmap","writable","_hide","key","_has","id","px","random","_uid","concat","_redefine","SRC","$toString","TPL","split","inspectSource","safe","isFunction","join","String","_aFunction","_ctx","that","b","$export","type","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","target","expProto","U","W","R","_export","_cof","_iobject","propertyIsEnumerable","_defined","_toObject","ceil","floor","_toInteger","isNaN","min","_toLength","_isArray","isArray","arg","store","_shared","_wks","Symbol","USE_SYMBOL","SPECIES","_arraySpeciesConstructor","original","C","_arraySpeciesCreate","_arrayMethods","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","index","result","UNSCOPABLES","ArrayProto","_addToUnscopables","$find","forced","find","$find$1","forced$1","findIndex","_toIobject","max","min$1","_toAbsoluteIndex","shared","_sharedKey","arrayIndexOf","IS_INCLUDES","el","fromIndex","IE_PROTO","_objectKeysInternal","names","_enumBugKeys","_objectKeys","keys","f$1","getOwnPropertySymbols","_objectGops","f$2","_objectPie","$assign","assign","_objectAssign","A","K","forEach","k","T","aLen","getSymbols","isEnum","j","MATCH","_isRegexp","isRegExp","_stringContext","searchString","NAME","MATCH$1","$startsWith","KEY","re","startsWith","search","repeat","count","str","Infinity","RangeError","_meta","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","def","TAG","_setToStringTag","tag","stat","f$3","_wksExt","_wksDefine","$Symbol","charAt","_enumKeys","symbols","_objectDps","defineProperties","Properties","document$1","_html","documentElement","IE_PROTO$1","Empty","createDict","iframeDocument","iframe","style","display","appendChild","src","contentWindow","open","write","lt","close","_objectCreate","hiddenKeys","f$4","getOwnPropertyNames","_objectGopn","gOPN","toString$1","windowNames","getWindowNames","f$5","_objectGopnExt","gOPD","getOwnPropertyDescriptor","f$6","_objectGopd","gOPD$1","dP$1","gOPN$1","$JSON","JSON","_stringify","stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","D","protoDesc","wrap","sym","_k","isSymbol","iterator","$defineProperty","$defineProperties","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","set","es6Symbols","wellKnownSymbols","for","keyFor","useSetter","useSimple","replacer","$replacer","TAG$1","ARG","tryGet","_classof","callee","test","_iterators","IteratorPrototype","_iterCreate","Constructor","next","IE_PROTO$2","ObjectProto$1","_objectGpo","getPrototypeOf","ITERATOR","BUGGY","returnThis","_iterDefine","Base","DEFAULT","IS_SET","FORCED","methods","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","$at","TO_STRING","pos","charCodeAt","iterated","_t","_i","point","_iterStep","es6_array_iterator","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","DuR2","g","eval","EBst","t","r","children","pop","nodeName","attributes","M","vnode","current","__d","V","debounceRendering","x","splitText","_componentConstructor","__n","toLowerCase","u","defaultProps","createElementNS","parentNode","removeChild","cssText","innerHTML","__html","replace","substring","addEventListener","_","removeEventListener","__l","removeAttribute","removeAttributeNS","setAttributeNS","setAttribute","className","event","shift","afterMount","componentDidMount","H","ownerSVGElement","h","_component","nodeValue","createTextNode","replaceChild","v","__preactattr_","N","firstChild","nextSibling","dangerouslySetInnerHTML","y","childNodes","__k","trim","insertBefore","ref","lastChild","previousSibling","render","__b","splice","__x","__r","getDerivedStateFromProps","base","componentWillMount","componentWillReceiveProps","context","__c","__p","props","syncComponentUpdates","state","__s","shouldComponentUpdate","componentWillUpdate","getChildContext","getSnapshotBeforeUpdate","L","__u","componentDidUpdate","afterUpdate","__h","beforeUnmount","componentWillUnmount","setState","forceUpdate","cloneElement","createRef","Component","rerender","options","FWi5","HW6M","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","classNames","classes","argType","inner","hasOwn","default","define","JkW7","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","preact_min","index_cjs","index_cjs_default","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","index_App","_ref","require","_ref2","alt","_ref3","_ref4","_ref5","_ref6","App","_Component","_temp","_this","_ret","_len","_key","word","translation","translations","addWord","addTranslation","showStartPage","showAddNewWord","showWordAdded","plusHover","showShare","isShowAddNewBlock","greet","handleChange","checkWord","handleAddWordChange","handleAddTranslationChange","obj","translationsRef","database","item","populate","map","showAddNew","hideAddNew","hideShare","toggleAddNewWord","hideStartPage","fbShare","FB","ui","method","href","location","getRandomString","okies","_this2","on","snapshot","newState","url","URL","searchParam","searchParams","onclick","addNewClass","add-new-container_text","hide","onClick","onMouseEnter","onMouseLeave","placeholder","onInput","O4tu","createFirebaseNamespace","removeApp","callAppHooks","apps_","app","DEFAULT_ENTRY_NAME","contains","error","rawConfig","config","FirebaseAppImpl","namespace","getApps","registerService","createService","serviceProperties","appHook","allowMultipleInstances","factories","appHooks","serviceNamespace","appArg","util","deepExtend","_getService","extendNamespace","eventName","serviceName","factoryName","useAsService","useService","apps","SDK_VERSION","INTERNAL","createSubscribe","ErrorFactory","patchProperty","code","appErrors","tokenListeners","firebase_","isDeleted_","services_","name_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","deepCopy","getUid","getToken","addAuthTokenListener","removeAuthTokenListener","filter","listener","checkDestroyed_","delete","services","serviceKey","instanceKey","service","instanceIdentifier","instanceSpecifier","extendApp","log","errors","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","Pxmi","Date","dateValue","getTime","prop","patchCapture","captureFake","captureStackTrace","jsonEval","parse","data","executor","onNoObservers","proxy","ObserverProxy","subscribe","async","onError","catch","implementsAnyMethods","methods_1","errorPrefix","fnName","argumentNumber","optional","argName","validateNamespace","validateCallback","validateContextObject","tslib_1","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","message","assertionError","stringToByteArray","byteArrayToString","bytes","c1","fromCharCode","c2","c3","c4","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","base64Encode","utf8Bytes","base64Decode","Deferred","wrapCallback","getUA","navigator","isMobileCordova","isReactNative","isNodeSdk","ERROR_NAME","FirebaseError","stack","pattern","template","fullCode","match","decode","token","header","claims","signature","parts","isValidTimestamp","validSince","validUntil","now","issuedAtTime","isValidFormat","decoded","isAdmin","safeGet","extend","objTo","objFrom","clone","isNonNullObject","isEmpty","getCount","rv","opt_obj","findKey","opt_this","findValue","getAnyKey","getValues","every","querystring","querystringParams","params","arrayVal","encodeURIComponent","querystringDecode","Hash","blockSize","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","reset","__extends","compress_","buf","opt_offset","update","opt_length","lengthMinusBlock","inbuf","digest","totalBits","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","complete","nextOrObserver","unsub","unsubscribeOne","finalError","sendOne","validateArgCount","minCount","maxCount","argCount","argError","stringToByteArray$1","high","stringLength","TToO","__","extendStatics","__rest","indexOf","__decorate","decorators","desc","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","generator","fulfilled","step","rejected","__generator","body","verb","op","label","ops","trys","sent","throw","return","__exportStar","__values","__read","ar","__spread","__await","__asyncGenerator","q","resume","settle","fulfill","asyncIterator","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__importDefault","__assign","V+3I","cbDw","fjI4","setLogLevel","level","instances","inst","logLevel","Logger","LogLevel","defaultLogLevel","INFO","defaultLogHandler","instance","logType","toISOString","DEBUG","VERBOSE","info","WARN","ERROR","_logLevel","_logHandler","debug","jE0U","decodePath","pathString","pathStringDecoded","pieces","piece","decodeURIComponent","decodeQuery","queryString","results","_a","segment","kv","NAME_ONLY_COMPARATOR","left","right","nameCompare","NAME_COMPARATOR","nodeFromJSON$1","json","priority","ChildrenNode","EMPTY_NODE","LeafNode","USE_HINZE","node_1","jsonObj_1","childData","childNode","isLeafNode","updateImmediateChild","updatePriority","children_1","childrenHavePriority_1","hinzeJsonObj_1","getPriority","NamedNode","childSet","buildChildSet","namedNode","sortedChildSet","PRIORITY_INDEX","getCompare","IndexMap",".priority","Default","registerDatabase","unused","RepoManager","getInstance","databaseFromApp","Reference","Query","Database","enableLogging","ServerValue","TEST_ACCESS","__EMPTY_NODE","MAX_NODE","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","_defaultIndexMap","logger","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","remove","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","var_args","logger$1","firstLog_","logger_","persistent","logWrapper","prefix","fatal","warnIfPageIsSecure","protocol","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","readyState","called_1","wrappedFn_1","attachEvent","MIN_NAME","MAX_NAME","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","sort","splitStringBySize","segsize","dataSegs","each","doubleToIEEE754String","ln","bits","abs","pow","LN2","round","reverse","hexByteString","hexByte","parseInt","substr","isChromeExtensionContentScript","isWindowsStoreApp","Windows","UI","errorForServerCode","query","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","beingCrawled","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","toUrlEncodedString","begin","parent","child","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","comparePaths","leftKeys","rightKeys","cmp","equals","other","ValidationPath","errorPrefix_","parts_","byteLength_","checkValid_","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","pairs","toURLString","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","repoInfo","scheme","port","colonInd","slashInd","questionMarkInd","queryParams","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","validateFirebaseData","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","onDisconnectCancel","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","duplicateTime","timeStampChars","node","Wrap","Index","compare","indexedValueChanged","oldNode","newNode","minPost","MIN","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","priorityHashText","validatePriorityNode","priorityNode","value_","priorityNode_","lazyHash_","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat",".value","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","inorderTraversal","action","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","bits_","nextBitIsOne","childList","keyFn","mapSortFn","buildBalancedTree","low","middle","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","children_","indexMap_","newIndexMap","newPriority","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","__referenceConstructor","OperationType","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","thisKey","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","addEventCallbackForQuery","off","container","removeEventCallbackForQuery","once","userCallback","cancelOrContext","firstCall","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","CountedSet","add","clear","SparseSnapshotTree","childKey","remember","forget","self_1","tree","forEachTree","prefixPath","func","generateWithValues","resolveDeferredValue","serverValues","resolveDeferredValueTree","resolvedTree","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverNode","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","existing","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","view","events_1","serverCacheComplete","eventCacheComplete","removed","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","error$$1","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","this_1","toProcess","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","markConnectionHealthy","shutdown_","myDisconnFrame","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","contentDocument","alive","myID","myPW","nodeRestRequest","newRequest_","theURL","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","onload","onreadystatechange","rstate","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","User-Agent","process","platform","env","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","isOldAndroid","userAgent","oldAndroidRegex","oldAndroidMatch","parseFloat","previouslyFailed","appendFrame_","fullMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","msg","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","accessToken","interrupt","serverTimeOffset","normalizedPathString","statusCode","explanation","clientName","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","authTokenData","authToken","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","errorReason","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","showDelta","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","__database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","parentPath","getRoot","databaseProp","transaction","transactionUpdate","applyLocally","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","currentNode","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","from","abortTransactionsOnNode_","lastSent","_staticInstance","repos_","useRestClient_","appName","dbUrl","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","TIMESTAMP",".sv","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","freeze","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef","rplX","normalizeName","normalizeValue","iteratorFor","items","support","iterable","Headers","append","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","Uint8Array","chars","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","text","normalizeMethod","upcased","Request","credentials","mode","referrer","form","parseHeaders","rawHeaders","line","Response","bodyInit","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","has","redirectStatuses","redirect","init","getAllResponseHeaders","responseURL","ontimeout","withCredentials","responseType","setRequestHeader","polyfill","uXl7","_preact","serviceWorker","register","__webpack_public_path__","interopDefault","firstElementChild","yviF"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,UDMMC,KACA,SAAUvB,EAAQwB,EAAqB5B,GAE7C,YEtEAc,QAAAC,eAAAa,EAAA,cAAAC,OAAA,aAAAC,GAMA,QAASC,MAGT,QAASC,GAAKC,EAAIC,GAChB,MAAO,YACLD,EAAGE,MAAMD,EAASE,YAItB,QAASC,GAAQJ,GACf,KAAMK,eAAgBD,IACpB,KAAM,IAAIE,WAAU,uCACtB,IAAkB,kBAAPN,GAAmB,KAAM,IAAIM,WAAU,iBAClDD,MAAKE,OAAS,EACdF,KAAKG,UAAW,EAChBH,KAAKI,WAASC,GACdL,KAAKM,cAELC,EAAUZ,EAAIK,MAGhB,QAASQ,GAAOC,EAAMC,GACpB,KAAuB,IAAhBD,EAAKP,QACVO,EAAOA,EAAKL,MAEd,IAAoB,IAAhBK,EAAKP,OAEP,WADAO,GAAKH,WAAWK,KAAKD,EAGvBD,GAAKN,UAAW,EAChBJ,EAAQa,aAAa,WACnB,GAAIC,GAAqB,IAAhBJ,EAAKP,OAAeQ,EAASI,YAAcJ,EAASK,UAC7D,IAAW,OAAPF,EAEF,YADiB,IAAhBJ,EAAKP,OAAec,EAAUC,GAAQP,EAASQ,QAAST,EAAKL,OAGhE,IAAIe,EACJ,KACEA,EAAMN,EAAGJ,EAAKL,QACd,MAAOgB,GAEP,WADAH,GAAOP,EAASQ,QAASE,GAG3BJ,EAAQN,EAASQ,QAASC,KAI9B,QAASH,GAAQP,EAAMY,GACrB,IAEE,GAAIA,IAAaZ,EACf,KAAM,IAAIR,WAAU,4CACtB,IACEoB,IACqB,gBAAbA,IAA6C,kBAAbA,IACxC,CACA,GAAIC,GAAOD,EAASC,IACpB,IAAID,YAAoBtB,GAItB,MAHAU,GAAKP,OAAS,EACdO,EAAKL,OAASiB,MACdE,GAAOd,EAEF,IAAoB,kBAATa,GAEhB,WADAf,GAAUb,EAAK4B,EAAMD,GAAWZ,GAIpCA,EAAKP,OAAS,EACdO,EAAKL,OAASiB,EACdE,EAAOd,GACP,MAAOW,GACPH,EAAOR,EAAMW,IAIjB,QAASH,GAAOR,EAAMY,GACpBZ,EAAKP,OAAS,EACdO,EAAKL,OAASiB,EACdE,EAAOd,GAGT,QAASc,GAAOd,GACM,IAAhBA,EAAKP,QAA2C,IAA3BO,EAAKH,WAAWkB,QACvCzB,EAAQa,aAAa,WACdH,EAAKN,UACRJ,EAAQ0B,sBAAsBhB,EAAKL,SAKzC,KAAK,GAAIrC,GAAI,EAAG2D,EAAMjB,EAAKH,WAAWkB,OAAQzD,EAAI2D,EAAK3D,IACrDyC,EAAOC,EAAMA,EAAKH,WAAWvC,GAE/B0C,GAAKH,WAAa,KAGpB,QAASqB,GAAQb,EAAaC,EAAYG,GACxClB,KAAKc,YAAqC,kBAAhBA,GAA6BA,EAAc,KACrEd,KAAKe,WAAmC,kBAAfA,GAA4BA,EAAa,KAClEf,KAAKkB,QAAUA,EASjB,QAASX,GAAUZ,EAAIc,GACrB,GAAImB,IAAO,CACX,KACEjC,EACE,SAASJ,GACHqC,IACJA,GAAO,EACPZ,EAAQP,EAAMlB,KAEhB,SAASsC,GACHD,IACJA,GAAO,EACPX,EAAOR,EAAMoB,MAGjB,MAAOC,GACP,GAAIF,EAAM,MACVA,IAAO,EACPX,EAAOR,EAAMqB,IAiIjB,QAASC,GAAqBpC,EAAI7B,GACjC,MAAOA,IAAWD,YAAe8B,EAAG7B,EAAQA,EAAOD,SAAUC,EAAOD,QAtQrE,GAAAmE,GAAAtE,EAAA,QAIIuE,GAJJvE,EAAAmB,EAAAmD,GAIqBE,WAoIrBnC,GAAQd,UAAR,MAA6B,SAAS8B,GACpC,MAAOf,MAAKsB,KAAK,KAAMP,IAGzBhB,EAAQd,UAAUqC,KAAO,SAASR,EAAaC,GAC7C,GAAIoB,GAAO,GAAInC,MAAKoC,YAAY3C,EAGhC,OADAe,GAAOR,KAAM,GAAI2B,GAAQb,EAAaC,EAAYoB,IAC3CA,GAGTpC,EAAQd,UAAR,QAA+B,SAASoD,GACtC,GAAID,GAAcpC,KAAKoC,WACvB,OAAOpC,MAAKsB,KACV,SAAS/B,GACP,MAAO6C,GAAYpB,QAAQqB,KAAYf,KAAK,WAC1C,MAAO/B,MAGX,SAASsC,GACP,MAAOO,GAAYpB,QAAQqB,KAAYf,KAAK,WAC1C,MAAOc,GAAYnB,OAAOY,QAMlC9B,EAAQuC,IAAM,SAASC,GACrB,MAAO,IAAIxC,GAAQ,SAASiB,EAASC,GAOnC,QAASuB,GAAIzE,EAAG0E,GACd,IACE,GAAIA,IAAuB,gBAARA,IAAmC,kBAARA,IAAqB,CACjE,GAAInB,GAAOmB,EAAInB,IACf,IAAoB,kBAATA,GAQT,WAPAA,GAAKrD,KACHwE,EACA,SAASA,GACPD,EAAIzE,EAAG0E,IAETxB,GAKNyB,EAAK3E,GAAK0E,EACU,KAAdE,GACJ3B,EAAQ0B,GAEV,MAAOZ,GACPb,EAAOa,IA1BX,IAAKS,OAA6B,KAAfA,EAAIf,OACrB,KAAM,IAAIvB,WAAU,+BACtB,IAAIyC,GAAOE,MAAM3D,UAAU4D,MAAM5E,KAAKsE,EACtC,IAAoB,IAAhBG,EAAKlB,OAAc,MAAOR,MA2B9B,KAAK,GA1BD2B,GAAYD,EAAKlB,OA0BZzD,EAAI,EAAGA,EAAI2E,EAAKlB,OAAQzD,IAC/ByE,EAAIzE,EAAG2E,EAAK3E,OAKlBgC,EAAQiB,QAAU,SAASzB,GACzB,MAAIA,IAA0B,gBAAVA,IAAsBA,EAAM6C,cAAgBrC,EACvDR,EAGF,GAAIQ,GAAQ,SAASiB,GAC1BA,EAAQzB,MAIZQ,EAAQkB,OAAS,SAAS1B,GACxB,MAAO,IAAIQ,GAAQ,SAASiB,EAASC,GACnCA,EAAO1B,MAIXQ,EAAQ+C,KAAO,SAASC,GACtB,MAAO,IAAIhD,GAAQ,SAASiB,EAASC,GACnC,IAAK,GAAIlD,GAAI,EAAG2D,EAAMqB,EAAOvB,OAAQzD,EAAI2D,EAAK3D,IAC5CgF,EAAOhF,GAAGuD,KAAKN,EAASC,MAM9BlB,EAAQa,aACmB,kBAAjBoC,eACN,SAASrD,GACPqD,aAAarD,KAEjB,SAASA,GACPsC,EAAetC,EAAI,IAGvBI,EAAQ0B,sBAAwB,SAA+BwB,GACtC,mBAAZC,UAA2BA,SACpCA,QAAQC,KAAK,wCAAyCF,GAI1D,IAAIG,GAAY,WAId,GAAoB,mBAAT3C,MACT,MAAOA,KAET,IAAsB,mBAAX4C,QACT,MAAOA,OAET,QAAsB,KAAX7D,EACT,MAAOA,EAET,MAAM,IAAI8D,OAAM,oCAGbF,GAASrD,UACZqD,EAASrD,QAAUA,EAOrB,IAAIwD,GAAUxB,EAAqB,SAAUjE,GAE7C,GAAI0B,GAAS1B,EAAOD,QAA2B,mBAAVwF,SAAyBA,OAAOG,MAAQA,KACzEH,OAAwB,mBAAR5C,OAAuBA,KAAK+C,MAAQA,KAAO/C,KAE3DgD,SAAS,gBACK,iBAAPC,OAAiBA,IAAMlE,KAG9BmE,EAAQ5B,EAAqB,SAAUjE,GAC3C,GAAI8F,GAAO9F,EAAOD,SAAYgG,QAAS,QACrB,iBAAPC,OAAiBA,IAAMF,KAI9BG,EAAY,SAAUC,GACxB,MAAqB,gBAAPA,GAAyB,OAAPA,EAA4B,kBAAPA,IAGnDC,EAAY,SAAUD,GACxB,IAAKD,EAAUC,GAAK,KAAM/D,WAAU+D,EAAK,qBACzC,OAAOA,IAGLE,EAAS,SAAUC,GACrB,IACE,QAASA,IACT,MAAO/C,GACP,OAAO,IAKPgD,GAAgBF,EAAO,WACzB,MAA+E,IAAxE1F,OAAOC,kBAAmB,KAAOG,IAAK,WAAc,MAAO,MAAQyF,IAGxEC,EAAWf,EAAQe,SAEnBC,EAAKR,EAAUO,IAAaP,EAAUO,EAASE,eAC/CC,EAAa,SAAUT,GACzB,MAAOO,GAAKD,EAASE,cAAcR,OAGjCU,GAAiBN,IAAiBF,EAAO,WAC3C,MAA8F,IAAvF1F,OAAOC,eAAegG,EAAW,OAAQ,KAAO7F,IAAK,WAAc,MAAO,MAAQyF,IAOvFM,EAAe,SAAUX,EAAIY,GAC/B,IAAKb,EAAUC,GAAK,MAAOA,EAC3B,IAAIrE,GAAI8C,CACR,IAAImC,GAAkC,mBAArBjF,EAAKqE,EAAGa,YAA4Bd,EAAUtB,EAAM9C,EAAG1B,KAAK+F,IAAM,MAAOvB,EAC1F,IAAgC,mBAApB9C,EAAKqE,EAAGc,WAA2Bf,EAAUtB,EAAM9C,EAAG1B,KAAK+F,IAAM,MAAOvB,EACpF,KAAKmC,GAAkC,mBAArBjF,EAAKqE,EAAGa,YAA4Bd,EAAUtB,EAAM9C,EAAG1B,KAAK+F,IAAM,MAAOvB,EAC3F,MAAMxC,WAAU,4CAGd8E,EAAKvG,OAAOC,eAEZuG,EAAIZ,EAAe5F,OAAOC,eAAiB,SAAwBwG,EAAGC,EAAGC,GAI3E,GAHAlB,EAAUgB,GACVC,EAAIP,EAAaO,GAAG,GACpBjB,EAAUkB,GACNT,EAAe,IACjB,MAAOK,GAAGE,EAAGC,EAAGC,GAChB,MAAO/D,IACT,GAAI,OAAS+D,IAAc,OAASA,GAAY,KAAMlF,WAAU,2BAEhE,OADI,SAAWkF,KAAYF,EAAEC,GAAKC,EAAW5F,OACtC0F,GAGLG,GACHJ,EAAGA,GAGAK,EAAgB,SAAUC,EAAQ/F,GACpC,OACEZ,aAAuB,EAAT2G,GACd5G,eAAyB,EAAT4G,GAChBC,WAAqB,EAATD,GACZ/F,MAAOA,IAIPiG,EAAQpB,EAAe,SAAUrF,EAAQ0G,EAAKlG,GAChD,MAAO6F,GAAUJ,EAAEjG,EAAQ0G,EAAKJ,EAAc,EAAG9F,KAC/C,SAAUR,EAAQ0G,EAAKlG,GAEzB,MADAR,GAAO0G,GAAOlG,EACPR,GAGLG,KAAoBA,eACpBwG,EAAO,SAAU1B,EAAIyB,GACvB,MAAOvG,GAAejB,KAAK+F,EAAIyB,IAG7BE,EAAK,EACLC,EAAKpC,KAAKqC,SACVC,EAAO,SAAUL,GACnB,MAAO,UAAUM,WAAe1F,KAARoF,EAAoB,GAAKA,EAAK,QAASE,EAAKC,GAAIf,SAAS,MAG/EmB,EAAYjE,EAAqB,SAAUjE,GAC/C,GAAImI,GAAMH,EAAK,OAEXI,EAAYzC,SAAA,SACZ0C,GAAO,GAAKD,GAAWE,MAFX,WAIhBzC,GAAM0C,cAAgB,SAAUrC,GAC9B,MAAOkC,GAAUjI,KAAK+F,KAGvBlG,EAAOD,QAAU,SAAUoH,EAAGQ,EAAKhD,EAAK6D,GACvC,GAAIC,GAA2B,kBAAP9D,EACpB8D,KAAYb,EAAKjD,EAAK,SAAW+C,EAAM/C,EAAK,OAAQgD,IACpDR,EAAEQ,KAAShD,IACX8D,IAAYb,EAAKjD,EAAKwD,IAAQT,EAAM/C,EAAKwD,EAAKhB,EAAEQ,GAAO,GAAKR,EAAEQ,GAAOU,EAAIK,KAAKC,OAAOhB,MACrFR,IAAM1B,EACR0B,EAAEQ,GAAOhD,EACC6D,EAGDrB,EAAEQ,GACXR,EAAEQ,GAAOhD,EAET+C,EAAMP,EAAGQ,EAAKhD,UALPwC,GAAEQ,GACTD,EAAMP,EAAGQ,EAAKhD,OAOfgB,SAASxE,UAxBI,WAwBkB,WAChC,MAAsB,kBAARe,OAAsBA,KAAKiG,IAAQC,EAAUjI,KAAK+B,UAI9D0G,EAAa,SAAU1C,GACzB,GAAiB,kBAANA,GAAkB,KAAM/D,WAAU+D,EAAK,sBAClD,OAAOA,IAKL2C,EAAO,SAAUhH,EAAIiH,EAAMpF,GAE7B,GADAkF,EAAW/G,OACEU,KAATuG,EAAoB,MAAOjH,EAC/B,QAAQ6B,GACN,IAAK,GAAG,MAAO,UAAU6C,GACvB,MAAO1E,GAAG1B,KAAK2I,EAAMvC,GAEvB,KAAK,GAAG,MAAO,UAAUA,EAAGwC,GAC1B,MAAOlH,GAAG1B,KAAK2I,EAAMvC,EAAGwC,GAE1B,KAAK,GAAG,MAAO,UAAUxC,EAAGwC,EAAG1I,GAC7B,MAAOwB,GAAG1B,KAAK2I,EAAMvC,EAAGwC,EAAG1I,IAG/B,MAAO,YACL,MAAOwB,GAAGE,MAAM+G,EAAM9G,aAMtBgH,EAAU,QAAVA,GAAoBC,EAAM1I,EAAM2I,GAClC,GAQIvB,GAAKwB,EAAKC,EAAKC,EARfC,EAAYL,EAAOD,EAAQO,EAC3BC,EAAYP,EAAOD,EAAQS,EAC3BC,EAAYT,EAAOD,EAAQlC,EAC3B6C,EAAWV,EAAOD,EAAQ5B,EAC1BwC,EAAUX,EAAOD,EAAQa,EACzBC,EAASN,EAAY/D,EAAUiE,EAAYjE,EAAQlF,KAAUkF,EAAQlF,QAAekF,EAAQlF,QAAT,UACnFR,EAAUyJ,EAAY3D,EAAQA,EAAMtF,KAAUsF,EAAMtF,OACpDwJ,EAAWhK,EAAA,YAAuBA,EAAA,aAElCyJ,KAAWN,EAAS3I,EACxB,KAAKoH,IAAOuB,GAEVC,GAAOG,GAAaQ,OAA0BvH,KAAhBuH,EAAOnC,GAErCyB,GAAOD,EAAMW,EAASZ,GAAQvB,GAE9B0B,EAAMO,GAAWT,EAAMN,EAAKO,EAAK3D,GAAWkE,GAA0B,kBAAPP,GAAoBP,EAAKlD,SAASxF,KAAMiJ,GAAOA,EAE1GU,GAAQ5B,EAAU4B,EAAQnC,EAAKyB,EAAKH,EAAOD,EAAQgB,GAEnDjK,EAAQ4H,IAAQyB,GAAK1B,EAAM3H,EAAS4H,EAAK0B,GACzCM,GAAYI,EAASpC,IAAQyB,IAAKW,EAASpC,GAAOyB,GAG1D3D,GAAQK,KAAOD,EAEfmD,EAAQO,EAAI,EACZP,EAAQS,EAAI,EACZT,EAAQlC,EAAI,EACZkC,EAAQ5B,EAAI,EACZ4B,EAAQa,EAAI,GACZb,EAAQiB,EAAI,GACZjB,EAAQgB,EAAI,GACZhB,EAAQkB,EAAI,GACZ,IAAIC,GAAUnB,EAEVjC,KAAcA,SAEdqD,EAAO,SAAUlE,GACnB,MAAOa,GAAS5G,KAAK+F,GAAInB,MAAM,GAAI,IAMjCsF,EAAW3J,OAAO,KAAK4J,qBAAqB,GAAK5J,OAAS,SAAUwF,GACtE,MAAmB,UAAZkE,EAAKlE,GAAkBA,EAAGoC,MAAM,IAAM5H,OAAOwF,IAIlDqE,EAAW,SAAUrE,GACvB,OAAU3D,IAAN2D,EAAiB,KAAM/D,WAAU,yBAA2B+D,EAChE,OAAOA,IAKLsE,EAAY,SAAUtE,GACxB,MAAOxF,QAAO6J,EAASrE,KAIrBuE,EAAO/E,KAAK+E,KACZC,EAAQhF,KAAKgF,MACbC,EAAa,SAAUzE,GACzB,MAAO0E,OAAM1E,GAAMA,GAAM,GAAKA,EAAK,EAAIwE,EAAQD,GAAMvE,IAKnD2E,EAAMnF,KAAKmF,IACXC,EAAY,SAAU5E,GACxB,MAAOA,GAAK,EAAI2E,EAAIF,EAAWzE,GAAK,kBAAoB,GAKtD6E,EAAWjG,MAAMkG,SAAW,SAAiBC,GAC/C,MAAoB,SAAbb,EAAKa,IAIVC,EAAQzF,EADC,wBACmBA,EADnB,0BAET0F,EAAU,SAAUxD,GACtB,MAAOuD,GAAMvD,KAASuD,EAAMvD,QAG1ByD,GAAOnH,EAAqB,SAAUjE,GAC1C,GAAIkL,GAAQC,EAAQ,OAEhBE,EAAS5F,EAAQ4F,OACjBC,EAA8B,kBAAVD,IAETrL,EAAOD,QAAU,SAAUQ,GACxC,MAAO2K,GAAM3K,KAAU2K,EAAM3K,GAC3B+K,GAAcD,EAAO9K,KAAU+K,EAAaD,EAASrD,GAAM,UAAYzH,MAGlE2K,MAAQA,IAGbK,GAAUH,GAAK,WAEfI,GAA2B,SAAUC,GACvC,GAAIC,EASF,OAREX,GAASU,KACXC,EAAID,EAASnH,YAEG,kBAALoH,IAAoBA,IAAM5G,QAASiG,EAASW,EAAEvK,aAAauK,MAAInJ,IACtE0D,EAAUyF,IAEF,QADVA,EAAIA,EAAEH,OACUG,MAAInJ,SAETA,KAANmJ,EAAkB5G,MAAQ4G,GAMjCC,GAAsB,SAAUF,EAAU/H,GAC5C,MAAO,KAAK8H,GAAyBC,IAAW/H,IAe9CkI,GAAgB,SAAUC,EAAMC,GAClC,GAAIC,GAAiB,GAARF,EACTG,EAAoB,GAARH,EACZI,EAAkB,GAARJ,EACVK,EAAmB,GAARL,EACXM,EAAwB,GAARN,EAChBO,EAAmB,GAARP,GAAaM,EACxBE,EAASP,GAAWH,EACxB,OAAO,UAAUW,EAAOC,EAAYzD,GAQlC,IAPA,GAMInE,GAAKD,EANLyC,EAAIqD,EAAU8B,GACd3J,EAAO0H,EAASlD,GAChBD,EAAI2B,EAAK0D,EAAYzD,EAAM,GAC3BpF,EAASoH,EAAUnI,EAAKe,QACxB8I,EAAQ,EACRC,EAASV,EAASM,EAAOC,EAAO5I,GAAUsI,EAAYK,EAAOC,EAAO,OAAK/J,GAEvEmB,EAAS8I,EAAOA,IAAS,IAAIJ,GAAYI,IAAS7J,MACtDgC,EAAMhC,EAAK6J,GACX9H,EAAMwC,EAAEvC,EAAK6H,EAAOrF,GAChB0E,GACF,GAAIE,EAAQU,EAAOD,GAAS9H,MACvB,IAAIA,EAAK,OAAQmH,GACpB,IAAK,GAAG,OAAO,CACf,KAAK,GAAG,MAAOlH,EACf,KAAK,GAAG,MAAO6H,EACf,KAAK,GAAGC,EAAO5J,KAAK8B,OACf,IAAIuH,EAAU,OAAO,CAGhC,OAAOC,IAAiB,EAAIF,GAAWC,EAAWA,EAAWO,IAK7DC,GAActB,GAAK,eACnBuB,GAAa7H,MAAM3D,cACQoB,IAA3BoK,GAAWD,KAA2BhF,EAAMiF,GAAYD,MAC5D,IAAIE,IAAoB,SAAUjF,GAChCgF,GAAWD,IAAa/E,IAAO,GAK7BkF,GAAQjB,GAAc,GAEtBkB,IAAS,CADH,aAGKhI,MAAM,GAAN,KAAc,WAAcgI,IAAS,IACpD3C,EAAQA,EAAQ/C,EAAI+C,EAAQZ,EAAIuD,GAAQ,SACtCC,KAAM,SAAcR,GAClB,MAAOM,IAAM3K,KAAMqK,EAAYvK,UAAU0B,OAAS,EAAI1B,UAAU,OAAKO,OAGzEqK,GATU,OAWV,IAIII,IAAUpB,GAAc,GAExBqB,IAAW,CADH,kBAGKnI,MAAM,GAAN,UAAgB,WAAcmI,IAAW,IAC1D9C,EAAQA,EAAQ/C,EAAI+C,EAAQZ,EAAI0D,GAAU,SACxCC,UAAW,SAAmBX,GAC5B,MAAOS,IAAQ9K,KAAMqK,EAAYvK,UAAU0B,OAAS,EAAI1B,UAAU,OAAKO,OAG3EqK,GATY,YAWZ,IAKIO,IAAa,SAAUjH,GACzB,MAAOmE,GAASE,EAASrE,KAGvBkH,GAAM1H,KAAK0H,IACXC,GAAQ3H,KAAKmF,IACbyC,GAAmB,SAAUd,EAAO9I,GAEtC,MADA8I,GAAQ7B,EAAW6B,GACZA,EAAQ,EAAIY,GAAIZ,EAAQ9I,EAAQ,GAAK2J,GAAMb,EAAO9I,IA2BvD6J,GAASpC,EAAQ,QAEjBqC,GAAa,SAAU7F,GACzB,MAAO4F,IAAO5F,KAAS4F,GAAO5F,GAAOK,EAAKL,KAGxC8F,GAzBiB,SAAUC,GAC7B,MAAO,UAAUpB,EAAOqB,EAAIC,GAC1B,GAGInM,GAHA0F,EAAIgG,GAAWb,GACf5I,EAASoH,EAAU3D,EAAEzD,QACrB8I,EAAQc,GAAiBM,EAAWlK,EAIxC,IAAIgK,GAAeC,GAAMA,GAAI,KAAOjK,EAAS8I,GAG3C,IAFA/K,EAAQ0F,EAAEqF,OAEG/K,EAAO,OAAO,MAEtB,MAAMiC,EAAS8I,EAAOA,IAAS,IAAIkB,GAAelB,IAASrF,KAC5DA,EAAEqF,KAAWmB,EAAI,MAAOD,IAAelB,GAAS,CACpD,QAAQkB,IAAgB,KAUI,GAC9BG,GAAWL,GAAW,YAEtBM,GAAsB,SAAU7M,EAAQ8M,GAC1C,GAGIpG,GAHAR,EAAIgG,GAAWlM,GACfhB,EAAI,EACJwM,IAEJ,KAAK9E,IAAOR,GAAOQ,GAAOkG,IAAUjG,EAAKT,EAAGQ,IAAQ8E,EAAO5J,KAAK8E,EAEhE,MAAOoG,EAAMrK,OAASzD,GAAO2H,EAAKT,EAAGQ,EAAMoG,EAAM9N,SAC9CwN,GAAahB,EAAQ9E,IAAQ8E,EAAO5J,KAAK8E,GAE5C,OAAO8E,IAILuB,GACF,gGACA1F,MAAM,KAMJ2F,GAAcvN,OAAOwN,MAAQ,SAAc/G,GAC7C,MAAO2G,IAAoB3G,EAAG6G,KAG5BG,GAAMzN,OAAO0N,sBAEbC,IACHnH,EAAGiH,IAGAG,MAAShE,qBAETiE,IACHrH,EAAGoH,IASAE,GAAU9N,OAAO+N,OAGjBC,IAAiBF,IAAWpI,EAAO,WACrC,GAAIuI,MACA9E,KAEA/C,EAAIuE,SACJuD,EAAI,sBAGR,OAFAD,GAAE7H,GAAK,EACP8H,EAAEtG,MAAM,IAAIuG,QAAQ,SAAUC,GAAKjF,EAAEiF,GAAKA,IACd,GAArBN,MAAYG,GAAG7H,IAAWpG,OAAOwN,KAAKM,MAAY3E,IAAInB,KAAK,KAAOkG,IACtE,SAAgB9E,GAMnB,IALA,GAAIiF,GAAIvE,EAAUV,GACdkF,EAAOhN,UAAU0B,OACjB8I,EAAQ,EACRyC,EAAaZ,GAAYnH,EACzBgI,EAASX,GAAWrH,EACjB8H,EAAOxC,GAMZ,IALA,GAII7E,GAJAb,EAAIuD,EAASrI,UAAUwK,MACvB0B,EAAOe,EAAahB,GAAYnH,GAAGmB,OAAOgH,EAAWnI,IAAMmH,GAAYnH,GACvEpD,EAASwK,EAAKxK,OACdyL,EAAI,EAEDzL,EAASyL,GAAOD,EAAO/O,KAAK2G,EAAGa,EAAMuG,EAAKiB,QAAOJ,EAAEpH,GAAOb,EAAEa,GACnE,OAAOoH,IACPP,EAKJrE,GAAQA,EAAQrD,EAAIqD,EAAQZ,EAAG,UAAYkF,OAAQC,IAEnD,IAKIU,IAAQhE,GAAK,SACbiE,GAAY,SAAUnJ,GACxB,GAAIoJ,EACJ,OAAOrJ,GAAUC,SAAmC3D,MAA1B+M,EAAWpJ,EAAGkJ,OAA0BE,EAAuB,UAAZlF,EAAKlE,KAOhFqJ,GAAiB,SAAUzG,EAAM0G,EAAcC,GACjD,GAAIJ,GAAUG,GAAe,KAAMrN,WAAU,UAAYsN,EAAO,yBAChE,OAAO9G,QAAO4B,EAASzB,KAGrB4G,GAAUtE,GAAK,SAcfuE,GAAc,aAElBxF,GAAQA,EAAQ/C,EAAI+C,EAAQZ,EAfP,SAAUqG,GAC7B,GAAIC,GAAK,GACT,KACE,MAAMD,GAAKC,GACX,MAAOvM,GACP,IAEE,MADAuM,GAAGH,KAAW,GACN,MAAME,GAAKC,GACnB,MAAO3I,KACT,OAAO,GAGO,cAG2C,UAC3D4I,WAAY,SAAoBN,GAC9B,GAAI1G,GAAOyG,GAAerN,KAAMsN,EALlB,cAMVhD,EAAQ1B,EAAUpF,KAAKmF,IAAI7I,UAAU0B,OAAS,EAAI1B,UAAU,OAAKO,GAAWuG,EAAKpF,SACjFqM,EAASpH,OAAO6G,EACpB,OAAOG,IACHA,GAAYxP,KAAK2I,EAAMiH,EAAQvD,GAC/B1D,EAAK/D,MAAMyH,EAAOA,EAAQuD,EAAOrM,UAAYqM,IAerD5F,GAAQA,EAAQ/C,EAAG,UAEjB4I,OAXkB,SAAgBC,GAClC,GAAIC,GAAMvH,OAAO4B,EAASrI,OACtBwC,EAAM,GACN3D,EAAI4J,EAAWsF,EACnB,IAAIlP,EAAI,GAAKA,GAAKoP,IAAU,KAAMC,YAAW,0BAC7C,MAAMrP,EAAI,GAAIA,KAAO,KAAOmP,GAAOA,GAAc,EAAJnP,IAAO2D,GAAOwL,EAC3D,OAAOxL,KAQT,IAEI2L,IAAQpM,EAAqB,SAAUjE,GAC3C,GAAIsQ,GAAOtI,EAAK,QAGZuI,EAAUjJ,EAAUJ,EACpBW,EAAK,EACL2I,EAAe9P,OAAO8P,cAAgB,WACxC,OAAO,GAELC,GAAUrK,EAAO,WACnB,MAAOoK,GAAa9P,OAAOgQ,yBAEzBC,EAAU,SAAUzK,GACtBqK,EAAQrK,EAAIoK,GAAQ7O,OAClBxB,EAAG,OAAQ4H,EACX+I,SAGAC,EAAU,SAAU3K,EAAImG,GAE1B,IAAKpG,EAAUC,GAAK,MAAoB,gBAANA,GAAiBA,GAAmB,gBAANA,GAAiB,IAAM,KAAOA,CAC9F,KAAK0B,EAAK1B,EAAIoK,GAAO,CAEnB,IAAKE,EAAatK,GAAK,MAAO,GAE9B,KAAKmG,EAAQ,MAAO,GAEpBsE,GAAQzK,GAER,MAAOA,GAAGoK,GAAMrQ,GAEhB6Q,EAAU,SAAU5K,EAAImG,GAC1B,IAAKzE,EAAK1B,EAAIoK,GAAO,CAEnB,IAAKE,EAAatK,GAAK,OAAO,CAE9B,KAAKmG,EAAQ,OAAO,CAEpBsE,GAAQzK,GAER,MAAOA,GAAGoK,GAAMM,GAGhBG,EAAW,SAAU7K,GAEvB,MADIuK,IAAUO,EAAKC,MAAQT,EAAatK,KAAQ0B,EAAK1B,EAAIoK,IAAOK,EAAQzK,GACjEA,GAEL8K,EAAOhR,EAAOD,SAChB6P,IAAKU,EACLW,MAAM,EACNJ,QAASA,EACTC,QAASA,EACTC,SAAUA,KASRG,GAAM5J,EAAUJ,EAEhBiK,GAAM/F,GAAK,eAEXgG,GAAkB,SAAUlL,EAAImL,EAAKC,GACnCpL,IAAO0B,EAAK1B,EAAKoL,EAAOpL,EAAKA,EAAG/E,UAAWgQ,KAAMD,GAAIhL,EAAIiL,IAAOvQ,cAAc,EAAMa,MAAO4P,KAG7FE,GAAMnG,GAENoG,IACHtK,EAAGqK,IAKA5Q,GAAiB2G,EAAUJ,EAC3BuK,GAAa,SAAUlR,GACzB,GAAImR,GAAU7L,EAAMwF,SAAWxF,EAAMwF,OAAyB5F,EAAQ4F,WAChD,MAAlB9K,EAAKoR,OAAO,IAAepR,IAAQmR,IAAU/Q,GAAe+Q,EAASnR,GAAQkB,MAAO+P,GAAQtK,EAAE3G,MAOhGqR,GAAY,SAAU1L,GACxB,GAAIuG,GAASwB,GAAY/H,GACrB+I,EAAaZ,GAAYnH,CAC7B,IAAI+H,EAKF,IAJA,GAGItH,GAHAkK,EAAU5C,EAAW/I,GACrBgJ,EAASX,GAAWrH,EACpBjH,EAAI,EAED4R,EAAQnO,OAASzD,GAAOiP,EAAO/O,KAAK+F,EAAIyB,EAAMkK,EAAQ5R,OAAOwM,EAAO5J,KAAK8E,EAChF,OAAO8E,IAGPqF,GAAaxL,EAAe5F,OAAOqR,iBAAmB,SAA0B5K,EAAG6K,GACrF7L,EAAUgB,EAKV,KAJA,GAGIC,GAHA8G,EAAOD,GAAY+D,GACnBtO,EAASwK,EAAKxK,OACdzD,EAAI,EAEDyD,EAASzD,GAAGqH,EAAUJ,EAAEC,EAAGC,EAAI8G,EAAKjO,KAAM+R,EAAW5K,GAC5D,OAAOD,IAGL8K,GAAaxM,EAAQe,SACrB0L,GAAQD,IAAcA,GAAWE,gBAMjCC,GAAa5E,GAAW,YACxB6E,GAAQ,aAIRC,GAAa,WAEf,GAIIC,GAJAC,EAAS7L,EAAW,UACpB1G,EAAI+N,GAAatK,MAcrB,KAVA8O,EAAOC,MAAMC,QAAU,OACvBR,GAAMS,YAAYH,GAClBA,EAAOI,IAAM,cAGbL,EAAiBC,EAAOK,cAAcrM,SACtC+L,EAAeO,OACfP,EAAeQ,MAAMC,uCACrBT,EAAeU,QACfX,GAAaC,EAAehJ,EACrBtJ,WAAYqS,IAAA,UAAwBtE,GAAa/N,GACxD,OAAOqS,OAGLY,GAAgBxS,OAAO2L,QAAU,SAAgBlF,EAAG6K,GACtD,GAAIvF,EAQJ,OAPU,QAANtF,GACFkL,GAAA,UAAqBlM,EAAUgB,GAC/BsF,EAAS,GAAI4F,IACbA,GAAA,UAAqB,KAErB5F,EAAO2F,IAAcjL,GAChBsF,EAAS6F,SACM/P,KAAfyP,EAA2BvF,EAASqF,GAAWrF,EAAQuF,IAK5DmB,GAAanF,GAAa/F,OAAO,SAAU,aAE3CmL,GAAM1S,OAAO2S,qBAAuB,SAA6BlM,GACnE,MAAO2G,IAAoB3G,EAAGgM,KAG5BG,IACHpM,EAAGkM,IAKAG,GAAOD,GAAYpM,EACnBsM,MAAgBzM,SAEhB0M,GAA+B,gBAAVlO,SAAsBA,QAAU7E,OAAO2S,oBAC5D3S,OAAO2S,oBAAoB9N,WAE3BmO,GAAiB,SAAUxN,GAC7B,IACE,MAAOqN,IAAKrN,GACZ,MAAO5C,GACP,MAAOmQ,IAAY1O,UAInB4O,GAAM,SAA6BzN,GACrC,MAAOuN,KAAsC,mBAAvBD,GAAWrT,KAAK+F,GAA2BwN,GAAexN,GAAMqN,GAAKpG,GAAWjH,KAGpG0N,IACH1M,EAAGyM,IAGAE,GAAOnT,OAAOoT,yBAEdC,GAAMzN,EAAeuN,GAAO,SAAkC1M,EAAGC,GAGnE,GAFAD,EAAIgG,GAAWhG,GACfC,EAAIP,EAAaO,GAAG,GAChBR,EAAe,IACjB,MAAOiN,IAAK1M,EAAGC,GACf,MAAO9D,IACT,GAAIsE,EAAKT,EAAGC,GAAI,MAAOG,IAAegH,GAAWrH,EAAE/G,KAAKgH,EAAGC,GAAID,EAAEC,KAG/D4M,IACH9M,EAAG6M,IASAzD,GAAOD,GAAMT,IAoBbqE,GAASD,GAAY9M,EACrBgN,GAAO5M,EAAUJ,EACjBiN,GAASP,GAAe1M,EACxBwK,GAAUjM,EAAQ4F,OAClB+I,GAAQ3O,EAAQ4O,KAChBC,GAAaF,IAASA,GAAMG,UAE5BC,GAASpJ,GAAK,WACdqJ,GAAerJ,GAAK,eACpB8D,MAAY5E,qBACZoK,GAAiBvJ,EAAQ,mBACzBwJ,GAAaxJ,EAAQ,WACrByJ,GAAYzJ,EAAQ,cACpB0J,GAAcnU,OAAA,UACdoU,GAA+B,kBAAXpD,IACpBqD,GAAUtP,EAAQsP,QAElBC,IAAUD,KAAYA,GAAA,YAAyBA,GAAA,UAAqBE,UAGpEC,GAAgB5O,GAAgBF,EAAO,WACzC,MAES,IAFF8M,GAAcgB,MAAS,KAC5BpT,IAAK,WAAc,MAAOoT,IAAKhS,KAAM,KAAOT,MAAO,IAAK8E,MACtDA,IACD,SAAUL,EAAIyB,EAAKwN,GACtB,GAAIC,GAAYnB,GAAOY,GAAalN,EAChCyN,UAAkBP,IAAYlN,GAClCuM,GAAKhO,EAAIyB,EAAKwN,GACVC,GAAalP,IAAO2O,IAAaX,GAAKW,GAAalN,EAAKyN,IAC1DlB,GAEAmB,GAAO,SAAUhE,GACnB,GAAIiE,GAAMX,GAAWtD,GAAO6B,GAAcxB,GAAA,UAE1C,OADA4D,GAAIC,GAAKlE,EACFiE,GAGLE,GAAWV,IAAyC,gBAApBpD,IAAQ+D,SAAuB,SAAUvP,GAC3E,MAAoB,gBAANA,IACZ,SAAUA,GACZ,MAAOA,aAAcwL,KAGnBgE,GAAkB,SAAwBxP,EAAIyB,EAAKwN,GAKrD,MAJIjP,KAAO2O,IAAaa,GAAgBd,GAAWjN,EAAKwN,GACxDhP,EAAUD,GACVyB,EAAMd,EAAac,GAAK,GACxBxB,EAAUgP,GACNvN,EAAK+M,GAAYhN,IACdwN,EAAEtU,YAID+G,EAAK1B,EAAIsO,KAAWtO,EAAGsO,IAAQ7M,KAAMzB,EAAGsO,IAAQ7M,IAAO,GAC3DwN,EAAIjC,GAAciC,GAAKtU,WAAY0G,EAAc,GAAG,OAJ/CK,EAAK1B,EAAIsO,KAASN,GAAKhO,EAAIsO,GAAQjN,EAAc,OACtDrB,EAAGsO,IAAQ7M,IAAO,GAIXuN,GAAchP,EAAIyB,EAAKwN,IACzBjB,GAAKhO,EAAIyB,EAAKwN,IAErBQ,GAAoB,SAA0BzP,EAAIkB,GACpDjB,EAAUD,EAKV,KAJA,GAGIyB,GAHAuG,EAAO0D,GAAUxK,EAAI+F,GAAW/F,IAChCnH,EAAI,EACJC,EAAIgO,EAAKxK,OAENxD,EAAID,GAAGyV,GAAgBxP,EAAIyB,EAAMuG,EAAKjO,KAAMmH,EAAEO,GACrD,OAAOzB,IAEL4F,GAAU,SAAgB5F,EAAIkB,GAChC,WAAa7E,KAAN6E,EAAkB8L,GAAchN,GAAMyP,GAAkBzC,GAAchN,GAAKkB,IAEhFwO,GAAwB,SAA8BjO,GACxD,GAAIkO,GAAI3G,GAAO/O,KAAK+B,KAAMyF,EAAMd,EAAac,GAAK,GAClD,SAAIzF,OAAS2S,IAAejN,EAAK+M,GAAYhN,KAASC,EAAKgN,GAAWjN,QAC/DkO,IAAMjO,EAAK1F,KAAMyF,KAASC,EAAK+M,GAAYhN,IAAQC,EAAK1F,KAAMsS,KAAWtS,KAAKsS,IAAQ7M,KAAOkO,IAElGC,GAA4B,SAAkC5P,EAAIyB,GAGpE,GAFAzB,EAAKiH,GAAWjH,GAChByB,EAAMd,EAAac,GAAK,GACpBzB,IAAO2O,KAAejN,EAAK+M,GAAYhN,IAASC,EAAKgN,GAAWjN,GAApE,CACA,GAAIwN,GAAIlB,GAAO/N,EAAIyB,EAEnB,QADIwN,IAAKvN,EAAK+M,GAAYhN,IAAUC,EAAK1B,EAAIsO,KAAWtO,EAAGsO,IAAQ7M,KAAOwN,EAAEtU,YAAa,GAClFsU,IAELY,GAAuB,SAA6B7P,GAKtD,IAJA,GAGIyB,GAHAoG,EAAQoG,GAAOhH,GAAWjH,IAC1BuG,KACAxM,EAAI,EAED8N,EAAMrK,OAASzD,GACf2H,EAAK+M,GAAYhN,EAAMoG,EAAM9N,OAAS0H,GAAO6M,IAAU7M,GAAO2I,IAAM7D,EAAO5J,KAAK8E,EACrF,OAAO8E,IAEPuJ,GAAyB,SAA+B9P,GAM1D,IALA,GAIIyB,GAJAsO,EAAQ/P,IAAO2O,GACf9G,EAAQoG,GAAO8B,EAAQrB,GAAYzH,GAAWjH,IAC9CuG,KACAxM,EAAI,EAED8N,EAAMrK,OAASzD,IAChB2H,EAAK+M,GAAYhN,EAAMoG,EAAM9N,OAAUgW,IAAQrO,EAAKiN,GAAalN,IAAc8E,EAAO5J,KAAK8R,GAAWhN,GAC1G,OAAO8E,GAINqI,MACHpD,GAAU,WACR,GAAIxP,eAAgBwP,IAAS,KAAMvP,WAAU,+BAC7C,IAAIkP,GAAMrJ,EAAKhG,UAAU0B,OAAS,EAAI1B,UAAU,OAAKO,IACjD2T,EAAO,QAAPA,GAAiBzU,GACfS,OAAS2S,IAAaqB,EAAK/V,KAAKyU,GAAWnT,GAC3CmG,EAAK1F,KAAMsS,KAAW5M,EAAK1F,KAAKsS,IAASnD,KAAMnP,KAAKsS,IAAQnD,IAAO,GACvE6D,GAAchT,KAAMmP,EAAK9J,EAAc,EAAG9F,IAG5C,OADI6E,IAAgB0O,IAAQE,GAAcL,GAAaxD,GAAOzQ,cAAc,EAAMuV,IAAKD,IAChFb,GAAKhE,IAEdnJ,EAAUwJ,GAAA,UAAsB,WAAY,WAC1C,MAAOxP,MAAKqT,KAGdvB,GAAY9M,EAAI4O,GAChBxO,EAAUJ,EAAIwO,GACdpC,GAAYpM,EAAI0M,GAAe1M,EAAI6O,GACnCxH,GAAWrH,EAAI0O,GACfvH,GAAYnH,EAAI8O,GAEZ1P,GACF4B,EAAU2M,GAAa,uBAAwBe,IAAuB,GAGxEpE,GAAQtK,EAAI,SAAU3G,GACpB,MAAO8U,IAAKjK,GAAK7K,MAIrB4J,EAAQA,EAAQV,EAAIU,EAAQF,EAAIE,EAAQZ,GAAKuL,IAAczJ,OAAQqG,IAEnE,KAAK,GAAI0E,IAEP,iHACA9N,MAAM,KAAM6G,GAAI,EAAGiH,GAAW1S,OAASyL,IAAG/D,GAAKgL,GAAWjH,MAE5D,KAAK,GAAIkH,IAAmBpI,GAAY7C,GAAKF,OAAQ4D,GAAI,EAAGuH,GAAiB3S,OAASoL,IAAI2C,GAAW4E,GAAiBvH,MAEtH3E,GAAQA,EAAQrD,EAAIqD,EAAQZ,GAAKuL,GAAY,UAE3CwB,IAAO,SAAU3O,GACf,MAAOC,GAAK8M,GAAgB/M,GAAO,IAC/B+M,GAAe/M,GACf+M,GAAe/M,GAAO+J,GAAQ/J,IAGpC4O,OAAQ,SAAgBjB,GACtB,IAAKE,GAASF,GAAM,KAAMnT,WAAUmT,EAAM,oBAC1C,KAAK,GAAI3N,KAAO+M,IAAgB,GAAIA,GAAe/M,KAAS2N,EAAK,MAAO3N,IAE1E6O,UAAW,WAAcxB,IAAS,GAClCyB,UAAW,WAAczB,IAAS,KAGpC7K,EAAQA,EAAQrD,EAAIqD,EAAQZ,GAAKuL,GAAY,UAE3CzI,OAAQP,GAERnL,eAAgB+U,GAEhB3D,iBAAkB4D,GAElB7B,yBAA0BgC,GAE1BzC,oBAAqB0C,GAErB3H,sBAAuB4H,KAIzB5B,IAASjK,EAAQA,EAAQrD,EAAIqD,EAAQZ,IAAMuL,IAAc1O,EAAO,WAC9D,GAAIU,GAAI4K,IAIR,OAA0B,UAAnB4C,IAAYxN,KAA2C,MAAxBwN,IAAa/N,EAAGO,KAAyC,MAAzBwN,GAAW5T,OAAOoG,OACrF,QACHyN,UAAW,SAAmBrO,GAI5B,IAHA,GAEIwQ,GAAUC,EAFV/R,GAAQsB,GACRjG,EAAI,EAED+B,UAAU0B,OAASzD,GAAG2E,EAAK/B,KAAKb,UAAU/B,KAEjD,IADA0W,EAAYD,EAAW9R,EAAK,IACvBqB,EAAUyQ,QAAoBnU,KAAP2D,KAAoBsP,GAAStP,GAMzD,MALK6E,GAAS2L,KAAWA,EAAW,SAAU/O,EAAKlG,GAEjD,GADwB,kBAAbkV,KAAyBlV,EAAQkV,EAAUxW,KAAK+B,KAAMyF,EAAKlG,KACjE+T,GAAS/T,GAAQ,MAAOA,KAE/BmD,EAAK,GAAK8R,EACHpC,GAAWvS,MAAMqS,GAAOxP,MAKnC8M,GAAA,UAAqB+C,KAAiB/M,EAAMgK,GAAA,UAAsB+C,GAAc/C,GAAA,UAAqB1K,SAErGoK,GAAgBM,GAAS,UAEzBN,GAAgB1L,KAAM,QAAQ,GAE9B0L,GAAgB3L,EAAQ4O,KAAM,QAAQ,EAItC,IAAIuC,IAAQxL,GAAK,eAEbyL,GAAmD,aAA7CzM,EAAK,WAAc,MAAOpI,eAGhC8U,GAAS,SAAU5Q,EAAIyB,GACzB,IACE,MAAOzB,GAAGyB,GACV,MAAOrE,MAGPyT,GAAW,SAAU7Q,GACvB,GAAIiB,GAAG4H,EAAGlF,CACV,YAActH,KAAP2D,EAAmB,YAAqB,OAAPA,EAAc,OAEJ,iBAAtC6I,EAAI+H,GAAO3P,EAAIzG,OAAOwF,GAAK0Q,KAAsB7H,EAEzD8H,GAAMzM,EAAKjD,GAEM,WAAhB0C,EAAIO,EAAKjD,KAAsC,kBAAZA,GAAE6P,OAAuB,YAAcnN,GAK7EoN,KACJA,IAAK7L,GAAK,gBAAkB,IACxB6L,GAAO,IAAM,cACf/O,EAAUxH,OAAOS,UAAW,WAAY,WACtC,MAAO,WAAa4V,GAAS7U,MAAQ,MACpC,GAGLuP,GAAW,iBAEXA,GAAW,aAEX,IAkBIyF,OAEAC,KAGJzP,GAAMyP,GAAmB/L,GAAK,YAAa,WAAc,MAAOlJ,OAEhE,IAAIkV,IAAc,SAAUC,EAAa5H,EAAM6H,GAC7CD,EAAYlW,UAAY+R,GAAciE,IAAqBG,KAAM/P,EAAc,EAAG+P,KAClFlG,GAAgBiG,EAAa5H,EAAO,cAMlC8H,GAAa/J,GAAW,YACxBgK,GAAgB9W,OAAOS,UAEvBsW,GAAa/W,OAAOgX,gBAAkB,SAAUvQ,GAElD,MADAA,GAAIqD,EAAUrD,GACVS,EAAKT,EAAGoQ,IAAoBpQ,EAAEoQ,IACN,kBAAjBpQ,GAAE7C,aAA6B6C,YAAaA,GAAE7C,YAChD6C,EAAE7C,YAAYnD,UACdgG,YAAazG,QAAS8W,GAAgB,MAG7CG,GAAWvM,GAAK,YAChBwM,QAAa1J,MAAQ,WAAaA,QAKlC2J,GAAa,WAAc,MAAO3V,OAElC4V,GAAc,SAAUC,EAAMtI,EAAM4H,EAAaC,EAAMU,EAASC,EAAQC,GAC1Ed,GAAYC,EAAa5H,EAAM6H,EAC/B,IAeIa,GAASxQ,EAAKwP,EAfdiB,EAAY,SAAUC,GACxB,IAAKT,IAASS,IAAQC,GAAO,MAAOA,GAAMD,EAC1C,QAAQA,GACN,IAVK,OAWL,IAVO,SAUM,MAAO,YAAoB,MAAO,IAAIhB,GAAYnV,KAAMmW,IACrE,MAAO,YAAqB,MAAO,IAAIhB,GAAYnV,KAAMmW,KAEzDlH,EAAM1B,EAAO,YACb8I,EAdO,UAcMP,EACbQ,GAAa,EACbF,EAAQP,EAAK5W,UACbsX,EAAUH,EAAMX,KAAaW,EAnBjB,eAmBuCN,GAAWM,EAAMN,GACpEU,EAAWD,GAAWL,EAAUJ,GAChCW,EAAWX,EAAWO,EAAwBH,EAAU,WAArBM,MAAkCnW,GACrEqW,EAAqB,SAARnJ,EAAkB6I,EAAMO,SAAWJ,EAAUA,CAwB9D,IArBIG,IACFzB,EAAoBM,GAAWmB,EAAWzY,KAAK,GAAI4X,QACzBrX,OAAOS,WAAagW,EAAkBG,OAE9DlG,GAAgB+F,EAAmBhG,GAAK,GAEe,kBAA/BgG,GAAkBQ,KAAyBjQ,EAAMyP,EAAmBQ,GAAUE,KAItGU,GAAcE,GAjCP,WAiCkBA,EAAQlY,OACnCiY,GAAa,EACbE,EAAW,WAAoB,MAAOD,GAAQtY,KAAK+B,SAGvB0V,IAASY,IAAeF,EAAMX,MAC1DjQ,EAAM4Q,EAAOX,GAAUe,GAGzBxB,GAAWzH,GAAQiJ,EACnBxB,GAAW/F,GAAO0G,GACdG,EAMF,GALAG,GACElT,OAAQsT,EAAaG,EAAWN,EA9CzB,UA+CPlK,KAAM+J,EAASS,EAAWN,EAhDrB,QAiDLS,QAASF,GAEPT,EAAQ,IAAKvQ,IAAOwQ,GAChBxQ,IAAO2Q,IAAQpQ,EAAUoQ,EAAO3Q,EAAKwQ,EAAQxQ,QAC9CwC,GAAQA,EAAQ/C,EAAI+C,EAAQZ,GAAKqO,IAASY,GAAa/I,EAAM0I,EAEtE,OAAOA,IAGLW,GArGY,SAAUC,GACxB,MAAO,UAAUjQ,EAAMkQ,GACrB,GAGIzS,GAAGwC,EAHHzH,EAAIqH,OAAO4B,EAASzB,IACpB7I,EAAI0K,EAAWqO,GACf9Y,EAAIoB,EAAEoC,MAEV,OAAIzD,GAAI,GAAKA,GAAKC,EAAU6Y,EAAY,OAAKxW,IAC7CgE,EAAIjF,EAAE2X,WAAWhZ,GACVsG,EAAI,OAAUA,EAAI,OAAUtG,EAAI,IAAMC,IAAM6I,EAAIzH,EAAE2X,WAAWhZ,EAAI,IAAM,OAAU8I,EAAI,MACxFgQ,EAAYzX,EAAEqQ,OAAO1R,GAAKsG,EAC1BwS,EAAYzX,EAAEyD,MAAM9E,EAAGA,EAAI,GAA2B8I,EAAI,OAAzBxC,EAAI,OAAU,IAAqB,UA2FxD,EAGpBuR,IAAYnP,OAAQ,SAAU,SAAUuQ,GACtChX,KAAKiX,GAAKxQ,OAAOuQ,GACjBhX,KAAKkX,GAAK,GAET,WACD,GAEIC,GAFAlS,EAAIjF,KAAKiX,GACT3M,EAAQtK,KAAKkX,EAEjB,OAAI5M,IAASrF,EAAEzD,QAAiBjC,UAAOc,GAAWuB,MAAM,IACxDuV,EAAQP,GAAI3R,EAAGqF,GACftK,KAAKkX,IAAMC,EAAM3V,QACRjC,MAAO4X,EAAOvV,MAAM,KAG/B,IAAIwV,IAAY,SAAUxV,EAAMrC,GAC9B,OAASA,MAAOA,EAAOqC,OAAQA,IAO7ByV,GAAqBzB,GAAYhT,MAAO,QAAS,SAAUoU,EAAUb,GACvEnW,KAAKiX,GAAKhM,GAAW+L,GACrBhX,KAAKkX,GAAK,EACVlX,KAAKqT,GAAK8C,GAET,WACD,GAAIlR,GAAIjF,KAAKiX,GACTd,EAAOnW,KAAKqT,GACZ/I,EAAQtK,KAAKkX,IACjB,QAAKjS,GAAKqF,GAASrF,EAAEzD,QACnBxB,KAAKiX,OAAK5W,GACH+W,GAAU,IAEP,QAARjB,EAAuBiB,GAAU,EAAG9M,GAC5B,UAAR6L,EAAyBiB,GAAU,EAAGnS,EAAEqF,IACrC8M,GAAU,GAAI9M,EAAOrF,EAAEqF,MAC7B,SAGH0K,IAAWsC,UAAYtC,GAAWpS,MAElC8H,GAAkB,QAClBA,GAAkB,UAClBA,GAAkB,UAwClB,KAAK,GAtCD6M,IAAarO,GAAK,YAClBsO,GAAgBtO,GAAK,eACrBuO,GAAczC,GAAWpS,MAEzB8U,IACFC,aAAa,EACbC,qBAAqB,EACrBC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,eAAe,EACfC,cAAc,EACdC,sBAAsB,EACtBC,UAAU,EACVC,mBAAmB,EACnBC,gBAAgB,EAChBC,iBAAiB,EACjBC,mBAAmB,EACnBC,WAAW,EACXC,eAAe,EACfC,cAAc,EACdC,UAAU,EACVC,kBAAkB,EAClBC,QAAQ,EACRC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,EACdC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAkB,EAClBC,eAAe,EACfC,WAAW,GAGJC,GAAc3N,GAAY2L,IAAe3Z,GAAI,EAAGA,GAAI2b,GAAYlY,OAAQzD,KAAK,CACpF,GAII0H,IAJA8H,GAAOmM,GAAY3b,IACnB4b,GAAWjC,GAAanK,IACxBqM,GAAarW,EAAQgK,IACrB6I,GAAQwD,IAAcA,GAAW3a,SAErC,IAAImX,KACGA,GAAMmB,KAAa/R,EAAM4Q,GAAOmB,GAAYE,IAC5CrB,GAAMoB,KAAgBhS,EAAM4Q,GAAOoB,GAAejK,IACvDyH,GAAWzH,IAAQkK,GACfkC,IAAU,IAAKlU,KAAO4R,IAAyBjB,GAAM3Q,KAAMO,EAAUoQ,GAAO3Q,GAAK4R,GAAmB5R,KAAM,GAInG6J,GAAQtK,EAAE,aFqFI/G,KAAKqB,EAAqB5B,EAAoB,UAIrEmc,KACA,SAAU/b,GGlkDhB,GAAIgc,EAGJA,GAAK,WACJ,MAAO9Z,QAGR,KAEC8Z,EAAIA,GAAKrW,SAAS,mBAAoB,EAAGsW,MAAM,QAC9C,MAAM3Y,GAEc,gBAAXiC,UACTyW,EAAIzW,QAONvF,EAAOD,QAAUic,GHukDXE,KACA,SAAUlc,II5lDf,WAAW,YAAa,SAASsD,GAAEA,EAAE6Y,GAAG,GAAIpb,GAAEN,EAAE2b,EAAEnc,EAAEC,EAAE+J,CAAE,KAAIhK,EAAE+B,UAAU0B,OAAOzD,KAAK,GAAGmH,EAAEvE,KAAKb,UAAU/B,GAA0E,KAAtEkc,GAAG,MAAMA,EAAEE,WAAWjV,EAAE1D,QAAQ0D,EAAEvE,KAAKsZ,EAAEE,gBAAiBF,GAAEE,UAAgBjV,EAAE1D,QAAO,IAAIjD,EAAE2G,EAAEkV,YAAQ,KAAS7b,EAAE6b,IAAI,IAAIrc,EAAEQ,EAAEiD,OAAOzD,KAAKmH,EAAEvE,KAAKpC,EAAER,QAAQ,iBAAkBQ,KAAIA,EAAE,OAAO2b,EAAE,kBAAmB9Y,MAAK,MAAM7C,EAAEA,EAAE,GAAG,gBAAiBA,GAAEA,GAAG,GAAG,gBAAiBA,KAAI2b,GAAE,IAAKA,GAAGrb,EAAEb,EAAEA,EAAEwD,OAAO,IAAIjD,EAAEP,IAAI+J,EAAE/J,GAAGO,GAAGP,EAAE2C,KAAKpC,GAAGM,EAAEqb,CAAE,IAAI7V,GAAE,GAAIwI,EAAE,OAAOxI,GAAEgW,SAASjZ,EAAEiD,EAAE8V,SAASnc,EAAEqG,EAAEiW,WAAW,MAAML,MAAE,GAAOA,EAAE5V,EAAEoB,IAAI,MAAMwU,MAAE,GAAOA,EAAExU,QAAI,KAAS8U,EAAEC,OAAOD,EAAEC,MAAMnW,GAAGA,EAAE,QAAS4V,GAAE7Y,EAAE6Y,GAAG,IAAI,GAAIpb,KAAKob,GAAE7Y,EAAEvC,GAAGob,EAAEpb,EAAG,OAAOuC,GAAE,QAASvC,GAAEuC,EAAE6Y,GAAG,MAAM7Y,IAAI,kBAAmBA,GAAEA,EAAE6Y,GAAG7Y,EAAEqZ,QAAQR,GAAG,QAAS1b,GAAEM,EAAEN,GAAG,MAAO6C,GAAEvC,EAAEwb,SAASJ,EAAEA,KAAKpb,EAAEyb,YAAY/b,GAAGuB,UAAU0B,OAAO,KAAKqB,MAAM5E,KAAK6B,UAAU,GAAGjB,EAAEsb,UAAU,QAASD,GAAE9Y,IAAIA,EAAEsZ,MAAMtZ,EAAEsZ,KAAI,IAAK,GAAGC,EAAEha,KAAKS,KAAKmZ,EAAEK,mBAAmB3H,GAAGlV,GAAG,QAASA,KAAU,IAAN,GAAIqD,GAAQA,EAAEuZ,EAAEP,OAAMhZ,EAAEsZ,KAAKG,EAAEzZ,GAAG,QAASpD,GAAEoD,EAAE6Y,EAAEpb,GAAG,MAAM,gBAAiBob,IAAG,gBAAiBA,OAAE,KAAS7Y,EAAE0Z,UAAU,gBAAiBb,GAAEI,UAAUjZ,EAAE2Z,uBAAuB1W,EAAEjD,EAAE6Y,EAAEI,UAAUxb,GAAGuC,EAAE2Z,wBAAwBd,EAAEI,SAAS,QAAShW,GAAEjD,EAAE6Y,GAAG,MAAO7Y,GAAE4Z,MAAMf,GAAG7Y,EAAEiZ,SAASY,gBAAgBhB,EAAEgB,cAAc,QAASC,GAAE9Z,GAAG,GAAIvC,GAAEob,KAAK7Y,EAAEkZ,WAAYzb,GAAEsb,SAAS/Y,EAAE+Y,QAAS,IAAI5b,GAAE6C,EAAEiZ,SAASc,YAAa,QAAG,KAAS5c,EAAE,IAAI,GAAI2b,KAAK3b,OAAE,KAASM,EAAEqb,KAAKrb,EAAEqb,GAAG3b,EAAE2b,GAAI,OAAOrb,GAAE,QAASV,GAAEiD,EAAE6Y,GAAG,GAAIpb,GAAEob,EAAE3V,SAAS8W,gBAAgB,6BAA6Bha,GAAGkD,SAASE,cAAcpD,EAAG,OAAOvC,GAAEmc,IAAI5Z,EAAEvC,EAAE,QAASM,GAAEiC,GAAG,GAAI6Y,GAAE7Y,EAAEia,UAAWpB,IAAGA,EAAEqB,YAAYla,GAAG,QAAShC,GAAEgC,EAAE6Y,EAAE1b,EAAE2b,EAAEnc,GAAG,GAAG,cAAckc,IAAIA,EAAE,SAAS,QAAQA,OAAQ,IAAG,QAAQA,EAAEpb,EAAEN,EAAE,MAAMM,EAAEqb,EAAE9Y,OAAQ,IAAG,UAAU6Y,GAAGlc,EAAE,GAAG,UAAUkc,GAAG,GAAGC,GAAG,gBAAiBA,IAAG,gBAAiB3b,KAAI6C,EAAEmP,MAAMgL,QAAQrB,GAAG,IAAIA,GAAG,gBAAiBA,GAAE,CAAC,GAAG,gBAAiB3b,GAAE,IAAI,GAAIP,KAAKO,GAAEP,IAAKkc,KAAI9Y,EAAEmP,MAAMvS,GAAG,GAAI,KAAI,GAAIA,KAAKkc,GAAE9Y,EAAEmP,MAAMvS,GAAG,gBAAiBkc,GAAElc,KAAI,IAAK2V,EAAEoB,KAAK/W,GAAGkc,EAAElc,GAAG,KAAKkc,EAAElc,QAAS,IAAG,4BAA4Bic,EAAEC,IAAI9Y,EAAEoa,UAAUtB,EAAEuB,QAAQ,QAAS,IAAG,KAAKxB,EAAE,IAAI,KAAKA,EAAE,GAAG,CAAC,GAAI5V,GAAE4V,KAAKA,EAAEA,EAAEyB,QAAQ,WAAW,IAAKzB,GAAEA,EAAEgB,cAAcU,UAAU,GAAGzB,EAAE3b,GAAG6C,EAAEwa,iBAAiB3B,EAAE4B,EAAExX,GAAGjD,EAAE0a,oBAAoB7B,EAAE4B,EAAExX,IAAIjD,EAAE2a,MAAM3a,EAAE2a,SAAS9B,GAAGC,MAAO,IAAG,SAASD,GAAG,SAASA,IAAIlc,GAAGkc,IAAK7Y,GAAE,CAAC,IAAIA,EAAE6Y,GAAG,MAAMC,EAAE,GAAGA,EAAE,MAAM9Y,IAAI,MAAM8Y,IAAG,IAAKA,GAAG,cAAcD,GAAG7Y,EAAE4a,gBAAgB/B,OAAO,CAAC,GAAIiB,GAAEnd,GAAGkc,KAAKA,EAAEA,EAAEyB,QAAQ,WAAW,IAAK,OAAMxB,IAAG,IAAKA,EAAEgB,EAAE9Z,EAAE6a,kBAAkB,+BAA+BhC,EAAEgB,eAAe7Z,EAAE4a,gBAAgB/B,GAAG,kBAAmBC,KAAIgB,EAAE9Z,EAAE8a,eAAe,+BAA+BjC,EAAEgB,cAAcf,GAAG9Y,EAAE+a,aAAalC,EAAEC,QAAS9Y,GAAEgb,UAAUlC,GAAG,GAAG,QAAS2B,GAAEza,GAAG,MAAOpB,MAAK+b,IAAI3a,EAAE2F,MAAMwT,EAAE8B,OAAO9B,EAAE8B,MAAMjb,IAAIA,GAAG,QAAS4D,KAAU,IAAN,GAAI5D,GAAQA,EAAEqL,EAAE6P,SAAQ/B,EAAEgC,YAAYhC,EAAEgC,WAAWnb,GAAGA,EAAEob,mBAAmBpb,EAAEob,oBAAoB,QAASpe,GAAEgD,EAAE6Y,EAAEpb,EAAEN,EAAE2b,EAAEnc,GAAG0e,MAAMzU,EAAE,MAAMkS,OAAG,KAASA,EAAEwC,gBAAgB/U,EAAE,MAAMvG,KAAK,iBAAkBA,IAAI,IAAIpD,GAAE2e,EAAEvb,EAAE6Y,EAAEpb,EAAEN,EAAER,EAAG,OAAOmc,IAAGlc,EAAEqd,aAAanB,GAAGA,EAAEzJ,YAAYzS,KAAKye,IAAI9U,GAAE,EAAG5J,GAAGiH,KAAKhH,EAAE,QAAS2e,GAAEvb,EAAE6Y,EAAEpb,EAAEN,EAAE2b,GAAG,GAAInc,GAAEqD,EAAEpD,EAAEgK,CAAE,IAAG,MAAMiS,GAAG,iBAAkBA,KAAIA,EAAE,IAAI,gBAAiBA,IAAG,gBAAiBA,GAAE,MAAO7Y,QAAG,KAASA,EAAE0Z,WAAW1Z,EAAEia,cAAcja,EAAEwb,YAAY1C,GAAG9Y,EAAEyb,WAAW5C,IAAI7Y,EAAEyb,UAAU5C,IAAIlc,EAAEuG,SAASwY,eAAe7C,GAAG7Y,IAAIA,EAAEia,YAAYja,EAAEia,WAAW0B,aAAahf,EAAEqD,GAAG4b,EAAE5b,GAAE,KAAMrD,EAAEkf,eAAc,EAAGlf,CAAE,IAAImd,GAAEjB,EAAEI,QAAS,IAAG,kBAAmBa,GAAE,MAAOgC,GAAE9b,EAAE6Y,EAAEpb,EAAEN,EAAG,IAAGyJ,EAAE,QAAQkT,GAAG,kBAAkBA,GAAGlT,EAAEkT,GAAG,KAAK9Z,IAAIiD,EAAEjD,EAAE8Z,MAAMnd,EAAEI,EAAE+c,EAAElT,GAAG5G,GAAG,CAAC,KAAMA,EAAE+b,YAAWpf,EAAE0S,YAAYrP,EAAE+b,WAAY/b,GAAEia,YAAYja,EAAEia,WAAW0B,aAAahf,EAAEqD,GAAG4b,EAAE5b,GAAE,GAAI,GAAIjC,GAAEpB,EAAEof,WAAW/d,EAAErB,EAAEkf,cAAcpB,EAAE5B,EAAEE,QAAS,IAAG,MAAM/a,EAAE,CAACA,EAAErB,EAAEkf,gBAAiB,KAAI,GAAIjY,GAAEjH,EAAEuc,WAAWlc,EAAE4G,EAAExD,OAAOpD,KAAKgB,EAAE4F,EAAE5G,GAAGC,MAAM2G,EAAE5G,GAAGmB,MAAM,OAAOoI,GAAGkU,GAAG,IAAIA,EAAEra,QAAQ,gBAAiBqa,GAAE,IAAI,MAAM1c,OAAG,KAASA,EAAE2b,WAAW,MAAM3b,EAAEie,YAAYje,EAAE0d,WAAWhB,EAAE,KAAK1c,EAAE0d,UAAUhB,EAAE,KAAKA,GAAGA,EAAEra,QAAQ,MAAMrC,IAAIjB,EAAEH,EAAE8d,EAAEhd,EAAEN,EAAEoJ,GAAG,MAAMvI,EAAEie,yBAAyBC,EAAEvf,EAAEkc,EAAEK,WAAWlb,GAAG4I,EAAEhK,EAAED,EAAE,QAASG,GAAEkD,EAAE6Y,EAAEpb,EAAEN,EAAE2b,GAAG,GAAInc,GAAEsG,EAAE6W,EAAE/c,EAAEiB,EAAEyc,EAAEza,EAAEmc,WAAWvY,KAAK5G,KAAKF,EAAE,EAAE2I,EAAE,EAAEyW,EAAEzB,EAAEra,OAAOsY,EAAE,EAAEpL,EAAEuL,EAAEA,EAAEzY,OAAO,CAAE,IAAG,IAAI8b,EAAE,IAAI,GAAI9T,GAAE,EAAEA,EAAE8T,EAAE9T,IAAI,CAAC,GAAIqR,GAAEgB,EAAErS,GAAG0T,EAAErC,EAAEoC,cAAcrQ,EAAE8B,GAAGwO,EAAErC,EAAE+B,WAAW/B,EAAE+B,WAAWY,IAAIN,EAAEzX,IAAI,IAAK,OAAMmH,GAAG1O,IAAIE,EAAEwO,GAAGiO,IAAIqC,QAAI,KAASrC,EAAEC,WAAWZ,GAAGW,EAAEgC,UAAUY,OAAOvD,MAAMlV,EAAE8U,KAAKe,GAAG,GAAG,IAAInM,EAAE,IAAI,GAAIlF,GAAE,EAAEA,EAAEkF,EAAElF,IAAI,CAACrL,EAAE8b,EAAEzQ,GAAGpK,EAAE,IAAK,IAAIwN,GAAEzO,EAAEsH,GAAI,IAAG,MAAMmH,EAAE1O,OAAG,KAASE,EAAEwO,KAAKxN,EAAEhB,EAAEwO,GAAGxO,EAAEwO,OAAG,GAAO1O,SAAU,IAAG2I,EAAEiT,EAAE,IAAI/b,EAAE8I,EAAE9I,EAAE+b,EAAE/b,IAAI,OAAG,KAASiH,EAAEjH,IAAIC,EAAEqG,EAAEW,EAAEjH,GAAGI,EAAE+b,GAAG,CAAC9a,EAAEiF,EAAEW,EAAEjH,OAAG,GAAOA,IAAI+b,EAAE,GAAGA,IAAI/b,IAAI8I,GAAGA,GAAI,OAAMzH,EAAEud,EAAEvd,EAAEjB,EAAEU,EAAEN,GAAG2c,EAAEW,EAAErS,GAAGpK,GAAGA,IAAIgC,GAAGhC,IAAI8b,IAAI,MAAMA,EAAE9Z,EAAEqP,YAAYrR,GAAGA,IAAI8b,EAAEkC,YAAYje,EAAE+b,GAAG9Z,EAAEsc,aAAate,EAAE8b,IAAI,GAAGhd,EAAE,IAAI,GAAIsL,KAAKpL,OAAE,KAASA,EAAEoL,IAAIwT,EAAE5e,EAAEoL,IAAG,EAAI,MAAM3C,GAAGiT,OAAE,MAAU1a,EAAE4F,EAAE8U,OAAOkD,EAAE5d,GAAE,GAAI,QAAS4d,GAAE5b,EAAE6Y,GAAG,GAAI1b,GAAE6C,EAAEwb,UAAWre,GAAEqO,EAAErO,IAAI,MAAM6C,EAAE6b,eAAepe,EAAEuC,EAAE6b,cAAcU,IAAI,OAAM,IAAK1D,GAAG,MAAM7Y,EAAE6b,eAAe9d,EAAEiC,GAAGyF,EAAEzF,IAAI,QAASyF,GAAEzF,GAAiB,IAAdA,EAAEA,EAAEwc,UAAgBxc,GAAE,CAAC,GAAI6Y,GAAE7Y,EAAEyc,eAAgBb,GAAE5b,GAAE,GAAIA,EAAE6Y,GAAG,QAASqD,GAAElc,EAAE6Y,EAAEpb,GAAG,GAAIN,EAAE,KAAIA,IAAKM,GAAEob,GAAG,MAAMA,EAAE1b,IAAI,MAAMM,EAAEN,IAAIa,EAAEgC,EAAE7C,EAAEM,EAAEN,GAAGM,EAAEN,OAAG,GAAOyJ,EAAG,KAAIzJ,IAAK0b,GAAE,aAAa1b,GAAG,cAAcA,GAAGA,IAAKM,IAAGob,EAAE1b,MAAM,UAAUA,GAAG,YAAYA,EAAE6C,EAAE7C,GAAGM,EAAEN,KAAKa,EAAEgC,EAAE7C,EAAEM,EAAEN,GAAGM,EAAEN,GAAG0b,EAAE1b,GAAGyJ,GAAG,QAAS8R,GAAE1Y,EAAE6Y,EAAEpb,GAAG,GAAIN,GAAE2b,EAAE7S,EAAE7F,MAA8G,KAAvGJ,EAAEnC,WAAWmC,EAAEnC,UAAU6e,QAAQvf,EAAE,GAAI6C,GAAE6Y,EAAEpb,GAAGiJ,EAAE7J,KAAKM,EAAE0b,EAAEpb,KAAKN,EAAE,GAAIuJ,GAAEmS,EAAEpb,GAAGN,EAAE6D,YAAYhB,EAAE7C,EAAEuf,OAAOpP,GAASwL,KAAI,GAAG7S,EAAE6S,GAAG9X,cAAchB,EAAE,MAAO7C,GAAEwf,IAAI1W,EAAE6S,GAAG6D,IAAI1W,EAAE2W,OAAO9D,EAAE,GAAG3b,CAAE,OAAOA,GAAE,QAASmQ,GAAEtN,EAAE6Y,EAAEpb,GAAG,MAAOmB,MAAKoC,YAAYhB,EAAEvC,GAAG,QAAS2K,GAAEpI,EAAE6Y,EAAE1b,EAAER,EAAEC,GAAGoD,EAAE6c,MAAM7c,EAAE6c,KAAI,EAAG7c,EAAE8c,IAAIjE,EAAE0D,IAAIvc,EAAEoc,IAAIvD,EAAExU,UAAWwU,GAAE0D,UAAW1D,GAAExU,QAAI,KAASrE,EAAEgB,YAAY+b,4BAA4B/c,EAAEgd,MAAMpgB,EAAEoD,EAAEid,oBAAoBjd,EAAEid,qBAAqBjd,EAAEkd,2BAA2Bld,EAAEkd,0BAA0BrE,EAAElc,IAAIA,GAAGA,IAAIqD,EAAEmd,UAAUnd,EAAEod,MAAMpd,EAAEod,IAAIpd,EAAEmd,SAASnd,EAAEmd,QAAQxgB,GAAGqD,EAAEqd,MAAMrd,EAAEqd,IAAIrd,EAAEsd,OAAOtd,EAAEsd,MAAMzE,EAAE7Y,EAAE6c,KAAI,EAAG,IAAI1f,IAAI,IAAIA,IAAG,IAAKgc,EAAEoE,sBAAsBvd,EAAEgd,KAAKlE,EAAE9Y,GAAGyZ,EAAEzZ,EAAE,EAAEpD,IAAIa,EAAEuC,EAAE8c,IAAI9c,IAAI,QAASyZ,GAAEzZ,EAAEvC,EAAEN,EAAE2b,GAAG,IAAI9Y,EAAE6c,IAAI,CAAC,GAAIlgB,GAAEC,EAAEqG,EAAElG,EAAEiD,EAAEsd,MAAMvf,EAAEiC,EAAEwd,MAAMxf,EAAEgC,EAAEmd,QAAQ1C,EAAEza,EAAEqd,KAAKtgB,EAAEwe,EAAEvb,EAAEyd,KAAK1f,EAAEjB,EAAEkD,EAAEod,KAAKpf,EAAEyH,EAAEzF,EAAEgd,KAAKd,EAAElc,EAAE2c,IAAIrP,EAAE7H,GAAGyW,EAAEJ,EAAE9b,EAAEwb,WAAW9U,GAAE,EAAGlD,EAAE1G,CAAE,IAAGkD,EAAEgB,YAAY+b,2BAA2Bhf,EAAE8a,EAAEA,KAAK9a,GAAGiC,EAAEgB,YAAY+b,yBAAyBhgB,EAAEgB,IAAIiC,EAAEwd,MAAMzf,GAAG0H,IAAIzF,EAAEsd,MAAM7C,EAAEza,EAAEwd,MAAMjC,EAAEvb,EAAEmd,QAAQrgB,EAAE,IAAIW,GAAGuC,EAAE0d,wBAAuB,IAAK1d,EAAE0d,sBAAsB3gB,EAAEgB,EAAEC,GAAG0I,GAAE,EAAG1G,EAAE2d,qBAAqB3d,EAAE2d,oBAAoB5gB,EAAEgB,EAAEC,GAAGgC,EAAEsd,MAAMvgB,EAAEiD,EAAEwd,MAAMzf,EAAEiC,EAAEmd,QAAQnf,GAAGgC,EAAEqd,IAAIrd,EAAEyd,IAAIzd,EAAEod,IAAIpd,EAAE2c,IAAI,KAAK3c,EAAEsZ,KAAI,GAAI5S,EAAE,CAAC/J,EAAEqD,EAAE0c,OAAO3f,EAAEgB,EAAEC,GAAGgC,EAAE4d,kBAAkB5f,EAAE6a,EAAEA,KAAK7a,GAAGgC,EAAE4d,oBAAoBnY,GAAGzF,EAAE6d,0BAA0Bra,EAAExD,EAAE6d,wBAAwBpD,EAAEc,GAAI,IAAIuC,GAAErS,EAAE3H,EAAEnH,GAAGA,EAAEsc,QAAS,IAAG,kBAAmBnV,GAAE,CAAC,GAAI6C,GAAEmT,EAAEnd,EAAGC,GAAEkf,EAAElf,GAAGA,EAAEoE,cAAc8C,GAAG6C,EAAEtC,KAAKzH,EAAEwf,IAAIhU,EAAExL,EAAE+J,EAAE,EAAE3I,GAAE,IAAK8f,EAAElhB,EAAEoD,EAAEwb,WAAW5e,EAAE8b,EAAE5U,EAAE6C,EAAE3I,GAAGpB,EAAE+f,IAAI/f,EAAE+f,KAAKT,EAAEtf,EAAEmhB,IAAI/d,EAAEoI,EAAExL,EAAE+J,EAAE,EAAE3I,GAAE,GAAIyb,EAAE7c,EAAE,EAAEO,GAAE,IAAKsO,EAAE7O,EAAEogB,SAAU/Z,GAAEqK,EAAEwQ,EAAEhC,EAAEgC,IAAI7a,EAAEjD,EAAEwb,WAAW,OAAOlO,GAAG,IAAI7P,KAAKwF,IAAIA,EAAEuY,WAAW,MAAM/P,EAAEzO,EAAEiG,EAAEtG,EAAEqB,EAAEb,IAAIsI,EAAE6H,GAAGA,EAAE2M,YAAW,GAAK,IAAG3M,GAAG7B,IAAI6B,GAAG1Q,IAAIkf,EAAE,CAAC,GAAIjK,GAAEvE,EAAE2M,UAAWpI,IAAGpG,IAAIoG,IAAIA,EAAE8J,aAAalQ,EAAE6B,GAAGwQ,IAAIxQ,EAAEkO,WAAW,KAAKI,EAAEtO,GAAE,KAAM,GAAGwQ,GAAGtS,EAAEsS,GAAG9d,EAAEgd,KAAKvR,EAAEA,IAAIqN,EAAE,CAAa,IAAZ,GAAIvG,GAAEvS,EAAEuZ,EAAEvZ,EAAQuZ,EAAEA,EAAEwE,MAAKxL,EAAEgH,GAAGyD,KAAKvR,CAAEA,GAAE+P,WAAWjJ,EAAE9G,EAAEkO,sBAAsBpH,EAAEvR,aAAoH,KAAtGyE,GAAGtI,EAAEkO,EAAE9L,KAAKS,GAAG0G,IAAI1G,EAAEge,oBAAoBhe,EAAEge,mBAAmBvD,EAAEc,EAAE/X,GAAG2V,EAAE8E,aAAa9E,EAAE8E,YAAYje,IAAUA,EAAEke,IAAI9d,QAAOJ,EAAEke,IAAIlF,MAAMnc,KAAKmD,EAAGqb,IAAGvC,GAAGlV,KAAK,QAASkY,GAAE9b,EAAE6Y,EAAEpb,EAAEN,GAAsF,IAAnF,GAAI2b,GAAE9Y,GAAGA,EAAEwb,WAAW7e,EAAEmc,EAAElc,EAAEoD,EAAEiD,EAAE6V,GAAG9Y,EAAE2Z,wBAAwBd,EAAEI,SAASlc,EAAEkG,EAAElF,EAAE+b,EAAEjB,GAASC,IAAI/b,IAAI+b,EAAEA,EAAEiF,MAAKhhB,EAAE+b,EAAE9X,cAAc6X,EAAEI,QAAS,OAAOH,IAAG/b,KAAKI,GAAG2b,EAAE0C,aAAapT,EAAE0Q,EAAE/a,EAAE,EAAEN,EAAEN,GAAG6C,EAAE8Y,EAAEkE,OAAOrgB,IAAIsG,IAAIuI,EAAE7O,GAAGqD,EAAEpD,EAAE,MAAMkc,EAAEJ,EAAEG,EAAEI,SAASlb,EAAEN,GAAGuC,IAAI8Y,EAAE6D,MAAM7D,EAAE6D,IAAI3c,EAAEpD,EAAE,MAAMwL,EAAE0Q,EAAE/a,EAAE,EAAEN,EAAEN,GAAG6C,EAAE8Y,EAAEkE,KAAKpgB,GAAGoD,IAAIpD,IAAIA,EAAE4e,WAAW,KAAKI,EAAEhf,GAAE,KAAMoD,EAAE,QAASwL,GAAExL,GAAGmZ,EAAEgF,eAAehF,EAAEgF,cAAcne,EAAG,IAAI6Y,GAAE7Y,EAAEgd,IAAKhd,GAAE6c,KAAI,EAAG7c,EAAEoe,sBAAsBpe,EAAEoe,uBAAuBpe,EAAEgd,KAAK,IAAK,IAAI7f,GAAE6C,EAAEwb,UAAWre,GAAEqO,EAAErO,GAAG0b,IAAI,MAAMA,EAAEgD,eAAepe,EAAEob,EAAEgD,cAAcU,IAAI,MAAMvc,EAAE2c,IAAI9D,EAAE9a,EAAE8a,GAAG5S,EAAE1G,KAAKS,GAAGyF,EAAEoT,IAAIpb,EAAEuC,EAAE8c,IAAI,MAAM,QAASpW,GAAE1G,EAAE6Y,GAAGja,KAAK0a,KAAI,EAAG1a,KAAKue,QAAQtE,EAAEja,KAAK0e,MAAMtd,EAAEpB,KAAK4e,MAAM5e,KAAK4e,UAAU5e,KAAKsf,OAAO,QAAS1a,GAAExD,EAAE6Y,EAAEpb,GAAG,MAAOT,GAAES,EAAEuC,MAAK,EAAG6Y,GAAE,GAAI,QAASiF,KAAI,SAAS,GAAIrS,GAAE,aAAa0N,KAAKrV,KAAK6C,KAAKkL,EAAE,kBAAmBlT,SAAQA,QAAQiB,UAAUM,KAAK5B,KAAKK,QAAQiB,WAAWkB,WAAWyR,EAAE,yDAAyDgH,KAAKlO,KAAKgQ,EAAE,EAAEzU,GAAE,EAAGL,GAAE,EAAGN,IAAK4S,GAAEnS,EAAE7I,WAAWwgB,SAAS,SAASre,EAAEvC,GAAGmB,KAAK6e,MAAM7e,KAAK6e,IAAI7e,KAAK4e,OAAO5e,KAAK4e,MAAM3E,EAAEA,KAAKja,KAAK4e,OAAO,kBAAmBxd,GAAEA,EAAEpB,KAAK4e,MAAM5e,KAAK0e,OAAOtd,GAAGvC,GAAGmB,KAAKsf,IAAI3e,KAAK9B,GAAGqb,EAAEla,OAAO0f,YAAY,SAASte,GAAGA,GAAGpB,KAAKsf,IAAI3e,KAAKS,GAAGyZ,EAAE7a,KAAK,IAAI8d,OAAO,cAAe,IAAI7Q,IAAG0P,EAAEvb,EAAEoD,cAAcpD,EAAEue,aAAaphB,EAAEqhB,UAAUV,EAAEW,UAAU/X,EAAEgW,OAAOlZ,EAAEkb,SAAS/hB,EAAEgiB,QAAQxF,EAA8Bzc,GAAOD,QAAQoP,MJuyDxrQ+S,KACA,aAMAC,KACA,SAAUniB,EAAQD,GK/yDxB,GAAAqiB,GAAAC,GAOC,WACA,YAIA,SAASC,KAGR,IAAK,GAFDC,MAEKtiB,EAAI,EAAGA,EAAI+B,UAAU0B,OAAQzD,IAAK,CAC1C,GAAIgL,GAAMjJ,UAAU/B,EACpB,IAAKgL,EAAL,CAEA,GAAIuX,SAAiBvX,EAErB,IAAgB,WAAZuX,GAAoC,WAAZA,EAC3BD,EAAQ1f,KAAKoI,OACP,IAAInG,MAAMkG,QAAQC,IAAQA,EAAIvH,OAAQ,CAC5C,GAAI+e,GAAQH,EAAWvgB,MAAM,KAAMkJ,EAC/BwX,IACHF,EAAQ1f,KAAK4f,OAER,IAAgB,WAAZD,EACV,IAAK,GAAI7a,KAAOsD,GACXyX,EAAOviB,KAAK8K,EAAKtD,IAAQsD,EAAItD,IAChC4a,EAAQ1f,KAAK8E,IAMjB,MAAO4a,GAAQ7Z,KAAK,KA3BrB,GAAIga,MAAYthB,mBA8BM,KAAXpB,GAA0BA,EAAOD,SAC3CuiB,EAAWK,QAAUL,EACrBtiB,EAAOD,QAAUuiB,IAGjBM,SAAArgB,MAAA8f,EAAA,WACC,MAAOC,IADRvgB,MAAAhC,EAAAqiB,MAAApiB,EAAAD,QAAAsiB,QL4zDIQ,KACA,SAAU7iB,EAAQwB,EAAqB5B,GAE7C,YA8DA,SAASkjB,GAA2BngB,EAAMxC,GAAQ,IAAKwC,EAAQ,KAAM,IAAIogB,gBAAe,4DAAgE,QAAO5iB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BwC,EAAPxC,EAElO,QAAS6iB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI/gB,WAAU,iEAAoE+gB,GAAeD,GAAS9hB,UAAYT,OAAO2L,OAAO6W,GAAcA,EAAW/hB,WAAamD,aAAe7C,MAAOwhB,EAAUpiB,YAAY,EAAO4G,UAAU,EAAM7G,cAAc,KAAesiB,IAAYxiB,OAAOyiB,eAAiBziB,OAAOyiB,eAAeF,EAAUC,GAAcD,EAASG,UAAYF,GA/DjexiB,OAAOC,eAAea,EAAqB,cAAgBC,OAAO,GAGlE,IAAI4hB,GAAazjB,EAAoB,QAQjC0jB,GAJQ1jB,EAAoB,QAIhBA,EAAoB,SAChC2jB,EAAiC3jB,EAAoBmB,EAAEuiB,EAGtC1jB,GAAoB,OMh3DzC4jB,KAASC,eARPC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,gBAINP,SAAf,CNo5DmB5jB,GAAoB,OAIRA,GAAoBU,EAAEkB,EAAqB,UAAW,WAAa,MAAOwiB,IO/5DzG,IPg7DIC,IOh7DSC,EAAQ,QA0JfxjB,OAAA2iB,EAAA,UAAK/E,UAAU,kBAAf,uHP4xDF6F,EOvxDCzjB,OAAA2iB,EAAA,UAAKzQ,IAAI,gBAAgBwR,IAAI,MPyxD9BC,EOxxDC3jB,OAAA2iB,EAAA,QAAG/E,UAAU,SP0xDdgG,EOxxDE5jB,OAAA2iB,EAAA,UAAKzQ,IAAI,uBAAuBwR,IAAI,aP0xDtCG,EO1vDS7jB,OAAA2iB,EAAA,WAAM/E,UAAU,iBAAhB,uFPgwDTkG,EOpuDE9jB,OAAA2iB,EAAA,UAAK/E,UAAU,OACd5d,OAAA2iB,EAAA,UAAKzQ,IAAI,sBACTlS,OAAA2iB,EAAA,yBA9NcoB,EP28DL,SAAUC,GAGzB,QAASD,KAKR,IAAK,GAJDE,GAAOC,EAAOC,EAITC,EAAO9iB,UAAU0B,OAAQkB,EAAOE,MAAMggB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC5EngB,EAAKmgB,GAAQ/iB,UAAU+iB,EAGxB,OAAeJ,GAASC,EAAQ9B,EAA2B5gB,KAAMwiB,EAAWvkB,KAAK4B,MAAM2iB,GAAaxiB,MAAM+F,OAAOrD,KAAiBggB,EOt9DnI9D,OACCkE,KAAM,GACNC,YAAa,GACbC,gBACAC,QAAS,GACTC,eAAgB,GAEhBC,eAAe,EACfC,gBAAgB,EAChBC,eAAe,EACfC,WAAW,EACXC,WAAW,GPu9DRb,EOp9DJc,mBAAoB,EPo9DiBd,EOl9DrCe,MAAQ,GPk9D+Cf,EOh9DvDgB,aAAe,SAACtiB,GACfshB,EAAKjD,UAAWqD,KAAM1hB,EAAEwG,OAAOrI,QAC/BmjB,EAAKiB,aPi9DFjB,EO98DJkB,oBAAsB,SAACxiB,GACtBshB,EAAKjD,UAAWwD,QAAS7hB,EAAEwG,OAAOrI,SP+8D/BmjB,EO58DJmB,2BAA6B,SAACziB,GAC7BshB,EAAKjD,UAAWyD,eAAgB9hB,EAAEwG,OAAOrI,SP68DtCmjB,EO18DJiB,UAAY,WACXjB,EAAKjD,UAAWsD,YAAa,IAC7B,IAAIe,GAAMpB,EAAK9D,MAAMoE,aAAanY,KAAK,SAAAiY,GAAA,MAAQA,GAAKA,OAASJ,EAAK9D,MAAMkE,MACpEgB,IACHpB,EAAKjD,UAAWsD,YAAae,EAAIf,eP88D/BL,EO18DJQ,eAAiB,WAChB,GAAMa,GAAkBzC,EAAS0C,WAAWrG,IAAI,gBAC1CsG,GACLnB,KAAMJ,EAAK9D,MAAMqE,QACjBF,YAAaL,EAAK9D,MAAMsE,eAErBR,GAAK9D,MAAMqE,QAAQzhB,OAAS,GAAKkhB,EAAK9D,MAAMsE,eAAe1hB,OAAS,IACvEuiB,EAAgBpjB,KAAKsjB,GACrBvB,EAAKjD,UACJwD,QAAS,GACTC,eAAgB,GAChBG,eAAe,MP68DdX,EOx8DJwB,SAAW,WACV,GAAMH,GAAkBzC,EAAS0C,WAAWrG,IAAI,eAEhDqF,cAAamB,IAAI,SAAA5lB,GAAA,MAAKwlB,GAAgBpjB,KAAKpC,MP28DxCmkB,EOx8DJ0B,WAAa,WACZ1B,EAAKjD,UAAW6D,WAAW,KPy8DxBZ,EOt8DJ2B,WAAa,WACZ3B,EAAKjD,UAAW6D,WAAW,KPu8DxBZ,EOp8DJa,UAAY,WACXb,EAAKjD,UAAW8D,WAAW,KPq8DxBb,EOl8DJ4B,UAAY,WACX5B,EAAKjD,UAAW8D,WAAW,KPm8DxBb,EOh8DJ6B,iBAAmB,WAClB7B,EAAKjD,UACJ2D,gBAAiBV,EAAK9D,MAAMwE,eAC5BC,eAAe,EACfP,KAAM,GACNC,YAAa,KAEdL,EAAKc,kBAAoBd,EAAKc,mBAAoB,EAAQthB,WAAW,iBAAMwgB,GAAKc,mBAAoB,GAAM,MPm8DvGd,EOh8DJ8B,cAAgB,WACf9B,EAAKjD,UAAW0D,eAAe,KPi8D5BT,EO97DJ+B,QAAU,WACTC,GAAGC,IACFC,OAAQ,QACRC,4DAA6DxhB,OAAOyhB,SAASD,KAA7E,SAA0FnC,EAAK9D,MAAMkE,MACnG,eP+7DAJ,EOv5DJqC,gBAAkB,WACjB,GAAMC,IAAS,SAAU,SAAU,MAAO,WAAY,MAAO,MAAO,OAAQ,SAC5E,OAAOA,GAAMxhB,KAAKgF,MAAMhF,KAAKqC,SAAWmf,EAAMxjB,UP60DvCmhB,EA2EJF,EAAQ7B,EAA2B8B,EAAOC,GAqK9C,MA3PA7B,GAAUyB,EAAKC,GAyFfD,EAAItjB,UOl8DJud,kBPk8DkC,WOl8Dd,GAAAyI,GAAAjlB,IACnBA,MAAKyjB,MAAQzjB,KAAK+kB,kBACMzD,EAAS0C,WAAWrG,IAAI,gBAChCuH,GAAG,QAAS,SAACC,GAC5B,GAAInC,GAAemC,EAAS1iB,MACxB2iB,IACJ,KAAK,GAAInB,KAAQjB,GAChBoC,EAASzkB,MACRgF,GAAIse,EACJnB,KAAME,EAAaiB,GAAMnB,KACzBC,YAAaC,EAAaiB,GAAMlB,aAGlCkC,GAAKxF,UACJuD,aAAcoC,GAGf,IAAMC,GAAM,GAAIC,KAAIjiB,OAAOyhB,SAASD,MAC9BU,EAAcF,EAAIG,aAAa5mB,IAAI,OACrC2mB,KACHN,EAAKxF,UAAWwD,QAASsC,IACzBN,EAAKxF,UAAWqD,KAAMyC,IACtBN,EAAKtB,YACLsB,EAAKxF,UAAW0D,eAAe,OAIjC7e,SAASmhB,QAAU,SAACrkB,GACO,kBAAvBA,EAAEwG,OAAOwU,WACgB,wBAAvBhb,EAAEwG,OAAOwU,WACc,YAAvBhb,EAAEwG,OAAOwU,WACT6I,EAAKzB,mBACTyB,EAAKV,qBPs8DRhC,EAAItjB,UO57DJ6e,OP47DuB,WO37DtB,GAAMsC,GAAa4B,EAAQ,QACrB0D,EAActF,GAChBuF,0BAA0B,EAC1BC,MAAS5lB,KAAK4e,MAAM0E,WAGxB,OACC9kB,QAAA2iB,EAAA,UAAK5Q,MAAO,eACTvQ,KAAK4e,MAAMuE,cACZ3kB,OAAA2iB,EAAA,UAAK/E,UAAU,aAAf2F,EAECvjB,OAAA2iB,EAAA,UAAK/E,UAAU,gBAAgByJ,QAAS7lB,KAAKwkB,eAAgBxkB,KAAKyjB,QAC1D,GAEVjlB,OAAA2iB,EAAA,UAAK/E,UAAU,aAAf6F,EAAAE,EAGC3jB,OAAA2iB,EAAA,UAAK/E,UAAU,QAAfgG,EAEC5jB,OAAA2iB,EAAA,UAAK/E,UAAU,qBACd5d,OAAA2iB,EAAA,UAAK/E,UAAWsJ,GAAhB,wBACAlnB,OAAA2iB,EAAA,UACC/E,UAAU,OACV1L,IAAI,mBACJwR,IAAI,OACJ4D,aAAc9lB,KAAKokB,WACnB2B,aAAc/lB,KAAKqkB,WACnBwB,QAAS7lB,KAAKukB,mBAGdvkB,KAAK4e,MAAMwE,eACV5kB,OAAA2iB,EAAA,UAAK/E,UAAU,iBACd5d,OAAA2iB,EAAA,YACCpa,KAAK,OACLif,YAAY,eACZzmB,MAAOS,KAAK4e,MAAMqE,QAClBgD,QAASjmB,KAAK4jB,oBACdxH,UAAU,wBAEX5d,OAAA2iB,EAAA,eACC6E,YAAY,iBACZzmB,MAAOS,KAAK4e,MAAMsE,eAClB+C,QAASjmB,KAAK6jB,2BACdzH,UAAU,wBAEX5d,OAAA2iB,EAAA,UAAK/E,UAAU,UAAUyJ,QAAS7lB,KAAKkjB,gBAAvC,aAGCljB,KAAK4e,MAAMyE,cACV7kB,OAAA2iB,EAAA,UAAK/E,UAAU,aAAfiG,EAEC7jB,OAAA2iB,EAAA,UAAK/E,UAAU,cAAcyJ,QAAS7lB,KAAKukB,kBAA3C,SACQ,IAEH,KAKXvkB,KAAK4e,MAAMwE,eAYF,GAXT5kB,OAAA2iB,EAAA,cACC3iB,OAAA2iB,EAAA,YACCpa,KAAK,OACLqV,UAAU,oBACV7c,MAAOS,KAAK4e,MAAMkE,KAClBmD,QAASjmB,KAAK0jB,aACdsC,YAAY,iBAEbxnB,OAAA2iB,EAAA,UAAK/E,UAAU,6BACd5d,OAAA2iB,EAAA,eAAOnhB,KAAK4e,MAAMmE,eAItBvkB,OAAA2iB,EAAA,UAAK/E,UAAU,iBACd7L,MAAOvQ,KAAK4e,MAAM2E,UAAY,cAAgB,GAC9CuC,aAAc9lB,KAAKujB,UACnBwC,aAAc/lB,KAAKskB,WAHpBhC,EAUEtiB,KAAK4e,MAAM2E,UACV/kB,OAAA2iB,EAAA,UAAK/E,UAAU,cACd5d,OAAA2iB,EAAA,QAAG0D,KAAK,IAAIgB,QAAS7lB,KAAKykB,SAA1B,YACAjmB,OAAA2iB,EAAA,QAAG0D,KAAA,qCAA2CxhB,OAAOyhB,SAASD,KAA3D,SAAwE7kB,KAAK4e,MAAMkE,KAAnF,sBAA8Glb,OAAO,UAAxH,aACQ,OPk+DT2a,GOvsEyB1C,cP8sE3BqG,KACA,SAAUpoB,EAAQD,EAASH,GAEjC,YQhiEA,SAASyoB,KA8CL,QAASC,GAAU/nB,GAEfgoB,EADUC,EAAMjoB,GACE,gBACXioB,GAAMjoB,GAKjB,QAASkoB,GAAIloB,GAKT,MAJAA,GAAOA,GAAQmoB,EACVC,EAASH,EAAOjoB,IACjBqoB,EAAM,UAAYroB,KAAMA,IAErBioB,EAAMjoB,GAGjB,QAASkjB,GAAcxB,EAAS4G,GAE5B,OADkB,KAAdA,IAAwBA,MACH,gBAAdA,IAAwC,OAAdA,EAAoB,CAErDA,GAActoB,KADDsoB,GAGjB,GAAIC,GAASD,MACOtmB,KAAhBumB,EAAOvoB,OACPuoB,EAAOvoB,KAAOmoB,EAElB,IAAInoB,GAAOuoB,EAAOvoB,IACE,iBAATA,IAAsBA,GAC7BqoB,EAAM,gBAAkBroB,KAAMA,EAAO,KAErCooB,EAASH,EAAOjoB,IAChBqoB,EAAM,iBAAmBroB,KAAMA,GAEnC,IAAIkoB,GAAM,GAAIM,GAAgB9G,EAAS6G,EAAQE,EAG/C,OAFAR,GAAMjoB,GAAQkoB,EACdF,EAAaE,EAAK,UACXA,EAKX,QAASQ,KAEL,MAAOvoB,QAAOwN,KAAKsa,GAAOnC,IAAI,SAAU9lB,GAAQ,MAAOioB,GAAMjoB,KASjE,QAAS2oB,GAAgB3oB,EAAM4oB,EAAeC,EAAmBC,EAASC,GAElEC,EAAUhpB,IACVqoB,EAAM,qBAAuBroB,KAAMA,IAGvCgpB,EAAUhpB,GAAQ4oB,EAEdE,IACAG,EAASjpB,GAAQ8oB,EAEjBJ,IAAUpa,QAAQ,SAAU4Z,GACxBY,EAAQ,SAAUZ,KAI1B,IAAIgB,GAAmB,SAAUC,GAQ7B,WAPe,KAAXA,IAAqBA,EAASjB,KACN,kBAAjBiB,GAAOnpB,IAGdqoB,EAAM,wBAA0BroB,KAAMA,IAGnCmpB,EAAOnpB,KAiBlB,YAd0BgC,KAAtB6mB,GACAO,EAAKC,WAAWH,EAAkBL,GAGtCJ,EAAUzoB,GAAQkpB,EAElBV,EAAgB5nB,UAAUZ,GAAQ,WAE9B,IAAK,GADDqE,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAGzB,OADiBlX,MAAK2nB,YAAYjoB,KAAKM,KAAM3B,GAC3BwB,MAAMG,KAAMonB,EAAyB1kB,OAEpD6kB,EAOX,QAASK,GAAgBlJ,GACrB+I,EAAKC,WAAWZ,EAAWpI,GAE/B,QAAS2H,GAAaE,EAAKsB,GACvBrpB,OAAOwN,KAAKqb,GAAW1a,QAAQ,SAAUmb,GAErC,GAAIC,GAAcC,EAAazB,EAAKuB,EAChB,QAAhBC,GAGAT,EAASS,IACTT,EAASS,GAAaF,EAAWtB,KAM7C,QAASyB,GAAazB,EAAKloB,GACvB,GAAa,eAATA,EACA,MAAO,KAEX,IAAI4pB,GAAa5pB,CAEjB,OAAO4pB,GAxKX,GAAI3B,MACAe,KACAC,KAEAR,GAGAhoB,YAAY,EACZyiB,cAAeA,EACfgF,IAAKA,EACL2B,KAAM,KACNnoB,QAASA,QACTooB,YAAa,QACbC,UACIpB,gBAAiBA,EACjBb,wBAAyBA,EACzByB,gBAAiBA,EACjBS,gBAAiBZ,EAAKY,gBACtBC,aAAcb,EAAKa,aACnBlC,UAAWA,EACXiB,UAAWA,EACXW,aAAcA,EACdjoB,QAASA,QACT2nB,WAAYD,EAAKC,YAmJzB,OAtIAD,GAAKc,cAAczB,EAAW,UAAWA,GAEzCtoB,OAAOC,eAAeqoB,EAAW,QAC7BloB,IAAKmoB,IAqBTU,EAAKc,cAAchC,EAAK,MAAOM,GA8GxBC,EAEX,QAASJ,GAAM8B,EAAM9lB,GACjB,KAAM+lB,GAAUte,OAAOqe,EAAM9lB,GArWjClE,OAAOC,eAAeZ,EAAS,cAAgB0B,OAAO,GAEtD,IAAIkoB,GAAOzF,EAAQ,QAiBfyE,EAAW,SAAU3C,EAAKre,GAC1B,MAAOjH,QAAOS,UAAUC,eAAejB,KAAK6lB,EAAKre,IAEjD+gB,EAAqB,YAGrBkC,KAKA7B,EAAiC,WACjC,QAASA,GAAgB9G,EAAS6G,EAAQ+B,GACtC3oB,KAAK2oB,UAAYA,EACjB3oB,KAAK4oB,YAAa,EAClB5oB,KAAK6oB,aACL7oB,KAAK8oB,MAAQlC,EAAOvoB,KACpB2B,KAAK+oB,gCACDnC,EAAOoC,iCAAkC,EAC7ChpB,KAAKipB,SAAWxB,EAAKyB,SAASnJ,GAC9B/f,KAAKooB,UACDe,OAAQ,WAAc,MAAO,OAC7BC,SAAU,WAAc,MAAOrpB,SAAQiB,QAAQ,OAC/CqoB,qBAAsB,SAAUhnB,GAC5BqmB,EAAe/nB,KAAK0B,GAEpBH,WAAW,WAAc,MAAOG,GAAS,OAAU,IAEvDinB,wBAAyB,SAAUjnB,GAC/BqmB,EAAiBA,EAAea,OAAO,SAAUC,GAAY,MAAOA,KAAannB,MAyH7F,MArHA7D,QAAOC,eAAeooB,EAAgB5nB,UAAW,kCAC7CL,IAAK,WAED,MADAoB,MAAKypB,kBACEzpB,KAAK+oB,iCAEhB9U,IAAK,SAAUxR,GACXzC,KAAKypB,kBACLzpB,KAAK+oB,gCAAkCtmB,GAE3C9D,YAAY,EACZD,cAAc,IAElBF,OAAOC,eAAeooB,EAAgB5nB,UAAW,QAC7CL,IAAK,WAED,MADAoB,MAAKypB,kBACEzpB,KAAK8oB,OAEhBnqB,YAAY,EACZD,cAAc,IAElBF,OAAOC,eAAeooB,EAAgB5nB,UAAW,WAC7CL,IAAK,WAED,MADAoB,MAAKypB,kBACEzpB,KAAKipB,UAEhBtqB,YAAY,EACZD,cAAc,IAElBmoB,EAAgB5nB,UAAUyqB,OAAS,WAC/B,GAAIhH,GAAQ1iB,IACZ,OAAO,IAAID,SAAQ,SAAUiB,GACzB0hB,EAAM+G,kBACNzoB,MAECM,KAAK,WACNohB,EAAMiG,UAAUP,SAAShC,UAAU1D,EAAMoG,MACzC,IAAIa,KAMJ,OALAnrB,QAAOwN,KAAK0W,EAAMmG,WAAWlc,QAAQ,SAAUid,GAC3CprB,OAAOwN,KAAK0W,EAAMmG,UAAUe,IAAajd,QAAQ,SAAUkd,GACvDF,EAAShpB,KAAK+hB,EAAMmG,UAAUe,GAAYC,QAG3C9pB,QAAQuC,IAAIqnB,EAASxF,IAAI,SAAU2F,GACtC,MAAOA,GAAQ1B,SAASsB,cAG3BpoB,KAAK,WACNohB,EAAMkG,YAAa,EACnBlG,EAAMmG,gBAiBdhC,EAAgB5nB,UAAU0oB,YAAc,SAAUtpB,EAAM0rB,GAMpD,OAL2B,KAAvBA,IAAiCA,EAAqBvD,GAC1DxmB,KAAKypB,kBACAzpB,KAAK6oB,UAAUxqB,KAChB2B,KAAK6oB,UAAUxqB,QAEd2B,KAAK6oB,UAAUxqB,GAAM0rB,GAAqB,CAK3C,GAAIC,GAAoBD,IAAuBvD,EACzCuD,MACA1pB,EAENL,MAAK6oB,UAAUxqB,GAAM0rB,GADP/pB,KAAK2oB,UAAUP,SAASf,UAAUhpB,GAAM2B,KAAMA,KAAKiqB,UAAUvqB,KAAKM,MAAOgqB,GAG3F,MAAOhqB,MAAK6oB,UAAUxqB,GAAM0rB,IAMhClD,EAAgB5nB,UAAUgrB,UAAY,SAAUvL,GAC5C,GAAIgE,GAAQ1iB,IAEZynB,GAAKC,WAAW1nB,KAAM0e,GAUlBA,EAAM0J,UAAY1J,EAAM0J,SAASiB,uBACjCX,EAAe/b,QAAQ,SAAU6c,GAC7B9G,EAAM0F,SAASiB,qBAAqBG,KAExCd,OAOR7B,EAAgB5nB,UAAUwqB,gBAAkB,WACpCzpB,KAAK4oB,YACLlC,EAAM,eAAiBroB,KAAM2B,KAAK8oB,SAGnCjC,IAIVA,GAAgB5nB,UAAUZ,MAAQwoB,EAAgB5nB,UAAU8gB,SACzD8G,EAAgB5nB,UAAUyqB,QAC1BxmB,QAAQgnB,IAAI,KA0LhB,IAAIC,IACAC,SAAU,iFAEVC,eAAgB,6BAChBC,gBAAiB,8CACjBC,cAAe,+CACfC,oBAAqB,sDACrBC,mBAAoB,0LAIpBC,uBAAwB,2EAGxBjC,EAAY,GAAIhB,GAAKa,aAAa,MAAO,WAAY6B,GAiBrD7I,EAAW6E,GAEftoB,GAAQyjB,SAAWA,EACnBzjB,EAAQ4iB,QAAUa,GRkuEZqJ,KACA,SAAU7sB,EAAQD,EAASH,GAEjC,YShuEA,SAASwrB,GAAS3pB,GACd,MAAOmoB,OAAWrnB,GAAWd,GAcjC,QAASmoB,GAAW9f,EAAQZ,GACxB,KAAMA,YAAkBxI,SACpB,MAAOwI,EAEX,QAAQA,EAAO5E,aACX,IAAKwoB,MAGD,GAAIC,GAAY7jB,CAChB,OAAO,IAAI4jB,MAAKC,EAAUC,UAC9B,KAAKtsB,YACc6B,KAAXuH,IACAA,KAEJ,MACJ,KAAKhF,OAEDgF,IACA,MACJ,SAEI,MAAOZ,GAEf,IAAK,GAAI+jB,KAAQ/jB,GACRA,EAAO9H,eAAe6rB,KAG3BnjB,EAAOmjB,GAAQrD,EAAW9f,EAAOmjB,GAAO/jB,EAAO+jB,IAEnD,OAAOnjB,GAGX,QAAS2gB,GAAczE,EAAKiH,EAAMxrB,GAC9BukB,EAAIiH,GAAQxrB,EA0HhB,QAASyrB,GAAaC,GAClB,GAAI1gB,GAAS2gB,CAEb,OADAA,GAAoBD,EACb1gB,EAgGX,QAAS4gB,GAASnd,GACd,MAAOmE,MAAKiZ,MAAMpd,GAOtB,QAASqE,GAAUgZ,GACf,MAAOlZ,MAAKE,UAAUgZ,GAwnB1B,QAAShD,GAAgBiD,EAAUC,GAC/B,GAAIC,GAAQ,GAAIC,IAAcH,EAAUC,EACxC,OAAOC,GAAME,UAAUhsB,KAAK8rB,GAyKhC,QAASG,GAAMhsB,EAAIisB,GACf,MAAO,YAEH,IAAK,GADDlpB,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAEzBnX,SAAQiB,SAAQ,GACXM,KAAK,WACN3B,EAAGE,UAAM,GAAQ6C,KAEhBmpB,MAAM,SAAUnF,GACbkF,GACAA,EAAQlF,MAQxB,QAASoF,GAAqBhI,EAAK7N,GAC/B,GAAmB,gBAAR6N,IAA4B,OAARA,EAC3B,OAAO,CAEX,KAAK,GAAI5M,GAAK,EAAG6U,EAAY9V,EAASiB,EAAK6U,EAAUvqB,OAAQ0V,IAAM,CAC/D,GAAI0N,GAASmH,EAAU7U,EACvB,IAAI0N,IAAUd,IAA8B,kBAAhBA,GAAIc,GAC5B,OAAO,EAGf,OAAO,EAEX,QAASnlB,MAuDT,QAASusB,GAAYC,EAAQC,EAAgBC,GACzC,GAAIC,GAAU,EACd,QAAQF,GACJ,IAAK,GACDE,EAAUD,EAAW,QAAU,OAC/B,MACJ,KAAK,GACDC,EAAUD,EAAW,SAAW,QAChC,MACJ,KAAK,GACDC,EAAUD,EAAW,QAAU,OAC/B,MACJ,KAAK,GACDC,EAAUD,EAAW,SAAW,QAChC,MACJ,SACI,KAAM,IAAI7oB,OAAM,mEAExB,GAAIojB,GAAQuF,EAAS,WAErB,OADAvF,IAAS0F,EAAU,aASvB,QAASC,GAAkBJ,EAAQC,EAAgBpF,EAAWqF,GAC1D,KAAIA,GAAarF,IAEQ,gBAAdA,GAEP,KAAM,IAAIxjB,OAAM0oB,EAAYC,EAAQC,EAAgBC,GAChD,uCAGZ,QAASG,GAAiBL,EAAQC,EAAgB7pB,EAAU8pB,GACxD,KAAIA,GAAa9pB,IAEO,kBAAbA,GACP,KAAM,IAAIiB,OAAM0oB,EAAYC,EAAQC,EAAgBC,GAChD,6BAEZ,QAASI,GAAsBN,EAAQC,EAAgB3N,EAAS4N,GAC5D,KAAIA,GAAa5N,KAEM,gBAAZA,IAAoC,OAAZA,GAC/B,KAAM,IAAIjb,OAAM0oB,EAAYC,EAAQC,EAAgBC,GAChD,mCAjlDZ3tB,OAAOC,eAAeZ,EAAS,cAAgB0B,OAAO,GAEtD,IAAIitB,GAAUxK,EAAQ,QAoBlByK,GAIAC,aAAa,EAIbC,YAAY,EAIZxE,YAAa,qBAuBbyE,EAAS,SAAUC,EAAWC,GAC9B,IAAKD,EACD,KAAME,GAAeD,IAQzBC,EAAiB,SAAUD,GAC3B,MAAO,IAAIxpB,OAAM,sBACbmpB,EAAUtE,YACV,6BACA2E,IAkBJE,EAAoB,SAAUhf,GAG9B,IAAK,GADD9G,MAAU/H,EAAI,EACTpB,EAAI,EAAGA,EAAIiQ,EAAIxM,OAAQzD,IAAK,CACjC,GAAII,GAAI6P,EAAI+I,WAAWhZ,EACnBI,GAAI,IACJ+I,EAAI/H,KAAOhB,EAENA,EAAI,MACT+I,EAAI/H,KAAQhB,GAAK,EAAK,IACtB+I,EAAI/H,KAAY,GAAJhB,EAAU,KAED,QAAX,MAAJA,IACNJ,EAAI,EAAIiQ,EAAIxM,QACwB,QAAX,MAAxBwM,EAAI+I,WAAWhZ,EAAI,KAEpBI,EAAI,QAAgB,KAAJA,IAAe,KAA6B,KAAtB6P,EAAI+I,aAAahZ,IACvDmJ,EAAI/H,KAAQhB,GAAK,GAAM,IACvB+I,EAAI/H,KAAShB,GAAK,GAAM,GAAM,IAC9B+I,EAAI/H,KAAShB,GAAK,EAAK,GAAM,IAC7B+I,EAAI/H,KAAY,GAAJhB,EAAU,MAGtB+I,EAAI/H,KAAQhB,GAAK,GAAM,IACvB+I,EAAI/H,KAAShB,GAAK,EAAK,GAAM,IAC7B+I,EAAI/H,KAAY,GAAJhB,EAAU,KAG9B,MAAO+I,IAQP+lB,EAAoB,SAAUC,GAG9B,IADA,GAAIhmB,MAAU4P,EAAM,EAAG3Y,EAAI,EACpB2Y,EAAMoW,EAAM1rB,QAAQ,CACvB,GAAI2rB,GAAKD,EAAMpW,IACf,IAAIqW,EAAK,IACLjmB,EAAI/I,KAAOsI,OAAO2mB,aAAaD,OAE9B,IAAIA,EAAK,KAAOA,EAAK,IAAK,CAC3B,GAAIE,GAAKH,EAAMpW,IACf5P,GAAI/I,KAAOsI,OAAO2mB,cAAoB,GAALD,IAAY,EAAW,GAALE,OAElD,IAAIF,EAAK,KAAOA,EAAK,IAAK,CAE3B,GAAIE,GAAKH,EAAMpW,KACXwW,EAAKJ,EAAMpW,KACXyW,EAAKL,EAAMpW,KACXoE,IAAY,EAALiS,IAAW,IAAa,GAALE,IAAY,IAAa,GAALC,IAAY,EAAW,GAALC,GAChE,KACJrmB,GAAI/I,KAAOsI,OAAO2mB,aAAa,OAAUlS,GAAK,KAC9ChU,EAAI/I,KAAOsI,OAAO2mB,aAAa,OAAc,KAAJlS,QAExC,CACD,GAAImS,GAAKH,EAAMpW,KACXwW,EAAKJ,EAAMpW,IACf5P,GAAI/I,KAAOsI,OAAO2mB,cAAoB,GAALD,IAAY,IAAa,GAALE,IAAY,EAAW,GAALC,IAG/E,MAAOpmB,GAAIV,KAAK,KAGhBgnB,GAMAC,eAAgB,KAMhBC,eAAgB,KAMhBC,sBAAuB,KAMvBC,sBAAuB,KAMvBC,kBAAmB,iEAKnBC,mBACI,MAAO9tB,MAAK6tB,kBAAoB,OAMpCE,2BACI,MAAO/tB,MAAK6tB,kBAAoB,OAUpCG,mBAAoC,kBAATC,MAU3BC,gBAAiB,SAAUC,EAAOC,GAC9B,IAAKxrB,MAAMkG,QAAQqlB,GACf,KAAM7qB,OAAM,gDAEhBtD,MAAKquB,OAKL,KAAK,GAJDC,GAAgBF,EACdpuB,KAAK2tB,sBACL3tB,KAAKytB,eACPc,KACKxwB,EAAI,EAAGA,EAAIowB,EAAM3sB,OAAQzD,GAAK,EAAG,CACtC,GAAIywB,GAAQL,EAAMpwB,GACd0wB,EAAY1wB,EAAI,EAAIowB,EAAM3sB,OAC1BktB,EAAQD,EAAYN,EAAMpwB,EAAI,GAAK,EACnC4wB,EAAY5wB,EAAI,EAAIowB,EAAM3sB,OAC1BotB,EAAQD,EAAYR,EAAMpwB,EAAI,GAAK,EACnC8wB,EAAWL,GAAS,EACpBM,GAAqB,EAARN,IAAiB,EAAME,GAAS,EAC7CK,GAAqB,GAARL,IAAiB,EAAME,GAAS,EAC7CI,EAAmB,GAARJ,CACVD,KACDK,EAAW,GACNP,IACDM,EAAW,KAGnBR,EAAO5tB,KAAK2tB,EAAcO,GAAWP,EAAcQ,GAAWR,EAAcS,GAAWT,EAAcU,IAEzG,MAAOT,GAAO/nB,KAAK,KAUvByoB,aAAc,SAAUd,EAAOC,GAG3B,MAAIpuB,MAAKguB,qBAAuBI,EACrBc,KAAKf,GAETnuB,KAAKkuB,gBAAgBlB,EAAkBmB,GAAQC,IAU1De,aAAc,SAAUhB,EAAOC,GAG3B,MAAIpuB,MAAKguB,qBAAuBI,EACrBH,KAAKE,GAETlB,EAAkBjtB,KAAKovB,wBAAwBjB,EAAOC,KAiBjEgB,wBAAyB,SAAUjB,EAAOC,GACtCpuB,KAAKquB,OAKL,KAAK,GAJDgB,GAAgBjB,EACdpuB,KAAK4tB,sBACL5tB,KAAK0tB,eACPa,KACKxwB,EAAI,EAAGA,EAAIowB,EAAM3sB,QAAS,CAC/B,GAAIgtB,GAAQa,EAAclB,EAAM1e,OAAO1R,MACnC0wB,EAAY1wB,EAAIowB,EAAM3sB,OACtBktB,EAAQD,EAAYY,EAAclB,EAAM1e,OAAO1R,IAAM,IACvDA,CACF,IAAI4wB,GAAY5wB,EAAIowB,EAAM3sB,OACtBotB,EAAQD,EAAYU,EAAclB,EAAM1e,OAAO1R,IAAM,KACvDA,CACF,IAAIuxB,GAAYvxB,EAAIowB,EAAM3sB,OACtB+tB,EAAQD,EAAYD,EAAclB,EAAM1e,OAAO1R,IAAM,EAEzD,MADEA,EACW,MAATywB,GAA0B,MAATE,GAA0B,MAATE,GAA0B,MAATW,EACnD,KAAMjsB,QAIV,IADAirB,EAAO5tB,KADS6tB,GAAS,EAAME,GAAS,GAE3B,IAATE,EAAa,CAGb,GADAL,EAAO5tB,KADU+tB,GAAS,EAAK,IAASE,GAAS,GAEpC,IAATW,EAAa,CAEbhB,EAAO5tB,KADUiuB,GAAS,EAAK,IAAQW,KAKnD,MAAOhB,IAOXF,MAAO,WACH,IAAKruB,KAAKytB,eAAgB,CACtBztB,KAAKytB,kBACLztB,KAAK0tB,kBACL1tB,KAAK2tB,yBACL3tB,KAAK4tB,wBAEL,KAAK,GAAI7vB,GAAI,EAAGA,EAAIiC,KAAK8tB,aAAatsB,OAAQzD,IAC1CiC,KAAKytB,eAAe1vB,GAAKiC,KAAK8tB,aAAare,OAAO1R,GAClDiC,KAAK0tB,eAAe1tB,KAAKytB,eAAe1vB,IAAMA,EAC9CiC,KAAK2tB,sBAAsB5vB,GAAKiC,KAAK+tB,qBAAqBte,OAAO1R,GACjEiC,KAAK4tB,sBAAsB5tB,KAAK2tB,sBAAsB5vB,IAAMA,EAExDA,GAAKiC,KAAK6tB,kBAAkBrsB,SAC5BxB,KAAK0tB,eAAe1tB,KAAK+tB,qBAAqBte,OAAO1R,IAAMA,EAC3DiC,KAAK4tB,sBAAsB5tB,KAAK8tB,aAAare,OAAO1R,IAAMA,MAW1EyxB,EAAe,SAAUxhB,GACzB,GAAIyhB,GAAYzC,EAAkBhf,EAClC,OAAOwf,GAAOU,gBAAgBuB,GAAW,IAWzCC,EAAe,SAAU1hB,GACzB,IACI,MAAOwf,GAAO2B,aAAanhB,GAAK,GAEpC,MAAO5M,GACH8B,QAAQwjB,MAAM,wBAAyBtlB,GAE3C,MAAO,OAuFPuuB,EAA0B,WAC1B,QAASA,KACL,GAAIjN,GAAQ1iB,IACZA,MAAKkB,QAAU,GAAInB,SAAQ,SAAUiB,EAASC,GAC1CyhB,EAAM1hB,QAAUA,EAChB0hB,EAAMzhB,OAASA,IAkCvB,MAxBA0uB,GAAS1wB,UAAU2wB,aAAe,SAAUvtB,GACxC,GAAIqgB,GAAQ1iB,IACZ,OAAO,UAAU0mB,EAAOnnB,GAChBmnB,EACAhE,EAAMzhB,OAAOylB,GAGbhE,EAAM1hB,QAAQzB,GAEM,kBAAb8C,KAGPqgB,EAAMxhB,QAAQ2qB,MAAM,cAGI,IAApBxpB,EAASb,OACTa,EAASqkB,GAGTrkB,EAASqkB,EAAOnnB,MAKzBowB,KAsBPE,EAAQ,WACR,MAAyB,mBAAdC,YAC2B,gBAA3BA,WAAA,UACAA,UAAA,UAGA,IAWXC,EAAkB,WAClB,MAA0B,mBAAX1sB,YACRA,OAAA,SAAqBA,OAAA,UAAsBA,OAAA,WAC9C,oDAAoD0R,KAAK8a,MAO7DG,EAAgB,WAChB,MAA6B,gBAAdF,YAAmD,gBAAzBA,UAAA,SAOzCG,EAAY,WACZ,OAAiC,IAA1BxD,EAAUC,cAAiD,IAAzBD,EAAUE,YAGnDuD,EAAa,gBACbhF,EAAoB5nB,MACnB4nB,kBAODiF,EAA+B,WAC/B,QAASA,GAAc3H,EAAMsE,GAIzB,GAHA9sB,KAAKwoB,KAAOA,EACZxoB,KAAK8sB,QAAUA,EAEX5B,EAEAA,EAAkBlrB,KAAMsoB,EAAarpB,UAAUkL,YAG/C,KAGI,KAAM7G,OAAMzD,MAAMG,KAAMF,WAE5B,MAAOmD,GACHjD,KAAK3B,KAAO6xB,EAEZ1xB,OAAOC,eAAeuB,KAAM,SACxBpB,IAAK,WACD,MAAOqE,GAAImtB,UAM/B,MAAOD,KAGXA,GAAclxB,UAAYT,OAAO2L,OAAO7G,MAAMrE,WAC9CkxB,EAAclxB,UAAUmD,YAAc+tB,EACtCA,EAAclxB,UAAUZ,KAAO6xB,CAC/B,IAAI5H,GAA8B,WAC9B,QAASA,GAAawB,EAAShC,EAAaqC,GACxCnqB,KAAK8pB,QAAUA,EACf9pB,KAAK8nB,YAAcA,EACnB9nB,KAAKmqB,OAASA,EAEdnqB,KAAKqwB,QAAU,gBAgCnB,MA7BA/H,GAAarpB,UAAUkL,OAAS,SAAUqe,EAAM6C,OAC/BhrB,KAATgrB,IACAA,KAEJ,IAEIyB,GAFAwD,EAAWtwB,KAAKmqB,OAAO3B,GACvB+H,EAAWvwB,KAAK8pB,QAAU,IAAMtB,CAGhCsE,OADazsB,KAAbiwB,EACU,QAGAA,EAAS5U,QAAQ1b,KAAKqwB,QAAS,SAAUG,EAAO/qB,GACtD,GAAIlG,GAAQ8rB,EAAK5lB,EACjB,YAAiBpF,KAAVd,EAAsBA,EAAMsF,WAAa,IAAMY,EAAM,OAIpEqnB,EAAU9sB,KAAK8nB,YAAc,KAAOgF,EAAU,KAAOyD,EAAW,IAChE,IAAIttB,GAAM,GAAIktB,GAAcI,EAAUzD,EAGtC,KAAK,GAAI/B,KAAQM,GACRA,EAAKnsB,eAAe6rB,IAA4B,MAAnBA,EAAKloB,OAAO,KAG9CI,EAAI8nB,GAAQM,EAAKN,GAErB,OAAO9nB,IAEJqlB,KA6DPmI,EAAS,SAAUC,GACnB,GAAIC,MAAaC,KAAavF,KAAWwF,EAAY,EACrD,KACI,GAAIC,GAAQJ,EAAMtqB,MAAM,IACxBuqB,GAASxF,EAASuE,EAAaoB,EAAM,KAAO,IAC5CF,EAASzF,EAASuE,EAAaoB,EAAM,KAAO,IAC5CD,EAAYC,EAAM,GAClBzF,EAAOuF,EAAA,YACAA,GAAA,EAEX,MAAOxvB,IACP,OACIuvB,OAAQA,EACRC,OAAQA,EACRvF,KAAMA,EACNwF,UAAWA,IAcfE,EAAmB,SAAUL,GAC7B,GAAkFM,GAAYC,EAA1FL,EAASH,EAAOC,GAAOE,OAAQM,EAAM1tB,KAAKgF,OAAM,GAAIoiB,OAAOE,UAAY,IAgB3E,OAfsB,gBAAX8F,KACHA,EAAO1xB,eAAe,OACtB8xB,EAAaJ,EAAA,IAERA,EAAO1xB,eAAe,SAC3B8xB,EAAaJ,EAAA,KAGbK,EADAL,EAAO1xB,eAAe,OACT0xB,EAAA,IAIAI,EAAa,OAG1BE,GAAOF,GAAcC,GAAcC,GAAOF,GAAcE,GAAOD,GAYvEE,EAAe,SAAUT,GACzB,GAAIE,GAASH,EAAOC,GAAOE,MAC3B,OAAsB,gBAAXA,IAAuBA,EAAO1xB,eAAe,OAC7C0xB,EAAA,IAEJ,MAYPQ,EAAgB,SAAUV,GAC1B,GAAIW,GAAUZ,EAAOC,GAAQE,EAASS,EAAQT,MAC9C,SAASA,GAA4B,gBAAXA,IAAuBA,EAAO1xB,eAAe,QAYvEoyB,EAAU,SAAUZ,GACpB,GAAIE,GAASH,EAAOC,GAAOE,MAC3B,OAAyB,gBAAXA,KAA2C,IAApBA,EAAA,OAmBrCnK,EAAW,SAAU3C,EAAKre,GAC1B,MAAOjH,QAAOS,UAAUC,eAAejB,KAAK6lB,EAAKre,IAEjD8rB,EAAU,SAAUzN,EAAKre,GACzB,GAAIjH,OAAOS,UAAUC,eAAejB,KAAK6lB,EAAKre,GAC1C,MAAOqe,GAAIre,IAUfkH,EAAU,SAAUmX,EAAKnkB,GACzB,IAAK,GAAI8F,KAAOqe,GACRtlB,OAAOS,UAAUC,eAAejB,KAAK6lB,EAAKre,IAC1C9F,EAAG8F,EAAKqe,EAAIre,KAUpB+rB,EAAS,SAAUC,EAAOC,GAI1B,MAHA/kB,GAAQ+kB,EAAS,SAAUjsB,EAAKlG,GAC5BkyB,EAAMhsB,GAAOlG,IAEVkyB,GAOPE,EAAQ,SAAU7N,GAClB,MAAO0N,MAAW1N,IASlB8N,EAAkB,SAAU9N,GAC5B,MAAsB,gBAARA,IAA4B,OAARA,GAElC+N,EAAU,SAAU/N,GACpB,IAAK,GAAIre,KAAOqe,GACZ,OAAO,CAEX,QAAO,GAEPgO,EAAW,SAAUhO,GACrB,GAAIiO,GAAK,CACT,KAAK,GAAItsB,KAAOqe,GACZiO,GAEJ,OAAOA,IAEP5N,EAAM,SAAUL,EAAK9e,EAAGgtB,GACxB,GAAIxvB,KACJ,KAAK,GAAIiD,KAAOqe,GACZthB,EAAIiD,GAAOT,EAAE/G,KAAK+zB,EAASlO,EAAIre,GAAMA,EAAKqe,EAE9C,OAAOthB,IAEPyvB,EAAU,SAAUnO,EAAKnkB,EAAIuyB,GAC7B,IAAK,GAAIzsB,KAAOqe,GACZ,GAAInkB,EAAG1B,KAAKi0B,EAAUpO,EAAIre,GAAMA,EAAKqe,GACjC,MAAOre,IAKf0sB,EAAY,SAAUrO,EAAKnkB,EAAIuyB,GAC/B,GAAIzsB,GAAMwsB,EAAQnO,EAAKnkB,EAAIuyB,EAC3B,OAAOzsB,IAAOqe,EAAIre,IAElB2sB,EAAY,SAAUtO,GACtB,IAAK,GAAIre,KAAOqe,GACZ,MAAOre,IAGX4sB,EAAY,SAAUvO,GACtB,GAAIthB,MACAzE,EAAI,CACR,KAAK,GAAI0H,KAAOqe,GACZthB,EAAIzE,KAAO+lB,EAAIre,EAEnB,OAAOjD,IAUP8vB,EAAQ,SAAUxO,EAAKnkB,GACvB,IAAK,GAAI8F,KAAOqe,GACZ,GAAItlB,OAAOS,UAAUC,eAAejB,KAAK6lB,EAAKre,KACrC9F,EAAG8F,EAAKqe,EAAIre,IACb,OAAO,CAInB,QAAO,GA0BP8sB,GAAc,SAAUC,GACxB,GAAIC,KAWJ,OAVA9lB,GAAQ6lB,EAAmB,SAAU/sB,EAAKlG,GAClCqD,MAAMkG,QAAQvJ,GACdA,EAAMoN,QAAQ,SAAU+lB,GACpBD,EAAO9xB,KAAKgyB,mBAAmBltB,GAAO,IAAMktB,mBAAmBD,MAInED,EAAO9xB,KAAKgyB,mBAAmBltB,GAAO,IAAMktB,mBAAmBpzB,MAGhEkzB,EAAOjxB,OAAS,IAAMixB,EAAOjsB,KAAK,KAAO,IAQhDosB,GAAoB,SAAUL,GAC9B,GAAIzO,KAQJ,OAPayO,GAAY7W,QAAQ,MAAO,IAAItV,MAAM,KAC3CuG,QAAQ,SAAU+jB,GACrB,GAAIA,EAAO,CACP,GAAIjrB,GAAMirB,EAAMtqB,MAAM,IACtB0d,GAAIre,EAAI,IAAMA,EAAI,MAGnBqe,GA2CP+O,GAAsB,WACtB,QAASA,KAKL7yB,KAAK8yB,WAAa,EAEtB,MAAOD,MA0CPE,GAAsB,SAAUC,GAEhC,QAASD,KACL,GAAIrQ,GAAQsQ,EAAO/0B,KAAK+B,OAASA,IAOjC0iB,GAAMuQ,UAMNvQ,EAAMwQ,QAONxQ,EAAMyQ,MAMNzQ,EAAM0Q,QAIN1Q,EAAM2Q,OAAS,EAIf3Q,EAAM4Q,OAAS,EACf5Q,EAAMoQ,UAAY,GAClBpQ,EAAM0Q,KAAK,GAAK,GAChB,KAAK,GAAIr1B,GAAI,EAAGA,EAAI2kB,EAAMoQ,YAAa/0B,EACnC2kB,EAAM0Q,KAAKr1B,GAAK,CAGpB,OADA2kB,GAAM6Q,QACC7Q,EAkLX,MA7NA8J,GAAQgH,UAAUT,EAAMC,GA6CxBD,EAAK9zB,UAAUs0B,MAAQ,WACnBvzB,KAAKizB,OAAO,GAAK,WACjBjzB,KAAKizB,OAAO,GAAK,WACjBjzB,KAAKizB,OAAO,GAAK,WACjBjzB,KAAKizB,OAAO,GAAK,UACjBjzB,KAAKizB,OAAO,GAAK,WACjBjzB,KAAKqzB,OAAS,EACdrzB,KAAKszB,OAAS,GAQlBP,EAAK9zB,UAAUw0B,UAAY,SAAUC,EAAKC,GACjCA,IACDA,EAAa,EAEjB,IAAI5rB,GAAI/H,KAAKmzB,EAEb,IAAmB,gBAARO,GACP,IAAK,GAAI31B,GAAI,EAAGA,EAAI,GAAIA,IASpBgK,EAAEhK,GACG21B,EAAI3c,WAAW4c,IAAe,GAC1BD,EAAI3c,WAAW4c,EAAa,IAAM,GAClCD,EAAI3c,WAAW4c,EAAa,IAAM,EACnCD,EAAI3c,WAAW4c,EAAa,GACpCA,GAAc,MAIlB,KAAK,GAAI51B,GAAI,EAAGA,EAAI,GAAIA,IACpBgK,EAAEhK,GACG21B,EAAIC,IAAe,GACfD,EAAIC,EAAa,IAAM,GACvBD,EAAIC,EAAa,IAAM,EACxBD,EAAIC,EAAa,GACzBA,GAAc,CAItB,KAAK,GAAI51B,GAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,GAAIkc,GAAIlS,EAAEhK,EAAI,GAAKgK,EAAEhK,EAAI,GAAKgK,EAAEhK,EAAI,IAAMgK,EAAEhK,EAAI,GAChDgK,GAAEhK,GAA+B,YAAxBkc,GAAK,EAAMA,IAAM,IAS9B,IAAK,GAFDjV,GAAG4H,EALHvI,EAAIrE,KAAKizB,OAAO,GAChBpsB,EAAI7G,KAAKizB,OAAO,GAChB90B,EAAI6B,KAAKizB,OAAO,GAChB70B,EAAI4B,KAAKizB,OAAO,GAChB7xB,EAAIpB,KAAKizB,OAAO,GAGXl1B,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACrBA,EAAI,GACAA,EAAI,IACJiH,EAAI5G,EAAKyI,GAAK1I,EAAIC,GAClBwO,EAAI,aAGJ5H,EAAI6B,EAAI1I,EAAIC,EACZwO,EAAI,YAIJ7O,EAAI,IACJiH,EAAK6B,EAAI1I,EAAMC,GAAKyI,EAAI1I,GACxByO,EAAI,aAGJ5H,EAAI6B,EAAI1I,EAAIC,EACZwO,EAAI,WAGZ,IAAIqN,IAAO5V,GAAK,EAAMA,IAAM,IAAOW,EAAI5D,EAAIwL,EAAI7E,EAAEhK,GAAM,UACvDqD,GAAIhD,EACJA,EAAID,EACJA,EAA8B,YAAxB0I,GAAK,GAAOA,IAAM,GACxBA,EAAIxC,EACJA,EAAI4V,EAERja,KAAKizB,OAAO,GAAMjzB,KAAKizB,OAAO,GAAK5uB,EAAK,WACxCrE,KAAKizB,OAAO,GAAMjzB,KAAKizB,OAAO,GAAKpsB,EAAK,WACxC7G,KAAKizB,OAAO,GAAMjzB,KAAKizB,OAAO,GAAK90B,EAAK,WACxC6B,KAAKizB,OAAO,GAAMjzB,KAAKizB,OAAO,GAAK70B,EAAK,WACxC4B,KAAKizB,OAAO,GAAMjzB,KAAKizB,OAAO,GAAK7xB,EAAK,YAE5C2xB,EAAK9zB,UAAU20B,OAAS,SAAU1G,EAAO2G,GAErC,GAAa,MAAT3G,EAAJ,KAGmB7sB,KAAfwzB,IACAA,EAAa3G,EAAM1rB,OAQvB,KANA,GAAIsyB,GAAmBD,EAAa7zB,KAAK8yB,UACrCj0B,EAAI,EAEJ60B,EAAM1zB,KAAKkzB,KACXa,EAAQ/zB,KAAKqzB,OAEVx0B,EAAIg1B,GAAY,CAKnB,GAAa,GAATE,EACA,KAAOl1B,GAAKi1B,GACR9zB,KAAKyzB,UAAUvG,EAAOruB,GACtBA,GAAKmB,KAAK8yB,SAGlB,IAAqB,gBAAV5F,IACP,KAAOruB,EAAIg1B,GAIP,GAHAH,EAAIK,GAAS7G,EAAMnW,WAAWlY,KAC5Bk1B,IACAl1B,EACEk1B,GAAS/zB,KAAK8yB,UAAW,CACzB9yB,KAAKyzB,UAAUC,GACfK,EAAQ,CAER,YAKR,MAAOl1B,EAAIg1B,GAIP,GAHAH,EAAIK,GAAS7G,EAAMruB,KACjBk1B,IACAl1B,EACEk1B,GAAS/zB,KAAK8yB,UAAW,CACzB9yB,KAAKyzB,UAAUC,GACfK,EAAQ,CAER,QAKhB/zB,KAAKqzB,OAASU,EACd/zB,KAAKszB,QAAUO,IAGnBd,EAAK9zB,UAAU+0B,OAAS,WACpB,GAAIA,MACAC,EAA0B,EAAdj0B,KAAKszB,MAEjBtzB,MAAKqzB,OAAS,GACdrzB,KAAK4zB,OAAO5zB,KAAKozB,KAAM,GAAKpzB,KAAKqzB,QAGjCrzB,KAAK4zB,OAAO5zB,KAAKozB,KAAMpzB,KAAK8yB,WAAa9yB,KAAKqzB,OAAS,IAG3D,KAAK,GAAIt1B,GAAIiC,KAAK8yB,UAAY,EAAG/0B,GAAK,GAAIA,IACtCiC,KAAKkzB,KAAKn1B,GAAiB,IAAZk2B,EACfA,GAAa,GAEjBj0B,MAAKyzB,UAAUzzB,KAAKkzB,KAEpB,KAAK,GADDr0B,GAAI,EACCd,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,GAAIkP,GAAI,GAAIA,GAAK,EAAGA,GAAK,EAC1B+mB,EAAOn1B,GAAMmB,KAAKizB,OAAOl1B,IAAMkP,EAAK,MAClCpO,CAGV,OAAOm1B,IAEJjB,GACTF,IAkBEpH,GAA+B,WAM/B,QAASA,GAAcH,EAAUC,GAC7B,GAAI7I,GAAQ1iB,IACZA,MAAKk0B,aACLl0B,KAAKm0B,gBACLn0B,KAAKo0B,cAAgB,EAErBp0B,KAAKq0B,KAAOt0B,QAAQiB,UACpBhB,KAAKs0B,WAAY,EACjBt0B,KAAKurB,cAAgBA,EAIrBvrB,KAAKq0B,KACA/yB,KAAK,WACNgqB,EAAS5I,KAERmJ,MAAM,SAAUzqB,GACjBshB,EAAMgE,MAAMtlB,KAyIpB,MAtIAqqB,GAAcxsB,UAAUmW,KAAO,SAAU7V,GACrCS,KAAKu0B,gBAAgB,SAAUC,GAC3BA,EAASpf,KAAK7V,MAGtBksB,EAAcxsB,UAAUynB,MAAQ,SAAUA,GACtC1mB,KAAKu0B,gBAAgB,SAAUC,GAC3BA,EAAS9N,MAAMA,KAEnB1mB,KAAK+Q,MAAM2V,IAEf+E,EAAcxsB,UAAUw1B,SAAW,WAC/Bz0B,KAAKu0B,gBAAgB,SAAUC,GAC3BA,EAASC,aAEbz0B,KAAK+Q,SAQT0a,EAAcxsB,UAAUysB,UAAY,SAAUgJ,EAAgBhO,EAAO+N,GACjE,GACID,GADA9R,EAAQ1iB,IAEZ,QAAuBK,KAAnBq0B,OACUr0B,KAAVqmB,OACarmB,KAAbo0B,EACA,KAAM,IAAInxB,OAAM,oBAIhBkxB,GADA1I,EAAqB4I,GAAiB,OAAQ,QAAS,aAC5CA,GAIPtf,KAAMsf,EACNhO,MAAOA,EACP+N,SAAUA,OAGIp0B,KAAlBm0B,EAASpf,OACTof,EAASpf,KAAO3V,OAEGY,KAAnBm0B,EAAS9N,QACT8N,EAAS9N,MAAQjnB,OAEKY,KAAtBm0B,EAASC,WACTD,EAASC,SAAWh1B,EAExB,IAAIk1B,GAAQ30B,KAAK40B,eAAel1B,KAAKM,KAAMA,KAAKk0B,UAAU1yB,OAqB1D,OAjBIxB,MAAKs0B,WACLt0B,KAAKq0B,KAAK/yB,KAAK,WACX,IACQohB,EAAMmS,WACNL,EAAS9N,MAAMhE,EAAMmS,YAGrBL,EAASC,WAGjB,MAAOrzB,OAMfpB,KAAKk0B,UAAUvzB,KAAK6zB,GACbG,GAIXlJ,EAAcxsB,UAAU21B,eAAiB,SAAU72B,OACxBsC,KAAnBL,KAAKk0B,eAAiD7zB,KAAtBL,KAAKk0B,UAAUn2B,WAG5CiC,MAAKk0B,UAAUn2B,GAEK,KAD3BiC,KAAKo0B,eAAiB,QACiC/zB,KAAvBL,KAAKurB,eACjCvrB,KAAKurB,cAAcvrB,QAG3ByrB,EAAcxsB,UAAUs1B,gBAAkB,SAAU50B,GAChD,IAAIK,KAAKs0B,UAMT,IAAK,GAAIv2B,GAAI,EAAGA,EAAIiC,KAAKk0B,UAAU1yB,OAAQzD,IACvCiC,KAAK80B,QAAQ/2B,EAAG4B,IAMxB8rB,EAAcxsB,UAAU61B,QAAU,SAAU/2B,EAAG4B,GAC3C,GAAI+iB,GAAQ1iB,IAEZA,MAAKq0B,KAAK/yB,KAAK,WACX,OAAwBjB,KAApBqiB,EAAMwR,eAAkD7zB,KAAvBqiB,EAAMwR,UAAUn2B,GACjD,IACI4B,EAAG+iB,EAAMwR,UAAUn2B,IAEvB,MAAOqD,GAIoB,mBAAZ8B,UAA2BA,QAAQwjB,OAC1CxjB,QAAQwjB,MAAMtlB,OAMlCqqB,EAAcxsB,UAAU8R,MAAQ,SAAU9N,GACtC,GAAIyf,GAAQ1iB,IACRA,MAAKs0B,YAGTt0B,KAAKs0B,WAAY,MACLj0B,KAAR4C,IACAjD,KAAK60B,WAAa5xB,GAGtBjD,KAAKq0B,KAAK/yB,KAAK,WACXohB,EAAMwR,cAAY7zB,GAClBqiB,EAAM6I,kBAAgBlrB,OAGvBorB,KA+DPsJ,GAAmB,SAAU9I,EAAQ+I,EAAUC,EAAUC,GACzD,GAAIC,EAOJ,IANID,EAAWF,EACXG,EAAW,YAAcH,EAEpBE,EAAWD,IAChBE,EAAwB,IAAbF,EAAiB,OAAS,gBAAkBA,GAEvDE,EAAU,CACV,GAAIzO,GAAQuF,EACR,4BACAiJ,GACc,IAAbA,EAAiB,aAAe,eACjC,YACAC,EACA,GACJ,MAAM,IAAI7xB,OAAMojB,KA2FpB0O,GAAsB,SAAUpnB,GAEhC,IAAK,GADD9G,MAAU/H,EAAI,EACTpB,EAAI,EAAGA,EAAIiQ,EAAIxM,OAAQzD,IAAK,CACjC,GAAII,GAAI6P,EAAI+I,WAAWhZ,EAEvB,IAAII,GAAK,OAAUA,GAAK,MAAQ,CAC5B,GAAIk3B,GAAOl3B,EAAI,KACfJ,KACA6uB,EAAO7uB,EAAIiQ,EAAIxM,OAAQ,0CAEvBrD,GAAI,OAAWk3B,GAAQ,KADbrnB,EAAI+I,WAAWhZ,GAAK,OAG9BI,EAAI,IACJ+I,EAAI/H,KAAOhB,EAENA,EAAI,MACT+I,EAAI/H,KAAQhB,GAAK,EAAK,IACtB+I,EAAI/H,KAAY,GAAJhB,EAAU,KAEjBA,EAAI,OACT+I,EAAI/H,KAAQhB,GAAK,GAAM,IACvB+I,EAAI/H,KAAShB,GAAK,EAAK,GAAM,IAC7B+I,EAAI/H,KAAY,GAAJhB,EAAU,MAGtB+I,EAAI/H,KAAQhB,GAAK,GAAM,IACvB+I,EAAI/H,KAAShB,GAAK,GAAM,GAAM,IAC9B+I,EAAI/H,KAAShB,GAAK,EAAK,GAAM,IAC7B+I,EAAI/H,KAAY,GAAJhB,EAAU,KAG9B,MAAO+I,IAOPouB,GAAe,SAAUtnB,GAEzB,IAAK,GADD7O,GAAI,EACCpB,EAAI,EAAGA,EAAIiQ,EAAIxM,OAAQzD,IAAK,CACjC,GAAII,GAAI6P,EAAI+I,WAAWhZ,EACnBI,GAAI,IACJgB,IAEKhB,EAAI,KACTgB,GAAK,EAEAhB,GAAK,OAAUA,GAAK,OAEzBgB,GAAK,EACLpB,KAGAoB,GAAK,EAGb,MAAOA,GAmBXtB,GAAQ+uB,OAASA,EACjB/uB,EAAQkvB,eAAiBA,EACzBlvB,EAAQ2vB,OAASA,EACjB3vB,EAAQ6xB,aAAeA,EACvB7xB,EAAQ2xB,aAAeA,EACvB3xB,EAAQ4uB,UAAYA,EACpB5uB,EAAQqrB,SAAWA,EACnBrrB,EAAQ6pB,WAAaA,EACrB7pB,EAAQ0qB,cAAgBA,EACxB1qB,EAAQ8xB,SAAWA,EACnB9xB,EAAQgyB,MAAQA,EAChBhyB,EAAQkyB,gBAAkBA,EAC1BlyB,EAAQoyB,UAAYA,EACpBpyB,EAAQmyB,cAAgBA,EACxBnyB,EAAQyqB,aAAeA,EACvBzqB,EAAQsyB,cAAgBA,EACxBtyB,EAAQmtB,aAAeA,EACvBntB,EAAQstB,SAAWA,EACnBttB,EAAQwU,UAAYA,EACpBxU,EAAQ4yB,OAASA,EACjB5yB,EAAQyzB,QAAUA,EAClBzzB,EAAQszB,aAAeA,EACvBtzB,EAAQuzB,cAAgBA,EACxBvzB,EAAQkzB,iBAAmBA,EAC3BlzB,EAAQ8zB,MAAQA,EAChB9zB,EAAQ4oB,SAAWA,EACnB5oB,EAAQy0B,MAAQA,EAChBz0B,EAAQ2zB,OAASA,EACjB3zB,EAAQo0B,QAAUA,EAClBp0B,EAAQs0B,UAAYA,EACpBt0B,EAAQ8O,QAAUA,EAClB9O,EAAQu0B,UAAYA,EACpBv0B,EAAQi0B,SAAWA,EACnBj0B,EAAQw0B,UAAYA,EACpBx0B,EAAQg0B,QAAUA,EAClBh0B,EAAQ+zB,gBAAkBA,EAC1B/zB,EAAQsmB,IAAMA,EACdtmB,EAAQ0zB,QAAUA,EAClB1zB,EAAQ00B,YAAcA,GACtB10B,EAAQ+0B,kBAAoBA,GAC5B/0B,EAAQk1B,KAAOA,GACfl1B,EAAQ8tB,MAAQA,EAChB9tB,EAAQwqB,gBAAkBA,EAC1BxqB,EAAQmuB,YAAcA,EACtBnuB,EAAQk3B,iBAAmBA,GAC3Bl3B,EAAQyuB,iBAAmBA,EAC3BzuB,EAAQ0uB,sBAAwBA,EAChC1uB,EAAQwuB,kBAAoBA,EAC5BxuB,EAAQy3B,aAAeA,GACvBz3B,EAAQmvB,kBAAoBoI,ITqjFtBG,KACA,SAAUz3B,EAAQwB,EAAqB5B,GAE7C,YUnxIO,SAAS81B,GAAUp1B,EAAGyI,GAEzB,QAAS2uB,KAAOx1B,KAAKoC,YAAchE,EADnCq3B,EAAcr3B,EAAGyI,GAEjBzI,EAAEa,UAAkB,OAAN4H,EAAarI,OAAO2L,OAAOtD,IAAM2uB,EAAGv2B,UAAY4H,EAAE5H,UAAW,GAAIu2B,IAW5E,QAASE,GAAOt2B,EAAGgC,GACtB,GAAI6Y,KACJ,KAAK,GAAI9a,KAAKC,GAAOZ,OAAOS,UAAUC,eAAejB,KAAKmB,EAAGD,IAAMiC,EAAEu0B,QAAQx2B,GAAK,IAC9E8a,EAAE9a,GAAKC,EAAED,GACb,IAAS,MAALC,GAAqD,kBAAjCZ,QAAO0N,sBAC3B,IAAK,GAAInO,GAAI,EAAGoB,EAAIX,OAAO0N,sBAAsB9M,GAAIrB,EAAIoB,EAAEqC,OAAQzD,IAASqD,EAAEu0B,QAAQx2B,EAAEpB,IAAM,IAC1Fkc,EAAE9a,EAAEpB,IAAMqB,EAAED,EAAEpB,IACtB,OAAOkc,GAGJ,QAAS2b,GAAWC,EAAYjuB,EAAQnC,EAAKqwB,GAChD,GAA2H13B,GAAvHD,EAAI2B,UAAU0B,OAAQ0Y,EAAI/b,EAAI,EAAIyJ,EAAkB,OAATkuB,EAAgBA,EAAOt3B,OAAOoT,yBAAyBhK,EAAQnC,GAAOqwB,CACrH,IAAuB,gBAAZC,UAAoD,kBAArBA,SAAQC,SAAyB9b,EAAI6b,QAAQC,SAASH,EAAYjuB,EAAQnC,EAAKqwB,OACpH,KAAK,GAAI/3B,GAAI83B,EAAWr0B,OAAS,EAAGzD,GAAK,EAAGA,KAASK,EAAIy3B,EAAW93B,MAAImc,GAAK/b,EAAI,EAAIC,EAAE8b,GAAK/b,EAAI,EAAIC,EAAEwJ,EAAQnC,EAAKyU,GAAK9b,EAAEwJ,EAAQnC,KAASyU,EAChJ,OAAO/b,GAAI,GAAK+b,GAAK1b,OAAOC,eAAemJ,EAAQnC,EAAKyU,GAAIA,EAGzD,QAAS+b,GAAQC,EAAYC,GAChC,MAAO,UAAUvuB,EAAQnC,GAAO0wB,EAAUvuB,EAAQnC,EAAKywB,IAGpD,QAASE,GAAWC,EAAaC,GACpC,GAAuB,gBAAZP,UAAoD,kBAArBA,SAAQQ,SAAyB,MAAOR,SAAQQ,SAASF,EAAaC,GAG7G,QAASE,GAAU52B,EAAS62B,EAAYvxB,EAAGwxB,GAC9C,MAAO,KAAKxxB,IAAMA,EAAInF,UAAU,SAAUiB,EAASC,GAC/C,QAAS01B,GAAUp3B,GAAS,IAAMq3B,EAAKF,EAAUthB,KAAK7V,IAAW,MAAO6B,GAAKH,EAAOG,IACpF,QAASy1B,GAASt3B,GAAS,IAAMq3B,EAAKF,EAAA,MAAmBn3B,IAAW,MAAO6B,GAAKH,EAAOG,IACvF,QAASw1B,GAAKrsB,GAAUA,EAAO3I,KAAOZ,EAAQuJ,EAAOhL,OAAS,GAAI2F,GAAE,SAAUlE,GAAWA,EAAQuJ,EAAOhL,SAAW+B,KAAKq1B,EAAWE,GACnID,GAAMF,EAAYA,EAAU72B,MAAMD,EAAS62B,QAAmBrhB,UAI/D,QAAS0hB,GAAYl3B,EAASm3B,GAGjC,QAASC,GAAKn4B,GAAK,MAAO,UAAUme,GAAK,MAAO4Z,IAAM/3B,EAAGme,KACzD,QAAS4Z,GAAKK,GACV,GAAIjyB,EAAG,KAAM,IAAI/E,WAAU,kCAC3B,MAAO4b,GAAG,IACN,GAAI7W,EAAI,EAAGsY,IAAMrD,EAAIqD,EAAU,EAAR2Z,EAAG,GAAS,SAAWA,EAAG,GAAK,QAAU,YAAchd,EAAIA,EAAEhc,KAAKqf,EAAG2Z,EAAG,KAAKr1B,KAAM,MAAOqY,EAEjH,QADIqD,EAAI,EAAGrD,IAAGgd,GAAM,EAAGhd,EAAE1a,QACjB03B,EAAG,IACP,IAAK,GAAG,IAAK,GAAGhd,EAAIgd,CAAI,MACxB,KAAK,GAAc,MAAXpb,GAAEqb,SAAkB33B,MAAO03B,EAAG,GAAIr1B,MAAM,EAChD,KAAK,GAAGia,EAAEqb,QAAS5Z,EAAI2Z,EAAG,GAAIA,GAAM,EAAI,SACxC,KAAK,GAAGA,EAAKpb,EAAEsb,IAAI/c,MAAOyB,EAAEub,KAAKhd,KAAO,SACxC,SACI,GAAMH,EAAI4B,EAAEub,OAAMnd,EAAIA,EAAEzY,OAAS,GAAKyY,EAAEA,EAAEzY,OAAS,MAAkB,IAAVy1B,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEpb,EAAI,CAAG,UACjG,GAAc,IAAVob,EAAG,MAAchd,GAAMgd,EAAG,GAAKhd,EAAE,IAAMgd,EAAG,GAAKhd,EAAE,IAAM,CAAE4B,EAAEqb,MAAQD,EAAG,EAAI,OAC9E,GAAc,IAAVA,EAAG,IAAYpb,EAAEqb,MAAQjd,EAAE,GAAI,CAAE4B,EAAEqb,MAAQjd,EAAE,GAAIA,EAAIgd,CAAI,OAC7D,GAAIhd,GAAK4B,EAAEqb,MAAQjd,EAAE,GAAI,CAAE4B,EAAEqb,MAAQjd,EAAE,GAAI4B,EAAEsb,IAAIx2B,KAAKs2B,EAAK,OACvDhd,EAAE,IAAI4B,EAAEsb,IAAI/c,MAChByB,EAAEub,KAAKhd,KAAO,UAEtB6c,EAAKF,EAAK94B,KAAK2B,EAASic,GAC1B,MAAOza,GAAK61B,GAAM,EAAG71B,GAAIkc,EAAI,EAjBrB,QAiBoCtY,EAAIiV,EAAI,EACtD,GAAY,EAARgd,EAAG,GAAQ,KAAMA,GAAG,EAAI,QAAS13B,MAAO03B,EAAG,GAAKA,EAAG,OAAK,GAAQr1B,MAAM,GAvB9E,GAAsGoD,GAAGsY,EAAGrD,EAAGH,EAA3G+B,GAAMqb,MAAO,EAAGG,KAAM,WAAa,GAAW,EAAPpd,EAAE,GAAQ,KAAMA,GAAE,EAAI,OAAOA,GAAE,IAAOmd,QAAUD,OAC3F,OAAOrd,IAAM1E,KAAM4hB,EAAK,GAAIM,MAASN,EAAK,GAAIO,OAAUP,EAAK,IAAwB,kBAAX7tB,UAA0B2Q,EAAE3Q,OAAOoK,UAAY,WAAa,MAAOvT,QAAU8Z,EA0BpJ,QAAS0d,GAAat5B,EAAGL,GAC5B,IAAK,GAAIsB,KAAKjB,GAAQL,EAAQqB,eAAeC,KAAItB,EAAQsB,GAAKjB,EAAEiB,IAG7D,QAASs4B,GAASl5B,GACrB,GAAIL,GAAsB,kBAAXiL,SAAyB5K,EAAE4K,OAAOoK,UAAWxV,EAAI,CAChE,OAAIG,GAAUA,EAAED,KAAKM,IAEjB6W,KAAM,WAEF,MADI7W,IAAKR,GAAKQ,EAAEiD,SAAQjD,MAAI,KACnBgB,MAAOhB,GAAKA,EAAER,KAAM6D,MAAOrD,KAKzC,QAASm5B,GAAOn5B,EAAGM,GACtB,GAAIX,GAAsB,kBAAXiL,SAAyB5K,EAAE4K,OAAOoK,SACjD,KAAKrV,EAAG,MAAOK,EACf,IAAmB2b,GAAY9Y,EAA3BrD,EAAIG,EAAED,KAAKM,GAAOo5B,IACtB,KACI,UAAc,KAAN94B,GAAgBA,KAAM,MAAQqb,EAAInc,EAAEqX,QAAQxT,MAAM+1B,EAAGh3B,KAAKuZ,EAAE3a,OAExE,MAAOmnB,GAAStlB,GAAMslB,MAAOA,GAH7B,QAKI,IACQxM,IAAMA,EAAEtY,OAAS1D,EAAIH,EAAA,SAAcG,EAAED,KAAKF,GADlD,QAGU,GAAIqD,EAAG,KAAMA,GAAEslB,OAE7B,MAAOiR,GAGJ,QAASC,KACZ,IAAK,GAAID,MAAS55B,EAAI,EAAGA,EAAI+B,UAAU0B,OAAQzD,IAC3C45B,EAAKA,EAAG5xB,OAAO2xB,EAAO53B,UAAU/B,IACpC,OAAO45B,GAGJ,QAASE,GAAQ7a,GACpB,MAAOhd,gBAAgB63B,IAAW73B,KAAKgd,EAAIA,EAAGhd,MAAQ,GAAI63B,GAAQ7a,GAG/D,QAAS8a,GAAiBl4B,EAAS62B,EAAYC,GAIlD,QAASM,GAAKn4B,GAASib,EAAEjb,KAAId,EAAEc,GAAK,SAAUme,GAAK,MAAO,IAAIjd,SAAQ,SAAUsE,EAAGwC,GAAKkxB,EAAEp3B,MAAM9B,EAAGme,EAAG3Y,EAAGwC,IAAM,GAAKmxB,EAAOn5B,EAAGme,OAC9H,QAASgb,GAAOn5B,EAAGme,GAAK,IAAM4Z,EAAK9c,EAAEjb,GAAGme,IAAO,MAAO5b,GAAK62B,EAAOF,EAAE,GAAG,GAAI32B,IAC3E,QAASw1B,GAAK1c,GAAKA,EAAE3a,gBAAiBs4B,GAAU93B,QAAQiB,QAAQkZ,EAAE3a,MAAMyd,GAAG1b,KAAK42B,EAASj3B,GAAUg3B,EAAOF,EAAE,GAAG,GAAI7d,GACnH,QAASge,GAAQ34B,GAASy4B,EAAO,OAAQz4B,GACzC,QAAS0B,GAAO1B,GAASy4B,EAAO,QAASz4B,GACzC,QAAS04B,GAAOjzB,EAAGgY,GAAShY,EAAEgY,GAAI+a,EAAEzb,QAASyb,EAAEv2B,QAAQw2B,EAAOD,EAAE,GAAG,GAAIA,EAAE,GAAG,IAR5E,IAAK5uB,OAAOgvB,cAAe,KAAM,IAAIl4B,WAAU,uCAC/C,IAAoDlC,GAAhD+b,EAAI4c,EAAU72B,MAAMD,EAAS62B,OAAsBsB,IACvD,OAAOh6B,MAAQi5B,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWj5B,EAAEoL,OAAOgvB,eAAiB,WAAc,MAAOn4B,OAASjC,EASjH,QAASq6B,GAAiB75B,GAG7B,QAASy4B,GAAKn4B,EAAGmG,GAASzG,EAAEM,KAAId,EAAEc,GAAK,SAAUme,GAAK,OAAQ7d,GAAKA,IAAOI,MAAOs4B,EAAQt5B,EAAEM,GAAGme,IAAKpb,KAAY,WAAN/C,GAAmBmG,EAAIA,EAAEgY,GAAKA,IAFvI,GAAIjf,GAAGoB,CACP,OAAOpB,MAAQi5B,EAAK,QAASA,EAAK,QAAS,SAAU51B,GAAK,KAAMA,KAAO41B,EAAK,UAAWj5B,EAAEoL,OAAOoK,UAAY,WAAc,MAAOvT,OAASjC,EAIvI,QAASs6B,GAAc95B,GAC1B,IAAK4K,OAAOgvB,cAAe,KAAM,IAAIl4B,WAAU,uCAC/C,IAAI/B,GAAIK,EAAE4K,OAAOgvB,cACjB,OAAOj6B,GAAIA,EAAED,KAAKM,GAAyB,kBAAbk5B,GAA0BA,EAASl5B,GAAKA,EAAE4K,OAAOoK,YAG5E,QAAS+kB,GAAqBC,EAAQC,GAEzC,MADIh6B,QAAOC,eAAkBD,OAAOC,eAAe85B,EAAQ,OAASh5B,MAAOi5B,IAAiBD,EAAOC,IAAMA,EAClGD,EAGJ,QAASE,GAAaC,GACzB,GAAIA,GAAOA,EAAI55B,WAAY,MAAO45B,EAClC,IAAInuB,KACJ,IAAW,MAAPmuB,EAAa,IAAK,GAAI9rB,KAAK8rB,GAASl6B,OAAOU,eAAejB,KAAKy6B,EAAK9rB,KAAIrC,EAAOqC,GAAK8rB,EAAI9rB,GAE5F,OADArC,GAAOkW,QAAUiY,EACVnuB,EAGJ,QAASouB,GAAgBD,GAC5B,MAAQA,IAAOA,EAAI55B,WAAc45B,GAAQjY,QAASiY,GAhLtDl6B,OAAAC,eAAAa,EAAA,cAAAC,OAAA,IAAAD,EAAA,UAAAk0B,EAAA91B,EAAAU,EAAAkB,EAAA,4BAAAs5B,KAAAt5B,EAAA,OAAAo2B,EAAAp2B,EAAA,WAAAs2B,EAAAt2B,EAAA,QAAA22B,EAAA32B,EAAA,WAAA82B,EAAA92B,EAAA,UAAAk3B,EAAAl3B,EAAA,YAAAw3B,EAAAx3B,EAAA,aAAAk4B,EAAAl4B,EAAA,SAAAm4B,EAAAn4B,EAAA,OAAAo4B,EAAAp4B,EAAA,SAAAs4B,EAAAt4B,EAAA,QAAAu4B,EAAAv4B,EAAA,iBAAAw4B,EAAAx4B,EAAA,iBAAA84B,EAAA94B,EAAA,cAAA+4B,EAAA/4B,EAAA,qBAAAg5B,EAAAh5B,EAAA,aAAAm5B,EAAAn5B,EAAA,gBAAAq5B,CAgBA,IAAIlD,GAAgBj3B,OAAOyiB,iBACpBC,uBAA2Bte,QAAS,SAAUxE,EAAGyI,GAAKzI,EAAE8iB,UAAYra,IACvE,SAAUzI,EAAGyI,GAAK,IAAK,GAAI1H,KAAK0H,GAAOA,EAAE3H,eAAeC,KAAIf,EAAEe,GAAK0H,EAAE1H,KAQ9Dy5B,EAAWp6B,OAAO+N,QAAU,SAAkB0N,GACrD,IAAK,GAAI7a,GAAGrB,EAAI,EAAGc,EAAIiB,UAAU0B,OAAQzD,EAAIc,EAAGd,IAAK,CACjDqB,EAAIU,UAAU/B,EACd,KAAK,GAAIoB,KAAKC,GAAOZ,OAAOS,UAAUC,eAAejB,KAAKmB,EAAGD,KAAI8a,EAAE9a,GAAKC,EAAED,IAE9E,MAAO8a,KVwjJL4e,OACA,SAAU/6B,EAAQD,EAASH,GWxlJjCI,EAAAD,QAAiBH,EAAAyB,EAAuB,wCX8lJlC25B,KACA,aAMAC,KACA,SAAUj7B,EAAQwB,EAAqB5B,GAE7C,YY96IA,SAASs7B,GAAYC,GACjBC,EAAUvsB,QAAQ,SAAUwsB,GACxBA,EAAKC,SAAWH,IA5LxBz6B,OAAAC,eAAAa,EAAA,cAAAC,OAAA,IAAA7B,EAAAU,EAAAkB,EAAA,+BAAA05B,KAAAt7B,EAAAU,EAAAkB,EAAA,0BAAA+5B,KAAA37B,EAAAU,EAAAkB,EAAA,4BAAAg6B,IAkBA,IAYIA,GAZAJ,MAaJ,SAAWI,GACPA,EAASA,EAAA,MAAoB,GAAK,QAClCA,EAASA,EAAA,QAAsB,GAAK,UACpCA,EAASA,EAAA,KAAmB,GAAK,OACjCA,EAASA,EAAA,KAAmB,GAAK,OACjCA,EAASA,EAAA,MAAoB,GAAK,QAClCA,EAASA,EAAA,OAAqB,GAAK,UACpCA,IAAaA,MAIhB,IAAIC,GAAkBD,EAASE,KAM3BC,EAAoB,SAAUC,EAAUC,GAExC,IAAK,GADDj3B,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,EAAK,GAAKpX,UAAUoX,EAE7B,MAAIyiB,EAAUD,EAASN,UAAvB,CAEA,GAAIlI,IAAM,GAAItG,OAAOgP,aACrB,QAAQD,GAOJ,IAAKL,GAASO,MAGd,IAAKP,GAASQ,QACV52B,QAAQgnB,IAAIrqB,MAAMqD,SAAU,IAAMguB,EAAM,MAAQwI,EAASr7B,KAAO,KAAK0H,OAAOrD,GAC5E,MACJ,KAAK42B,GAASE,KACVt2B,QAAQ62B,KAAKl6B,MAAMqD,SAAU,IAAMguB,EAAM,MAAQwI,EAASr7B,KAAO,KAAK0H,OAAOrD,GAC7E,MACJ,KAAK42B,GAASU,KACV92B,QAAQC,KAAKtD,MAAMqD,SAAU,IAAMguB,EAAM,MAAQwI,EAASr7B,KAAO,KAAK0H,OAAOrD,GAC7E,MACJ,KAAK42B,GAASW,MACV/2B,QAAQwjB,MAAM7mB,MAAMqD,SAAU,IAAMguB,EAAM,MAAQwI,EAASr7B,KAAO,KAAK0H,OAAOrD,GAC9E,MACJ,SACI,KAAM,IAAIY,OAAM,8DAAgEq2B,EAAU,QAGlGN,EAAwB,WAOxB,QAASA,GAAOh7B,GACZ2B,KAAK3B,KAAOA,EAIZ2B,KAAKk6B,UAAYX,EAIjBv5B,KAAKm6B,YAAcV,EAInBP,EAAUv4B,KAAKX,MAkEnB,MAhEAxB,QAAOC,eAAe46B,EAAOp6B,UAAW,YACpCL,IAAK,WACD,MAAOoB,MAAKk6B,WAEhBjmB,IAAK,SAAUxR,GACX,KAAMA,IAAO62B,IACT,KAAM,IAAIr5B,WAAU,uCAExBD,MAAKk6B,UAAYz3B,GAErB9D,YAAY,EACZD,cAAc,IAElBF,OAAOC,eAAe46B,EAAOp6B,UAAW,cACpCL,IAAK,WACD,MAAOoB,MAAKm6B,aAEhBlmB,IAAK,SAAUxR,GACX,GAAmB,kBAARA,GACP,KAAM,IAAIxC,WAAU,oDAExBD,MAAKm6B,YAAc13B,GAEvB9D,YAAY,EACZD,cAAc,IAKlB26B,EAAOp6B,UAAUm7B,MAAQ,WAErB,IAAK,GADD13B,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAEzBlX,MAAKm6B,YAAYt6B,MAAMG,MAAOA,KAAMs5B,EAASO,OAAO9zB,OAAOrD,KAE/D22B,EAAOp6B,UAAUirB,IAAM,WAEnB,IAAK,GADDxnB,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAEzBlX,MAAKm6B,YAAYt6B,MAAMG,MAAOA,KAAMs5B,EAASQ,SAAS/zB,OAAOrD,KAEjE22B,EAAOp6B,UAAU86B,KAAO,WAEpB,IAAK,GADDr3B,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAEzBlX,MAAKm6B,YAAYt6B,MAAMG,MAAOA,KAAMs5B,EAASE,MAAMzzB,OAAOrD,KAE9D22B,EAAOp6B,UAAUkE,KAAO,WAEpB,IAAK,GADDT,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAEzBlX,MAAKm6B,YAAYt6B,MAAMG,MAAOA,KAAMs5B,EAASU,MAAMj0B,OAAOrD,KAE9D22B,EAAOp6B,UAAUynB,MAAQ,WAErB,IAAK,GADDhkB,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAEzBlX,MAAKm6B,YAAYt6B,MAAMG,MAAOA,KAAMs5B,EAASW,OAAOl0B,OAAOrD,KAExD22B,MZwoJLgB,KACA,SAAUv8B,EAAQD,EAASH,GAEjC,YaloHA,SAAS48B,GAAWC,GAGhB,IAAK,GAFDC,GAAoB,GACpBC,EAASF,EAAWn0B,MAAM,KACrBrI,EAAI,EAAGA,EAAI08B,EAAOj5B,OAAQzD,IAC/B,GAAI08B,EAAO18B,GAAGyD,OAAS,EAAG,CACtB,GAAIk5B,GAAQD,EAAO18B,EACnB,KACI28B,EAAQC,mBAAmBD,EAAMhf,QAAQ,MAAO,MAEpD,MAAOta,IACPo5B,GAAqB,IAAME,EAGnC,MAAOF,GAMX,QAASI,GAAYC,GACjB,GAAIC,KAC0B,OAA1BD,EAAYprB,OAAO,KACnBorB,EAAcA,EAAYlf,UAAU,GAExC,KAAK,GAAIzE,GAAK,EAAG6jB,EAAKF,EAAYz0B,MAAM,KAAM8Q,EAAK6jB,EAAGv5B,OAAQ0V,IAAM,CAChE,GAAI8jB,GAAUD,EAAG7jB,EACjB,IAAuB,IAAnB8jB,EAAQx5B,OAAZ,CAGA,GAAIy5B,GAAKD,EAAQ50B,MAAM,IACL,KAAd60B,EAAGz5B,OACHs5B,EAAQH,mBAAmBM,EAAG,KAAON,mBAAmBM,EAAG,IAG3D93B,EAAK,0BAA4B63B,EAAU,eAAiBH,EAAc,MAGlF,MAAOC,GAknEX,QAASI,GAAqBC,EAAMC,GAChC,MAAOC,GAAYF,EAAK98B,KAAM+8B,EAAM/8B,MAExC,QAASi9B,GAAgBH,EAAMC,GAC3B,MAAOC,GAAYF,EAAMC,GAyf7B,QAASG,GAAeC,EAAMC,GAE1B,OADiB,KAAbA,IAAuBA,EAAW,MACzB,OAATD,EACA,MAAOE,IAAaC,UAaxB,IAXoB,gBAATH,IAAqB,aAAeA,KAC3CC,EAAWD,EAAK,cAEpB/T,EAAKmF,OAAoB,OAAb6O,GACY,gBAAbA,IACa,gBAAbA,IACc,gBAAbA,IAAyB,OAASA,GAAW,sCAAyCA,IAC9E,gBAATD,IAAqB,UAAYA,IAA2B,OAAnBA,EAAK,YACrDA,EAAOA,EAAK,WAGI,gBAATA,IAAqB,OAASA,GAAM,CAE3C,MAAO,IAAII,IADIJ,EACeD,EAAeE,IAEjD,GAAMD,YAAgB54B,SAAUi5B,GA2B3B,CACD,GAAIC,GAASJ,GAAaC,WACtBI,EAAYP,CAWhB,OAVA/T,GAAK9a,QAAQovB,EAAW,SAAUt2B,EAAKu2B,GACnC,GAAIvU,EAAKhB,SAASsV,EAAWt2B,IACG,MAAxBA,EAAIkW,UAAU,EAAG,GAAY,CAE7B,GAAIsgB,GAAYV,EAAeS,IAC3BC,EAAUC,cAAiBD,EAAUpK,YACrCiK,EAASA,EAAOK,qBAAqB12B,EAAKw2B,OAInDH,EAAOM,eAAeb,EAAeE,IAvC5C,GAAIY,MACAC,GAAyB,EACzBC,EAAiBf,CAYrB,IAXA/T,EAAK9a,QAAQ4vB,EAAgB,SAAU92B,GACnC,GAAmB,gBAARA,IAA4C,MAAxBA,EAAIkW,UAAU,EAAG,GAAY,CAExD,GAAIsgB,GAAYV,EAAegB,EAAe92B,GACzCw2B,GAAUpK,YACXyK,EACIA,IAA2BL,EAAUO,cAAc3K,UACvDwK,EAAW17B,KAAK,GAAI87B,IAAUh3B,EAAKw2B,QAItB,GAArBI,EAAW76B,OACX,MAAOk6B,IAAaC,UAExB,IAAIe,GAAWC,GAAcN,EAAYnB,EAAsB,SAAU0B,GAAa,MAAOA,GAAUv+B,MAASi9B,EAChH,IAAIgB,EAAwB,CACxB,GAAIO,GAAiBF,GAAcN,EAAYS,GAAeC,aAC9D,OAAO,IAAIrB,IAAagB,EAAUnB,EAAeE,GAAW,GAAIuB,KAAWC,YAAaJ,IAAoBI,YAAaH,MAGzH,MAAO,IAAIpB,IAAagB,EAAUnB,EAAeE,GAAWuB,GAASE,SA8mWjF,QAASC,GAAiBzD,GAEtB,GAAI5S,GAAY4S,EAAStR,SAASpB,gBAAgB,WAAY,SAAUT,EAAK6W,EAAQ/X,GAAO,MAAOgY,IAAYC,cAAcC,gBAAgBhX,EAAKlB,KAG9ImY,UAAWA,GACXC,MAAOA,GACPC,SAAUA,GACVC,cAAeA,EACfvV,SAAUA,GACVwV,YAAaA,GACbC,YAAaA,IACd,MAAM,EACLpW,GAAKwI,cACLnyB,EAAOD,QAAUipB,GA3+dzBtoB,OAAOC,eAAeZ,EAAS,cAAgB0B,OAAO,GAItD,IA46DIu+B,GAqFAC,EAgDAC,EAoQAC,EACAC,EAi2BAC,EAkMAxC,EAz1GAlU,EAAOzF,EAAQ,QACfoc,EAASpc,EAAQ,QACjBwK,EAAUxK,EAAQ,QAClBV,EALJ,SAA0Bxf,GAAM,MAAQA,IAAqB,gBAAPA,IAAoB,WAAaA,GAAMA,EAAA,QAAgBA,GAK9EkgB,EAAQ,SA2BnCqc,EAAmC,WAInC,QAASA,GAAkBC,GACvBt+B,KAAKs+B,YAAcA,EAEnBt+B,KAAKu+B,QAAU,YA2CnB,MArCAF,GAAkBp/B,UAAUgV,IAAM,SAAUxO,EAAKlG,GAChC,MAATA,EACAS,KAAKs+B,YAAYE,WAAWx+B,KAAKy+B,cAAch5B,IAG/CzF,KAAKs+B,YAAYI,QAAQ1+B,KAAKy+B,cAAch5B,GAAMgiB,EAAKpV,UAAU9S,KAOzE8+B,EAAkBp/B,UAAUL,IAAM,SAAU6G,GACxC,GAAIk5B,GAAY3+B,KAAKs+B,YAAYM,QAAQ5+B,KAAKy+B,cAAch5B,GAC5D,OAAiB,OAAbk5B,EACO,KAGAlX,EAAK0D,SAASwT,IAM7BN,EAAkBp/B,UAAU4/B,OAAS,SAAUp5B,GAC3CzF,KAAKs+B,YAAYE,WAAWx+B,KAAKy+B,cAAch5B,KAMnD44B,EAAkBp/B,UAAUw/B,cAAgB,SAAUpgC,GAClD,MAAO2B,MAAKu+B,QAAUlgC,GAE1BggC,EAAkBp/B,UAAU4F,SAAW,WACnC,MAAO7E,MAAKs+B,YAAYz5B,YAErBw5B,KAwBPS,EAA+B,WAC/B,QAASA,KACL9+B,KAAK++B,UACL/+B,KAAKg/B,mBAAoB,EAmB7B,MAjBAF,GAAc7/B,UAAUgV,IAAM,SAAUxO,EAAKlG,GAC5B,MAATA,QACOS,MAAK++B,OAAOt5B,GAGnBzF,KAAK++B,OAAOt5B,GAAOlG,GAG3Bu/B,EAAc7/B,UAAUL,IAAM,SAAU6G,GACpC,MAAIgiB,GAAKhB,SAASzmB,KAAK++B,OAAQt5B,GACpBzF,KAAK++B,OAAOt5B,GAEhB,MAEXq5B,EAAc7/B,UAAU4/B,OAAS,SAAUp5B,SAChCzF,MAAK++B,OAAOt5B,IAEhBq5B,KA2BPG,EAAmB,SAAUC,GAC7B,IAGI,GAAsB,mBAAX77B,aAC2B,KAA3BA,OAAO67B,GAAiC,CAE/C,GAAIC,GAAa97B,OAAO67B,EAGxB,OAFAC,GAAWT,QAAQ,oBAAqB,SACxCS,EAAWX,WAAW,qBACf,GAAIH,GAAkBc,IAGrC,MAAO/9B,IAGP,MAAO,IAAI09B,IAGXM,EAAoBH,EAAiB,gBAErCI,EAAiBJ,EAAiB,kBAiBlCK,EAAY,GAAIlB,GAAO/E,OAAO,sBAK9BkG,EAAiB,WACjB,GAAI55B,GAAK,CACT,OAAO,YACH,MAAOA,SAQX65B,EAAO,SAAUxxB,GACjB,GAAIyhB,GAAYhI,EAAKuF,kBAAkBhf,GACnCwxB,EAAO,GAAI/X,GAAKsL,IACpByM,GAAK5L,OAAOnE,EACZ,IAAIgQ,GAAYD,EAAKxL,QACrB,OAAOvM,GAAK+F,OAAOU,gBAAgBuR,IAOnCC,EAAmB,QAAnBA,KAEA,IAAK,GADDC,MACKzoB,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCyoB,EAASzoB,GAAMpX,UAAUoX,EAG7B,KAAK,GADD4V,GAAU,GACL/uB,EAAI,EAAGA,EAAI4hC,EAASn+B,OAAQzD,IAC7B6E,MAAMkG,QAAQ62B,EAAS5hC,KACtB4hC,EAAS5hC,IACiB,gBAAhB4hC,GAAS5hC,IACc,gBAAvB4hC,GAAS5hC,GAAGyD,OACvBsrB,GAAW4S,EAAiB7/B,MAAM,KAAM8/B,EAAS5hC,IAGjD+uB,GAD4B,gBAAhB6S,GAAS5hC,GACV0pB,EAAKpV,UAAUstB,EAAS5hC,IAGxB4hC,EAAS5hC,GAExB+uB,GAAW,GAEf,OAAOA,IAMP8S,EAAW,KAMXC,GAAY,EAMZlC,EAAgB,SAAUmC,EAASC,GACnCtY,EAAKmF,QAAQmT,IAA2B,IAAZD,IAAgC,IAAZA,EAAoB,+CACpD,IAAZA,GACAR,EAAUlG,SAAWgF,EAAO9E,SAASQ,QACrC8F,EAAWN,EAAUpV,IAAIxqB,KAAK4/B,GAC1BS,GACAV,EAAeprB,IAAI,mBAAmB,IAElB,kBAAZ6rB,GACZF,EAAWE,GAGXF,EAAW,KACXP,EAAeR,OAAO,qBAO1B3U,EAAM,WAEN,IAAK,GADDyV,MACKzoB,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCyoB,EAASzoB,GAAMpX,UAAUoX,EAO7B,KALkB,IAAd2oB,IACAA,GAAY,EACK,OAAbD,IAA+D,IAA1CP,EAAezgC,IAAI,oBACxC++B,GAAc,IAElBiC,EAAU,CACV,GAAI9S,GAAU4S,EAAiB7/B,MAAM,KAAM8/B,EAC3CC,GAAS9S,KAObkT,EAAa,SAAUC,GACvB,MAAO,YAEH,IAAK,GADDN,MACKzoB,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCyoB,EAASzoB,GAAMpX,UAAUoX,EAE7BgT,GAAIrqB,UAAM,IAASogC,GAAQl6B,OAAO45B,MAMtCjZ,EAAQ,WAER,IAAK,GADDiZ,MACKzoB,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCyoB,EAASzoB,GAAMpX,UAAUoX,EAE7B,IAAI4V,GAAU,4BAA8B4S,EAAiB7/B,UAAM,GAAQ8/B,EAC3EL,GAAU5Y,MAAMoG,IAKhBoT,EAAQ,WAER,IAAK,GADDP,MACKzoB,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCyoB,EAASzoB,GAAMpX,UAAUoX,EAE7B,IAAI4V,GAAU,yBAA2B4S,EAAiB7/B,UAAM,GAAQ8/B,EAExE,MADAL,GAAU5Y,MAAMoG,GACV,GAAIxpB,OAAMwpB,IAKhB3pB,EAAO,WAEP,IAAK,GADDw8B,MACKzoB,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCyoB,EAASzoB,GAAMpX,UAAUoX,EAE7B,IAAI4V,GAAU,qBAAuB4S,EAAiB7/B,UAAM,GAAQ8/B,EACpEL,GAAUn8B,KAAK2pB,IAMfqT,EAAqB,WAEC,mBAAX98B,SACPA,OAAOyhB,UACPzhB,OAAOyhB,SAASsb,WACgC,IAAhD/8B,OAAOyhB,SAASsb,SAASzK,QAAQ,WACjCxyB,EAAK,8FASTk9B,EAAsB,SAAUhV,GAChC,MAAwB,gBAATA,KACVA,GAAQA,GACLA,GAAQiV,OAAOC,mBACflV,GAAQiV,OAAOE,oBAKvBC,EAAsB,SAAU9gC,GAChC,GAAI8nB,EAAKwI,aAAuC,aAAxB3rB,SAASo8B,WAC7B/gC,QAEC,CAGD,GAAIghC,IAAW,EACXC,EAAc,QAAdA,KACA,IAAKt8B,SAASyyB,KAEV,WADA70B,YAAW0+B,EAAap9B,KAAKgF,MAAM,IAGlCm4B,KACDA,GAAW,EACXhhC,KAGJ2E,UAASsX,kBACTtX,SAASsX,iBAAiB,mBAAoBglB,GAAa,GAE3Dv9B,OAAOuY,iBAAiB,OAAQglB,GAAa,IAExCt8B,SAASu8B,cAEdv8B,SAASu8B,YAAY,qBAAsB,WACX,aAAxBv8B,SAASo8B,YACTE,MAGRv9B,OAAOw9B,YAAY,SAAUD,MAWrCE,EAAW,aAKXC,EAAW,aAOX1F,EAAc,SAAUh3B,EAAGwC,GAC3B,GAAIxC,IAAMwC,EACN,MAAO,EAEN,IAAIxC,IAAMy8B,GAAYj6B,IAAMk6B,EAC7B,OAAQ,CAEP,IAAIl6B,IAAMi6B,GAAYz8B,IAAM08B,EAC7B,MAAO,EAGP,IAAIC,GAASC,EAAY58B,GAAI68B,EAASD,EAAYp6B,EAClD,OAAe,QAAXm6B,EACe,OAAXE,EACOF,EAASE,GAAU,EAAI78B,EAAE7C,OAASqF,EAAErF,OAASw/B,EAASE,GAGrD,EAGI,OAAXA,EACE,EAGA78B,EAAIwC,GAAK,EAAI,GAS5Bs6B,EAAgB,SAAU98B,EAAGwC,GAC7B,MAAIxC,KAAMwC,EACC,EAEFxC,EAAIwC,GACD,EAGD,GAQXu6B,EAAa,SAAU37B,EAAKqe,GAC5B,GAAIA,GAAOre,IAAOqe,GACd,MAAOA,GAAIre,EAGX,MAAM,IAAInC,OAAM,yBAA2BmC,EAAM,gBAAkBgiB,EAAKpV,UAAUyR,KAOtFud,EAAoB,QAApBA,GAA8Bvd,GAC9B,GAAmB,gBAARA,IAA4B,OAARA,EAC3B,MAAO2D,GAAKpV,UAAUyR,EAC1B,IAAI9X,KACJ,KAAK,GAAIY,KAAKkX,GACV9X,EAAKrL,KAAKiM,EAGdZ,GAAKs1B,MAEL,KAAK,GADD77B,GAAM,IACD1H,EAAI,EAAGA,EAAIiO,EAAKxK,OAAQzD,IACnB,IAANA,IACA0H,GAAO,KACXA,GAAOgiB,EAAKpV,UAAUrG,EAAKjO,IAC3B0H,GAAO,IACPA,GAAO47B,EAAkBvd,EAAI9X,EAAKjO,IAGtC,OADA0H,IAAO,KASP87B,EAAoB,SAAUvzB,EAAKwzB,GACnC,GAAI9/B,GAAMsM,EAAIxM,MACd,IAAIE,GAAO8/B,EACP,OAAQxzB,EAGZ,KAAK,GADDyzB,MACKtjC,EAAI,EAAGA,EAAIuD,EAAKvD,GAAKqjC,EAEtBC,EAAS9gC,KADTxC,EAAIqjC,EAAU9/B,EACAsM,EAAI2N,UAAUxd,EAAGuD,GAGjBsM,EAAI2N,UAAUxd,EAAGA,EAAIqjC,GAG3C,OAAOC,IAQPC,EAAO,SAAU5d,EAAKnkB,GACtB,GAAIiD,MAAMkG,QAAQgb,GACd,IAAK,GAAI/lB,GAAI,EAAGA,EAAI+lB,EAAItiB,SAAUzD,EAC9B4B,EAAG5B,EAAG+lB,EAAI/lB,QAUd0pB,GAAK9a,QAAQmX,EAAK,SAAUre,EAAKhD,GAAO,MAAO9C,GAAG8C,EAAKgD,MAU3Dk8B,EAAwB,SAAU3kB,GAClCyK,EAAKmF,QAAQyT,EAAoBrjB,GAAI,sBACrC,IACmC5d,GAAGgC,EAAG4D,EAAG48B,EAAI7jC,EAAG8jC,EAAM7zB,CAyBzD,KAtBU,IAANgP,GACA5b,EAAI,EACJ4D,EAAI,EACJ5F,EAAI,EAAI4d,IAAO/O,IAAW,EAAI,IAG9B7O,EAAI4d,EAAI,EACRA,EAAIxZ,KAAKs+B,IAAI9kB,GACTA,GAAKxZ,KAAKu+B,IAAI,GAAG,OAEjBH,EAAKp+B,KAAKmF,IAAInF,KAAKgF,MAAMhF,KAAK0mB,IAAIlN,GAAKxZ,KAAKw+B,KAbzC,MAcH5gC,EAAIwgC,EAdD,KAeH58B,EAAIxB,KAAKy+B,MAAMjlB,EAAIxZ,KAAKu+B,IAAI,EAhBZ,GAgBuBH,GAAMp+B,KAAKu+B,IAAI,EAhBtC,OAoBhB3gC,EAAI,EACJ4D,EAAIxB,KAAKy+B,MAAMjlB,EAAIxZ,KAAKu+B,IAAI,GAAG,SAIvCF,KACK9jC,EA1BmB,GA0BRA,EAAGA,GAAK,EACpB8jC,EAAKlhC,KAAKqE,EAAI,EAAI,EAAI,GACtBA,EAAIxB,KAAKgF,MAAMxD,EAAI,EAEvB,KAAKjH,EA9BO,GA8BIA,EAAGA,GAAK,EACpB8jC,EAAKlhC,KAAKS,EAAI,EAAI,EAAI,GACtBA,EAAIoC,KAAKgF,MAAMpH,EAAI,EAEvBygC,GAAKlhC,KAAKvB,EAAI,EAAI,GAClByiC,EAAKK,UACLl0B,EAAM6zB,EAAKr7B,KAAK,GAEhB,IAAI27B,GAAgB,EACpB,KAAKpkC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CACxB,GAAIqkC,GAAUC,SAASr0B,EAAIs0B,OAAOvkC,EAAG,GAAI,GAAG8G,SAAS,GAC9B,KAAnBu9B,EAAQ5gC,SACR4gC,EAAU,IAAMA,GACpBD,GAAgCC,EAEpC,MAAOD,GAAclnB,eAOrBsnB,EAAiC,WACjC,QAA4B,gBAAXl/B,UACbA,OAAA,SACAA,OAAA,kBACC,UAAU0R,KAAK1R,OAAOyhB,SAASD,QAMpC2d,EAAoB,WAEpB,MAA0B,gBAAZC,UAA8C,gBAAfA,SAAQC,IAQrDC,EAAqB,SAAUna,EAAMoa,GACrC,GAAI/gC,GAAS,eACA,aAAT2mB,EACA3mB,EACI,0FAGS,qBAAR2mB,EACL3mB,EAAS,6DAEI,eAAR2mB,IACL3mB,EAAS,6BAEb,IAAI6kB,GAAQ,GAAIpjB,OAAMklB,EAAO,OAASoa,EAAMC,KAAKh+B,WAAa,KAAOhD,EAErE,OADA6kB,GAAM8B,KAAOA,EAAKsa,cACXpc,GAOPqc,EAAkB,GAAIC,QAAO,iBAM7B/B,EAAc,SAAUjzB,GACxB,GAAI+0B,EAAgBhuB,KAAK/G,GAAM,CAC3B,GAAIi1B,GAAS3C,OAAOtyB,EACpB,IAAIi1B,IAAW,YAAcA,GAAU,WACnC,MAAOA,GAGf,MAAO,OAmBPC,GAAiB,SAAUvjC,GAC3B,IACIA,IAEJ,MAAOyB,GAEHc,WAAW,WAOP,KADAiB,GAAK,yCADO/B,EAAEgvB,OAAS,IAEjBhvB,GACPoC,KAAKgF,MAAM,MAMlB26B,GAAe,WASf,OARmC,gBAAX9/B,SACpBA,OAAA,WACAA,OAAA,qBACA,IAKcwK,OAAO,6FAA+F,GAWxHu1B,GAAwB,SAAUzjC,EAAI0jC,GACtC,GAAIC,GAAUphC,WAAWvC,EAAI0jC,EAI7B,OAHuB,gBAAZC,IAAwBA,EAAA,OAC/BA,EAAA,QAEGA,GAuBPC,GAAsB,WAMtB,QAASA,GAAKC,EAAcC,GACxB,OAAiB,KAAbA,EAAqB,CACrBzjC,KAAK0jC,QAAUF,EAAap9B,MAAM,IAGlC,KAAK,GADDu9B,GAAS,EACJ5lC,EAAI,EAAGA,EAAIiC,KAAK0jC,QAAQliC,OAAQzD,IACjCiC,KAAK0jC,QAAQ3lC,GAAGyD,OAAS,IACzBxB,KAAK0jC,QAAQC,GAAU3jC,KAAK0jC,QAAQ3lC,GACpC4lC,IAGR3jC,MAAK0jC,QAAQliC,OAASmiC,EACtB3jC,KAAK4jC,UAAY,MAGjB5jC,MAAK0jC,QAAUF,EACfxjC,KAAK4jC,UAAYH,EAwLzB,MArLAjlC,QAAOC,eAAe8kC,EAAM,SAMxB3kC,IAAK,WACD,MAAO,IAAI2kC,GAAK,KAEpB5kC,YAAY,EACZD,cAAc,IAElB6kC,EAAKtkC,UAAU4kC,SAAW,WACtB,MAAI7jC,MAAK4jC,WAAa5jC,KAAK0jC,QAAQliC,OACxB,KACJxB,KAAK0jC,QAAQ1jC,KAAK4jC,YAK7BL,EAAKtkC,UAAU6kC,UAAY,WACvB,MAAO9jC,MAAK0jC,QAAQliC,OAASxB,KAAK4jC,WAKtCL,EAAKtkC,UAAU8kC,SAAW,WACtB,GAAIN,GAAWzjC,KAAK4jC,SAIpB,OAHIH,GAAWzjC,KAAK0jC,QAAQliC,QACxBiiC,IAEG,GAAIF,GAAKvjC,KAAK0jC,QAASD,IAKlCF,EAAKtkC,UAAU+kC,QAAU,WACrB,MAAIhkC,MAAK4jC,UAAY5jC,KAAK0jC,QAAQliC,OACvBxB,KAAK0jC,QAAQ1jC,KAAK0jC,QAAQliC,OAAS,GACvC,MAEX+hC,EAAKtkC,UAAU4F,SAAW,WAEtB,IAAK,GADD01B,GAAa,GACRx8B,EAAIiC,KAAK4jC,UAAW7lC,EAAIiC,KAAK0jC,QAAQliC,OAAQzD,IAC1B,KAApBiC,KAAK0jC,QAAQ3lC,KACbw8B,GAAc,IAAMv6B,KAAK0jC,QAAQ3lC,GAEzC,OAAOw8B,IAAc,KAEzBgJ,EAAKtkC,UAAUglC,mBAAqB,WAEhC,IAAK,GADD1J,GAAa,GACRx8B,EAAIiC,KAAK4jC,UAAW7lC,EAAIiC,KAAK0jC,QAAQliC,OAAQzD,IAC1B,KAApBiC,KAAK0jC,QAAQ3lC,KACbw8B,GAAc,IAAM5H,mBAAmBlsB,OAAOzG,KAAK0jC,QAAQ3lC,KAEnE,OAAOw8B,IAAc,KAQzBgJ,EAAKtkC,UAAU4D,MAAQ,SAAUqhC,GAE7B,WADc,KAAVA,IAAoBA,EAAQ,GACzBlkC,KAAK0jC,QAAQ7gC,MAAM7C,KAAK4jC,UAAYM,IAK/CX,EAAKtkC,UAAUklC,OAAS,WACpB,GAAInkC,KAAK4jC,WAAa5jC,KAAK0jC,QAAQliC,OAC/B,MAAO,KAEX,KAAK,GADDi5B,MACK18B,EAAIiC,KAAK4jC,UAAW7lC,EAAIiC,KAAK0jC,QAAQliC,OAAS,EAAGzD,IACtD08B,EAAO95B,KAAKX,KAAK0jC,QAAQ3lC,GAC7B,OAAO,IAAIwlC,GAAK9I,EAAQ,IAM5B8I,EAAKtkC,UAAUmlC,MAAQ,SAAUC,GAE7B,IAAK,GADD5J,MACK18B,EAAIiC,KAAK4jC,UAAW7lC,EAAIiC,KAAK0jC,QAAQliC,OAAQzD,IAClD08B,EAAO95B,KAAKX,KAAK0jC,QAAQ3lC,GAC7B,IAAIsmC,YAAwBd,GACxB,IAAK,GAAIxlC,GAAIsmC,EAAaT,UAAW7lC,EAAIsmC,EAAaX,QAAQliC,OAAQzD,IAClE08B,EAAO95B,KAAK0jC,EAAaX,QAAQ3lC,QAKrC,KAAK,GADDumC,GAAcD,EAAaj+B,MAAM,KAC5BrI,EAAI,EAAGA,EAAIumC,EAAY9iC,OAAQzD,IAChCumC,EAAYvmC,GAAGyD,OAAS,GACxBi5B,EAAO95B,KAAK2jC,EAAYvmC,GAGpC,OAAO,IAAIwlC,GAAK9I,EAAQ,IAK5B8I,EAAKtkC,UAAU4yB,QAAU,WACrB,MAAO7xB,MAAK4jC,WAAa5jC,KAAK0jC,QAAQliC,QAO1C+hC,EAAKgB,aAAe,SAAUC,EAAWC,GACrC,GAAIC,GAAQF,EAAUX,WAAYtjB,EAAQkkB,EAAUZ,UACpD,IAAc,OAAVa,EACA,MAAOD,EAEN,IAAIC,IAAUnkB,EACf,MAAOgjB,GAAKgB,aAAaC,EAAUT,WAAYU,EAAUV,WAGzD,MAAM,IAAIzgC,OAAM,8BACZmhC,EACA,8BAEAD,EACA,MAQZjB,EAAKoB,aAAe,SAAUxJ,EAAMC,GAGhC,IAAK,GAFDwJ,GAAWzJ,EAAKt4B,QAChBgiC,EAAYzJ,EAAMv4B,QACb9E,EAAI,EAAGA,EAAI6mC,EAASpjC,QAAUzD,EAAI8mC,EAAUrjC,OAAQzD,IAAK,CAC9D,GAAI+mC,GAAMzJ,EAAYuJ,EAAS7mC,GAAI8mC,EAAU9mC,GAC7C,IAAY,IAAR+mC,EACA,MAAOA,GAEf,MAAIF,GAASpjC,SAAWqjC,EAAUrjC,OACvB,EACJojC,EAASpjC,OAASqjC,EAAUrjC,QAAU,EAAI,GAOrD+hC,EAAKtkC,UAAU8lC,OAAS,SAAUC,GAC9B,GAAIhlC,KAAK8jC,cAAgBkB,EAAMlB,YAC3B,OAAO,CAEX,KAAK,GAAI/lC,GAAIiC,KAAK4jC,UAAW32B,EAAI+3B,EAAMpB,UAAW7lC,GAAKiC,KAAK0jC,QAAQliC,OAAQzD,IAAKkP,IAC7E,GAAIjN,KAAK0jC,QAAQ3lC,KAAOinC,EAAMtB,QAAQz2B,GAClC,OAAO,CAGf,QAAO,GAOXs2B,EAAKtkC,UAAUwnB,SAAW,SAAUue,GAChC,GAAIjnC,GAAIiC,KAAK4jC,UACT32B,EAAI+3B,EAAMpB,SACd,IAAI5jC,KAAK8jC,YAAckB,EAAMlB,YACzB,OAAO,CAEX,MAAO/lC,EAAIiC,KAAK0jC,QAAQliC,QAAQ,CAC5B,GAAIxB,KAAK0jC,QAAQ3lC,KAAOinC,EAAMtB,QAAQz2B,GAClC,OAAO,IAETlP,IACAkP,EAEN,OAAO,GAEJs2B,KAYP0B,GAAgC,WAKhC,QAASA,GAAepC,EAAMqC,GAC1BllC,KAAKklC,aAAeA,EAEpBllC,KAAKmlC,OAAStC,EAAKhgC,QAEnB7C,KAAKolC,YAAc5hC,KAAK0H,IAAI,EAAGlL,KAAKmlC,OAAO3jC,OAC3C,KAAK,GAAIzD,GAAI,EAAGA,EAAIiC,KAAKmlC,OAAO3jC,OAAQzD,IACpCiC,KAAKolC,aAAe3d,EAAK6N,aAAat1B,KAAKmlC,OAAOpnC,GAEtDiC,MAAKqlC,cAgET,MA9DA7mC,QAAOC,eAAewmC,EAAgB,kBAElCrmC,IAAK,WACD,MAAO,KAEXD,YAAY,EACZD,cAAc,IAElBF,OAAOC,eAAewmC,EAAgB,yBAElCrmC,IAAK,WACD,MAAO,MAEXD,YAAY,EACZD,cAAc,IAGlBumC,EAAehmC,UAAU0B,KAAO,SAAUyjC,GAElCpkC,KAAKmlC,OAAO3jC,OAAS,IACrBxB,KAAKolC,aAAe,GAExBplC,KAAKmlC,OAAOxkC,KAAKyjC,GACjBpkC,KAAKolC,aAAe3d,EAAK6N,aAAa8O,GACtCpkC,KAAKqlC,eAETJ,EAAehmC,UAAUmb,IAAM,WAC3B,GAAIkrB,GAAOtlC,KAAKmlC,OAAO/qB,KACvBpa,MAAKolC,aAAe3d,EAAK6N,aAAagQ,GAElCtlC,KAAKmlC,OAAO3jC,OAAS,IACrBxB,KAAKolC,aAAe,IAG5BH,EAAehmC,UAAUomC,YAAc,WACnC,GAAIrlC,KAAKolC,YAAcH,EAAeM,sBAClC,KAAM,IAAIjiC,OAAMtD,KAAKklC,aACjB,8BACAD,EAAeM,sBACf,WACAvlC,KAAKolC,YACL,KAER,IAAIplC,KAAKmlC,OAAO3jC,OAASyjC,EAAeO,eACpC,KAAM,IAAIliC,OAAMtD,KAAKklC,aACjB,iEACAD,EAAeO,eACf,gCACAxlC,KAAKylC,kBAQjBR,EAAehmC,UAAUwmC,cAAgB,WACrC,MAA0B,IAAtBzlC,KAAKmlC,OAAO3jC,OACL,GAEJ,gBAAkBxB,KAAKmlC,OAAO3+B,KAAK,KAAO,KAE9Cy+B,KA0BPS,GAAe,eAsBfC,GAA0B,WAQ1B,QAASA,GAASC,EAAMC,EAAQ/e,EAAWgf,EAAeC,OAC/B,KAAnBA,IAA6BA,EAAiB,IAClD/lC,KAAK6lC,OAASA,EACd7lC,KAAK8mB,UAAYA,EACjB9mB,KAAK8lC,cAAgBA,EACrB9lC,KAAK+lC,eAAiBA,EACtB/lC,KAAK4lC,KAAOA,EAAK3qB,cACjBjb,KAAKgmC,OAAShmC,KAAK4lC,KAAKtD,OAAOtiC,KAAK4lC,KAAKjQ,QAAQ,KAAO,GACxD31B,KAAKimC,aAAe7G,EAAkBxgC,IAAI,QAAUgnC,IAAS5lC,KAAK4lC,KAgEtE,MA9DAD,GAAS1mC,UAAUinC,gBAAkB,WACjC,MAAOlmC,MAAK4lC,OAAS5lC,KAAKimC,cAAgBjmC,KAAKmmC,gBAEnDR,EAAS1mC,UAAUmnC,gBAAkB,WACjC,MAA0C,OAAnCpmC,KAAKimC,aAAa3D,OAAO,EAAG,IAEvCqD,EAAS1mC,UAAUonC,WAAa,WAC5B,MAAuB,wBAAhBrmC,KAAKgmC,QAEhBL,EAAS1mC,UAAUknC,aAAe,WAC9B,MAAwB,mBAAhBnmC,KAAKgmC,QAA+C,wBAAhBhmC,KAAKgmC,QAErDL,EAAS1mC,UAAUqnC,WAAa,SAAUC,GAClCA,IAAYvmC,KAAKimC,eACjBjmC,KAAKimC,aAAeM,EAChBvmC,KAAKomC,mBACLhH,EAAkBnrB,IAAI,QAAUjU,KAAK4lC,KAAM5lC,KAAKimC,gBAU5DN,EAAS1mC,UAAUunC,cAAgB,SAAUz/B,EAAM0rB,GAC/ChL,EAAKmF,OAAuB,gBAAT7lB,GAAmB,8BACtC0gB,EAAKmF,OAAyB,gBAAX6F,GAAqB,+BACxC,IAAIgU,EACJ,IAvEQ,cAuEJ1/B,EACA0/B,GACKzmC,KAAK6lC,OAAS,SAAW,SAAW7lC,KAAKimC,aAAe,YAE5D,IAAIl/B,IAAS2+B,GAKd,KAAM,IAAIpiC,OAAM,4BAA8ByD,EAJ9C0/B,IACKzmC,KAAK6lC,OAAS,WAAa,WAAa7lC,KAAKimC,aAAe,QAKjEjmC,KAAKkmC,oBACLzT,EAAA,GAAezyB,KAAK8mB,UAExB,IAAI4f,KAIJ,OAHAjf,GAAK9a,QAAQ8lB,EAAQ,SAAUhtB,EAAKlG,GAChCmnC,EAAM/lC,KAAK8E,EAAM,IAAMlG,KAEpBknC,EAAUC,EAAMlgC,KAAK,MAGhCm/B,EAAS1mC,UAAU4F,SAAW,WAC1B,GAAImJ,GAAMhO,KAAK2mC,aAIf,OAHI3mC,MAAK+lC,iBACL/3B,GAAO,IAAMhO,KAAK+lC,eAAiB,KAEhC/3B,GAGX23B,EAAS1mC,UAAU0nC,YAAc,WAC7B,OAAQ3mC,KAAK6lC,OAAS,WAAa,WAAa7lC,KAAK4lC,MAElDD,KAkEPiB,GAAgB,SAAUC,GAC1B,GAAIC,GAAYC,GAASF,GAAU/f,EAAYggB,EAAUE,SAezD,OAdyB,aAArBF,EAAUd,QACV9F,EAAM4G,EAAUlB,KACZ,8EAIF9e,GAA0B,aAAbA,GACM,cAArBggB,EAAUd,QACV9F,EAAM,gFAEL4G,EAAUjB,QACX1F,KAIA8G,SAAU,GAAItB,IAASmB,EAAUlB,KAAMkB,EAAUjB,OAAQ/e,EAFpB,OAArBggB,EAAUI,QAAwC,QAArBJ,EAAUI,QAGvDrE,KAAM,GAAIU,IAAKuD,EAAUvM,cAQ7BwM,GAAW,SAAUF,GAErB,GAAIjB,GAAO,GAAII,EAAS,GAAIgB,EAAY,GAAIzM,EAAa,GAErDsL,GAAS,EAAMqB,EAAS,QAASC,EAAO,GAE5C,IAAuB,gBAAZN,GAAsB,CAE7B,GAAIO,GAAWP,EAAQlR,QAAQ,KAC3ByR,IAAY,IACZF,EAASL,EAAQlrB,UAAU,EAAGyrB,EAAW,GACzCP,EAAUA,EAAQlrB,UAAUyrB,EAAW,GAG3C,IAAIC,GAAWR,EAAQlR,QAAQ,MACb,IAAd0R,IACAA,EAAWR,EAAQrlC,OAEvB,IAAI8lC,GAAkBT,EAAQlR,QAAQ,MACb,IAArB2R,IACAA,EAAkBT,EAAQrlC,QAE9BokC,EAAOiB,EAAQlrB,UAAU,EAAGnY,KAAKmF,IAAI0+B,EAAUC,IAC3CD,EAAWC,IAEX/M,EAAaD,EAAWuM,EAAQlrB,UAAU0rB,EAAUC,IAExD,IAAIC,GAAc3M,EAAYiM,EAAQlrB,UAAUnY,KAAKmF,IAAIk+B,EAAQrlC,OAAQ8lC,IAEzEF,GAAWxB,EAAKjQ,QAAQ,KACpByR,GAAY,GACZvB,EAAoB,UAAXqB,GAAiC,QAAXA,EAC/BC,EAAO9E,SAASuD,EAAKjqB,UAAUyrB,EAAW,GAAI,KAG9CA,EAAWP,EAAQrlC,MAEvB,IAAIsvB,GAAQ8U,EAAKx/B,MAAM,IACF,KAAjB0qB,EAAMtvB,QAENwkC,EAASlV,EAAM,GACfkW,EAAYlW,EAAM,GAAG7V,eAEC,IAAjB6V,EAAMtvB,OACXwkC,EAASlV,EAAM,GAEoC,cAA9CA,EAAM,GAAGjuB,MAAM,EAAGukC,GAAUnsB,gBACjC+qB,EAAS,aAGK,KAAdgB,GAAoB,MAAQO,KAC5BP,EAAYO,EAAA,IAGpB,OACI3B,KAAMA,EACNuB,KAAMA,EACNnB,OAAQA,EACRgB,UAAWA,EACXnB,OAAQA,EACRqB,OAAQA,EACR3M,WAAYA,IAwBhBiN,GAAqB,iCAOrBC,GAAsB,+BAWtBC,GAAa,SAAUjiC,GACvB,MAAuB,gBAARA,IAAmC,IAAfA,EAAIjE,SAAiBgmC,GAAmBzyB,KAAKtP,IAMhFkiC,GAAoB,SAAUpN,GAC9B,MAA8B,gBAAfA,IACW,IAAtBA,EAAW/4B,SACVimC,GAAoB1yB,KAAKwlB,IAM9BqN,GAAwB,SAAUrN,GAKlC,MAJIA,KAEAA,EAAaA,EAAW7e,QAAQ,mBAAoB,MAEjDisB,GAAkBpN,IAMzBsN,GAAkB,SAAUpM,GAC5B,MAAqB,QAAbA,GACgB,gBAAbA,IACc,gBAAbA,KAA0B4E,EAAoB5E,IACrDA,GAAgC,gBAAbA,IAAyBhU,EAAKhB,SAASgV,EAAU,QAWzEqM,GAA0B,SAAU7b,EAAQC,EAAgBb,EAAMwX,EAAM1W,GACpEA,OAAqB9rB,KAATgrB,GAEhB0c,GAAqBtgB,EAAKuE,YAAYC,EAAQC,EAAgBC,GAAWd,EAAMwX,IAS/EkF,GAAuB,QAAvBA,GAAiC/b,EAAaX,EAAM2c,GACpD,GAAInF,GAAOmF,YAAiBzE,IAAO,GAAI0B,IAAe+C,EAAOhc,GAAegc,CAC5E,QAAa3nC,KAATgrB,EACA,KAAM,IAAI/nB,OAAM0oB,EAAc,sBAAwB6W,EAAK4C,gBAE/D,IAAoB,kBAATpa,GACP,KAAM,IAAI/nB,OAAM0oB,EACZ,uBACA6W,EAAK4C,gBACL,oBACApa,EAAKxmB,WAEb,IAAIw7B,EAAoBhV,GACpB,KAAM,IAAI/nB,OAAM0oB,EAAc,YAAcX,EAAKxmB,WAAa,IAAMg+B,EAAK4C,gBAG7E,IAAoB,gBAATpa,IACPA,EAAK7pB,OA5EQ,SA4EkB,GAC/BimB,EAAK6N,aAAajK,GA7EL,SA8Eb,KAAM,IAAI/nB,OAAM0oB,EACZ,sDAGA6W,EAAK4C,gBACL,MACApa,EAAK1P,UAAU,EAAG,IAClB,QAIR,IAAI0P,GAAwB,gBAATA,GAAmB,CAClC,GAAI4c,IAAgB,EAAOC,GAAmB,CAqB9C,IApBAzgB,EAAK9a,QAAQ0e,EAAM,SAAU5lB,EAAKlG,GAC9B,GAAY,WAARkG,EACAwiC,GAAgB,MAEf,IAAY,cAARxiC,GAA+B,QAARA,IAC5ByiC,GAAmB,GACdR,GAAWjiC,IACZ,KAAM,IAAInC,OAAM0oB,EACZ,6BACAvmB,EACA,KACAo9B,EAAK4C,gBACL,uFAIZ5C,GAAKliC,KAAK8E,GACVsiC,EAAqB/b,EAAazsB,EAAOsjC,GACzCA,EAAKzoB,QAEL6tB,GAAiBC,EACjB,KAAM,IAAI5kC,OAAM0oB,EACZ,4BACA6W,EAAK4C,gBACL,sCAUZ0C,GAA6B,SAAUnc,EAAaoc,GACpD,GAAIrqC,GAAGsqC,CACP,KAAKtqC,EAAI,EAAGA,EAAIqqC,EAAW5mC,OAAQzD,IAAK,CACpCsqC,EAAUD,EAAWrqC,EAErB,KAAK,GADDiO,GAAOq8B,EAAQxlC,QACVoK,EAAI,EAAGA,EAAIjB,EAAKxK,OAAQyL,IAC7B,GAAgB,cAAZjB,EAAKiB,IAAsBA,IAAMjB,EAAKxK,OAAS,OAG9C,KAAKkmC,GAAW17B,EAAKiB,IACtB,KAAM,IAAI3J,OAAM0oB,EACZ,4BACAhgB,EAAKiB,GACL,aACAo7B,EAAQxjC,WACR,uFAQhBujC,EAAW9G,KAAKiC,GAAKoB,aACrB,IAAI2D,GAAW,IACf,KAAKvqC,EAAI,EAAGA,EAAIqqC,EAAW5mC,OAAQzD,IAAK,CAEpC,GADAsqC,EAAUD,EAAWrqC,GACJ,OAAbuqC,GAAqBA,EAAS7hB,SAAS4hB,GACvC,KAAM,IAAI/kC,OAAM0oB,EACZ,mBACAsc,EAASzjC,WACT,qCACAwjC,EAAQxjC,WAEhByjC,GAAWD,IAafE,GAA+B,SAAUtc,EAAQC,EAAgBb,EAAMwX,EAAM1W,GAC7E,IAAIA,OAAqB9rB,KAATgrB,EAAhB,CAEA,GAAIW,GAAcvE,EAAKuE,YAAYC,EAAQC,EAAgBC,EAC3D,KAAMd,GAAwB,gBAATA,IAAsBzoB,MAAMkG,QAAQuiB,GACrD,KAAM,IAAI/nB,OAAM0oB,EAAc,yDAElC,IAAIoc,KACJ3gB,GAAK9a,QAAQ0e,EAAM,SAAU5lB,EAAKlG,GAC9B,GAAI8oC,GAAU,GAAI9E,IAAK99B,EAEvB,IADAsiC,GAAqB/b,EAAazsB,EAAOsjC,EAAKuB,MAAMiE,IAC1B,cAAtBA,EAAQrE,YACH6D,GAAgBtoC,GACjB,KAAM,IAAI+D,OAAM0oB,EACZ,kCACAqc,EAAQxjC,WACR,+FAIZujC,GAAWznC,KAAK0nC,KAEpBF,GAA2Bnc,EAAaoc,KAExCI,GAAmB,SAAUvc,EAAQC,EAAgBuP,EAAUtP,GAC/D,IAAIA,OAAyB9rB,KAAbo7B,EAAhB,CAEA,GAAI4E,EAAoB5E,GACpB,KAAM,IAAIn4B,OAAMmkB,EAAKuE,YAAYC,EAAQC,EAAgBC,GACrD,MACAsP,EAAS52B,WACT,4FAGR,KAAKgjC,GAAgBpM,GACjB,KAAM,IAAIn4B,OAAMmkB,EAAKuE,YAAYC,EAAQC,EAAgBC,GACrD,yFAGRsc,GAAoB,SAAUxc,EAAQC,EAAgBwc,EAAWvc,GACjE,IAAIA,OAA0B9rB,KAAdqoC,EAEhB,OAAQA,GACJ,IAAK,QACL,IAAK,cACL,IAAK,gBACL,IAAK,gBACL,IAAK,cACD,KACJ,SACI,KAAM,IAAIplC,OAAMmkB,EAAKuE,YAAYC,EAAQC,EAAgBC,GACrD,8GAIZwc,GAAc,SAAU1c,EAAQC,EAAgBzmB,EAAK0mB,GACrD,KAAIA,OAAoB9rB,KAARoF,GAEXiiC,GAAWjiC,IACZ,KAAM,IAAInC,OAAMmkB,EAAKuE,YAAYC,EAAQC,EAAgBC,GACrD,yBACA1mB,EACA,qGAGRmjC,GAAqB,SAAU3c,EAAQC,EAAgBqO,EAAYpO,GACnE,KAAIA,OAA2B9rB,KAAfk6B,GAEXoN,GAAkBpN,IACnB,KAAM,IAAIj3B,OAAMmkB,EAAKuE,YAAYC,EAAQC,EAAgBC,GACrD,0BACAoO,EACA,qFAGRsO,GAAyB,SAAU5c,EAAQC,EAAgBqO,EAAYpO,GACnEoO,IAEAA,EAAaA,EAAW7e,QAAQ,mBAAoB,MAExDktB,GAAmB3c,EAAQC,EAAgBqO,EAAYpO,IAEvD2c,GAAuB,SAAU7c,EAAQ4W,GACzC,GAAwB,UAApBA,EAAKgB,WACL,KAAM,IAAIvgC,OAAM2oB,EAAS,8CAG7B8c,GAAc,SAAU9c,EAAQC,EAAgB4a,GAEhD,GAAIvM,GAAauM,EAAUjE,KAAKh+B,UAChC,IAAyC,gBAA5BiiC,GAAUG,SAASrB,MACO,IAAnCkB,EAAUG,SAASrB,KAAKpkC,SACtBkmC,GAAWZ,EAAUG,SAASngB,YACc,cAA1CggB,EAAUG,SAASrB,KAAKx/B,MAAM,KAAK,IAChB,IAAtBm0B,EAAW/4B,SAAiBomC,GAAsBrN,GACnD,KAAM,IAAIj3B,OAAMmkB,EAAKuE,YAAYC,EAAQC,GAAgB,GACrD,yFAIR8c,GAAkB,SAAU/c,EAAQC,EAAgB+c,EAAM9c,GAC1D,KAAIA,OAAqB9rB,KAAT4oC,IAEI,iBAATA,GACP,KAAM,IAAI3lC,OAAMmkB,EAAKuE,YAAYC,EAAQC,EAAgBC,GAAY,uBAqBzE+c,GAA8B,WAK9B,QAASA,GAAaC,EAAOnB,GACzBhoC,KAAKmpC,MAAQA,EACbnpC,KAAKgoC,MAAQA,EA8EjB,MAxEAkB,GAAajqC,UAAUmqC,OAAS,SAAUC,GACtC5hB,EAAKsN,iBAAiB,sBAAuB,EAAG,EAAGj1B,UAAU0B,QAC7DimB,EAAK6E,iBAAiB,sBAAuB,EAAG+c,GAAY,EAC5D,IAAI3oC,GAAW,GAAI+mB,GAAKkI,QAExB,OADA3vB,MAAKmpC,MAAMG,mBAAmBtpC,KAAKgoC,MAAOtnC,EAASkvB,aAAayZ,IACzD3oC,EAASQ,SAMpBgoC,EAAajqC,UAAU4/B,OAAS,SAAUwK,GACtC5hB,EAAKsN,iBAAiB,sBAAuB,EAAG,EAAGj1B,UAAU0B,QAC7DsnC,GAAqB,sBAAuB9oC,KAAKgoC,OACjDvgB,EAAK6E,iBAAiB,sBAAuB,EAAG+c,GAAY,EAC5D,IAAI3oC,GAAW,GAAI+mB,GAAKkI,QAExB,OADA3vB,MAAKmpC,MAAMI,gBAAgBvpC,KAAKgoC,MAAO,KAAMtnC,EAASkvB,aAAayZ,IAC5D3oC,EAASQ,SAOpBgoC,EAAajqC,UAAUgV,IAAM,SAAU1U,EAAO8pC,GAC1C5hB,EAAKsN,iBAAiB,mBAAoB,EAAG,EAAGj1B,UAAU0B,QAC1DsnC,GAAqB,mBAAoB9oC,KAAKgoC,OAC9CF,GAAwB,mBAAoB,EAAGvoC,EAAOS,KAAKgoC,OAAO,GAClEvgB,EAAK6E,iBAAiB,mBAAoB,EAAG+c,GAAY,EACzD,IAAI3oC,GAAW,GAAI+mB,GAAKkI,QAExB,OADA3vB,MAAKmpC,MAAMI,gBAAgBvpC,KAAKgoC,MAAOzoC,EAAOmB,EAASkvB,aAAayZ,IAC7D3oC,EAASQ,SAQpBgoC,EAAajqC,UAAUuqC,gBAAkB,SAAUjqC,EAAOk8B,EAAU4N,GAChE5hB,EAAKsN,iBAAiB,+BAAgC,EAAG,EAAGj1B,UAAU0B,QACtEsnC,GAAqB,+BAAgC9oC,KAAKgoC,OAC1DF,GAAwB,+BAAgC,EAAGvoC,EAAOS,KAAKgoC,OAAO,GAC9EQ,GAAiB,+BAAgC,EAAG/M,GAAU,GAC9DhU,EAAK6E,iBAAiB,+BAAgC,EAAG+c,GAAY,EACrE,IAAI3oC,GAAW,GAAI+mB,GAAKkI,QAExB,OADA3vB,MAAKmpC,MAAMM,4BAA4BzpC,KAAKgoC,MAAOzoC,EAAOk8B,EAAU/6B,EAASkvB,aAAayZ,IACnF3oC,EAASQ,SAOpBgoC,EAAajqC,UAAU20B,OAAS,SAAU8V,EAAeL,GAGrD,GAFA5hB,EAAKsN,iBAAiB,sBAAuB,EAAG,EAAGj1B,UAAU0B,QAC7DsnC,GAAqB,sBAAuB9oC,KAAKgoC,OAC7CplC,MAAMkG,QAAQ4gC,GAAgB,CAE9B,IAAK,GADDC,MACK5rC,EAAI,EAAGA,EAAI2rC,EAAcloC,SAAUzD,EACxC4rC,EAAiB,GAAK5rC,GAAK2rC,EAAc3rC,EAE7C2rC,GAAgBC,EAChBxmC,EAAK,gOAGTolC,GAA6B,sBAAuB,EAAGmB,EAAe1pC,KAAKgoC,OAAO,GAClFvgB,EAAK6E,iBAAiB,sBAAuB,EAAG+c,GAAY,EAC5D,IAAI3oC,GAAW,GAAI+mB,GAAKkI,QAExB,OADA3vB,MAAKmpC,MAAMS,mBAAmB5pC,KAAKgoC,MAAO0B,EAAehpC,EAASkvB,aAAayZ,IACxE3oC,EAASQ,SAEbgoC,KAkBPW,GAAmC,WAQnC,QAASA,GAAkBC,EAAW3kB,GAClCnlB,KAAK8pC,UAAYA,EACjB9pC,KAAKmlB,SAAWA,EAQpB,MAJA0kB,GAAkB5qC,UAAU8qC,OAAS,WAEjC,MADAtiB,GAAKsN,iBAAiB,2BAA4B,EAAG,EAAGj1B,UAAU0B,SACzDsoC,UAAW9pC,KAAK8pC,UAAW3kB,SAAUnlB,KAAKmlB,SAAS4kB,WAEzDF,KAgCPG,GAAc,WAEd,GAAIC,GAAa,mEAGbC,EAAe,EAKfC,IACJ,OAAO,UAAUjZ,GACb,GAAIkZ,GAAgBlZ,IAAQgZ,CAC5BA,GAAehZ,CACf,IAAInzB,GACAssC,EAAiB,GAAIznC,OAAM,EAC/B,KAAK7E,EAAI,EAAGA,GAAK,EAAGA,IAChBssC,EAAetsC,GAAKksC,EAAWx6B,OAAOyhB,EAAM,IAG5CA,EAAM1tB,KAAKgF,MAAM0oB,EAAM,GAE3BzJ,GAAKmF,OAAe,IAARsE,EAAW,2BACvB,IAAIvrB,GAAK0kC,EAAe7jC,KAAK,GAC7B,IAAK4jC,EAKA,CAGD,IAAKrsC,EAAI,GAAIA,GAAK,GAA0B,KAArBosC,EAAcpsC,GAAWA,IAC5CosC,EAAcpsC,GAAK,CAEvBosC,GAAcpsC,SAVd,KAAKA,EAAI,EAAGA,EAAI,GAAIA,IAChBosC,EAAcpsC,GAAKyF,KAAKgF,MAAsB,GAAhBhF,KAAKqC,SAW3C,KAAK9H,EAAI,EAAGA,EAAI,GAAIA,IAChB4H,GAAMskC,EAAWx6B,OAAO06B,EAAcpsC,GAG1C,OADA0pB,GAAKmF,OAAqB,KAAdjnB,EAAGnE,OAAe,oCACvBmE,MA0BX82B,GAA2B,WAC3B,QAASA,GAAUp+B,EAAMisC,GACrBtqC,KAAK3B,KAAOA,EACZ2B,KAAKsqC,KAAOA,EAWhB,MAHA7N,GAAU8N,KAAO,SAAUlsC,EAAMisC,GAC7B,MAAO,IAAI7N,GAAUp+B,EAAMisC,IAExB7N,KAsBP+N,GAAuB,WACvB,QAASA,MA6BT,MAvBAA,GAAMvrC,UAAU89B,WAAa,WACzB,MAAO/8B,MAAKyqC,QAAQ/qC,KAAKM,OAU7BwqC,EAAMvrC,UAAUyrC,oBAAsB,SAAUC,EAASC,GAGrD,MAAgD,KAAzC5qC,KAAKyqC,QAFK,GAAIhO,IAAUqE,EAAU6J,GACxB,GAAIlO,IAAUqE,EAAU8J,KAO7CJ,EAAMvrC,UAAU4rC,QAAU,WACtB,MAAOpO,IAAUqO,KAEdN,KAmBPO,GAA0B,SAAU/X,GAEpC,QAAS+X,KACL,MAAkB,QAAX/X,GAAmBA,EAAOnzB,MAAMG,KAAMF,YAAcE,KA8D/D,MAhEAwsB,GAAQgH,UAAUuX,EAAU/X,GAI5Bx0B,OAAOC,eAAessC,EAAU,gBAC5BnsC,IAAK,WACD,MAAOk/B,IAEX7pB,IAAK,SAAUxR,GACXq7B,EAAer7B,GAEnB9D,YAAY,EACZD,cAAc,IAKlBqsC,EAAS9rC,UAAUwrC,QAAU,SAAUpmC,EAAGwC,GACtC,MAAOw0B,GAAYh3B,EAAEhG,KAAMwI,EAAExI,OAKjC0sC,EAAS9rC,UAAU+rC,YAAc,WAG7B,KAAMvjB,GAAKsF,eAAe,oDAK9Bge,EAAS9rC,UAAUyrC,oBAAsB,WACrC,OAAO,GAKXK,EAAS9rC,UAAU4rC,QAAU,WACzB,MAAOpO,IAAUqO,KAKrBC,EAAS9rC,UAAUgsC,QAAU,WAGzB,MAAO,IAAIxO,IAAUsE,EAAUjD,IAOnCiN,EAAS9rC,UAAUisC,SAAW,SAAUC,GAGpC,MAFA1jB,GAAKmF,OAA6B,gBAAfue,GAAyB,gDAErC,GAAI1O,IAAU0O,EAAYrN,IAKrCiN,EAAS9rC,UAAU4F,SAAW,WAC1B,MAAO,QAEJkmC,GACTP,IACEY,GAAY,GAAIL,IAyBhBM,GAAmB,SAAU5P,GAC7B,MAAwB,gBAAbA,GACA,UAAYkG,EAAsBlG,GAElC,UAAYA,GAOvB6P,GAAuB,SAAUC,GACjC,GAAIA,EAAarP,aAAc,CAC3B,GAAIz5B,GAAM8oC,EAAa9oC,KACvBglB,GAAKmF,OAAsB,gBAARnqB,IACA,gBAARA,IACS,gBAARA,IAAoBglB,EAAKhB,SAAShkB,EAAK,OAAS,4CAG5DglB,GAAKmF,OAAO2e,IAAiBxN,GAAYwN,EAAa1Z,UAAW,+BAGrEpK,GAAKmF,OAAO2e,IAAiBxN,GAAYwN,EAAa/O,cAAc3K,UAAW,uDAwB/E+J,GAA0B,WAO1B,QAASA,GAAS4P,EAAQC,OACA,KAAlBA,IAA4BA,EAAgB7P,EAASoC,0BAA0BrC,YACnF37B,KAAKwrC,OAASA,EACdxrC,KAAKyrC,cAAgBA,EACrBzrC,KAAK0rC,UAAY,KACjBjkB,EAAKmF,WAAuBvsB,KAAhBL,KAAKwrC,QAAwC,OAAhBxrC,KAAKwrC,OAAiB,4DAC/DF,GAAqBtrC,KAAKyrC,eA+N9B,MA7NAjtC,QAAOC,eAAem9B,EAAU,6BAC5Bh9B,IAAK,WACD,MAAOo/B,IAEX/pB,IAAK,SAAUxR,GACXu7B,EAA4Bv7B,GAEhC9D,YAAY,EACZD,cAAc,IAGlBk9B,EAAS38B,UAAUi9B,WAAa,WAC5B,OAAO,GAGXN,EAAS38B,UAAUu9B,YAAc,WAC7B,MAAOx8B,MAAKyrC,eAGhB7P,EAAS38B,UAAUm9B,eAAiB,SAAUuP,GAC1C,MAAO,IAAI/P,GAAS57B,KAAKwrC,OAAQG,IAGrC/P,EAAS38B,UAAU2sC,kBAAoB,SAAUC,GAE7C,MAAkB,cAAdA,EACO7rC,KAAKyrC,cAGL7P,EAASoC,0BAA0BrC,YAIlDC,EAAS38B,UAAU6sC,SAAW,SAAUjJ,GACpC,MAAIA,GAAKhR,UACE7xB,KAEkB,cAApB6iC,EAAKgB,WACH7jC,KAAKyrC,cAGL7P,EAASoC,0BAA0BrC,YAMlDC,EAAS38B,UAAU8sC,SAAW,WAC1B,OAAO,GAGXnQ,EAAS38B,UAAU+sC,wBAA0B,WACzC,MAAO,OAGXpQ,EAAS38B,UAAUk9B,qBAAuB,SAAU0P,EAAWI,GAC3D,MAAkB,cAAdJ,EACO7rC,KAAKo8B,eAAe6P,GAEtBA,EAAapa,WAA2B,cAAdga,EACxB7rC,KAGA47B,EAASoC,0BAA0BrC,WAAWQ,qBAAqB0P,EAAWI,GAAc7P,eAAep8B,KAAKyrC,gBAI/H7P,EAAS38B,UAAUitC,YAAc,SAAUrJ,EAAMoJ,GAC7C,GAAIE,GAAQtJ,EAAKgB,UACjB,OAAc,QAAVsI,EACOF,EAEFA,EAAapa,WAAuB,cAAVsa,EACxBnsC,MAGPynB,EAAKmF,OAAiB,cAAVuf,GAA8C,IAArBtJ,EAAKiB,YAAmB,8CACtD9jC,KAAKm8B,qBAAqBgQ,EAAOvQ,EAASoC,0BAA0BrC,WAAWuQ,YAAYrJ,EAAKkB,WAAYkI,MAI3HrQ,EAAS38B,UAAU4yB,QAAU,WACzB,OAAO,GAGX+J,EAAS38B,UAAUmtC,YAAc,WAC7B,MAAO,IAGXxQ,EAAS38B,UAAUotC,aAAe,WAC9B,OAAO,GAKXzQ,EAAS38B,UAAUwD,IAAM,SAAU6pC,GAC/B,MAAIA,KAAiBtsC,KAAKw8B,cAAc3K,WAEhC0a,SAAUvsC,KAAKwsC,WACfvP,YAAaj9B,KAAKw8B,cAAc/5B,OAG7BzC,KAAKwsC,YAGpB5Q,EAAS38B,UAAUwtC,KAAO,WACtB,GAAuB,OAAnBzsC,KAAK0rC,UAAoB,CACzB,GAAIgB,GAAS,EACR1sC,MAAKyrC,cAAc5Z,YACpB6a,GACI,YACIrB,GAAiBrrC,KAAKyrC,cAAchpC,OACpC,IACZ,IAAIsE,SAAc/G,MAAKwrC,MACvBkB,IAAU3lC,EAAO,IAEb2lC,GADS,WAAT3lC,EACU46B,EAAsB3hC,KAAKwrC,QAG3BxrC,KAAKwrC,OAEnBxrC,KAAK0rC,UAAYlM,EAAKkN,GAE1B,MAAO1sC,MAAK0rC,WAMhB9P,EAAS38B,UAAUutC,SAAW,WAC1B,MAAOxsC,MAAKwrC,QAKhB5P,EAAS38B,UAAU0tC,UAAY,SAAU3H,GACrC,MAAIA,KAAUpJ,EAASoC,0BAA0BrC,WACtC,EAEFqJ,YAAiBpJ,GAASoC,2BACvB,GAGRvW,EAAKmF,OAAOoY,EAAM9I,aAAc,qBACzBl8B,KAAK4sC,mBAAmB5H,KASvCpJ,EAAS38B,UAAU2tC,mBAAqB,SAAUC,GAC9C,GAAIC,SAAuBD,GAAUrB,OACjCuB,QAAsB/sC,MAAKwrC,OAC3BwB,EAAapR,EAASqR,iBAAiBtX,QAAQmX,GAC/CI,EAAYtR,EAASqR,iBAAiBtX,QAAQoX,EAGlD,OAFAtlB,GAAKmF,OAAOogB,GAAc,EAAG,sBAAwBF,GACrDrlB,EAAKmF,OAAOsgB,GAAa,EAAG,sBAAwBH,GAChDC,IAAeE,EAEM,WAAjBH,EAEO,EAIH/sC,KAAKwrC,OAASqB,EAAUrB,QAChB,EAEHxrC,KAAKwrC,SAAWqB,EAAUrB,OACxB,EAGA,EAKR0B,EAAYF,GAM3BpR,EAAS38B,UAAUkuC,UAAY,WAC3B,MAAOntC,OAKX47B,EAAS38B,UAAUmuC,UAAY,WAC3B,OAAO,GAKXxR,EAAS38B,UAAU8lC,OAAS,SAAUC,GAIlC,GAAIA,IAAUhlC,KACV,OAAO,CAEN,IAAIglC,EAAM9I,aAAc,CACzB,GAAI2Q,GAAY7H,CAChB,OAAQhlC,MAAKwrC,SAAWqB,EAAUrB,QAC9BxrC,KAAKyrC,cAAc1G,OAAO8H,EAAUpB,eAGxC,OAAO,GASf7P,EAASqR,kBAAoB,SAAU,UAAW,SAAU,UACrDrR,KA+BPyR,GAA+B,SAAUra,GAEzC,QAASqa,KACL,MAAkB,QAAXra,GAAmBA,EAAOnzB,MAAMG,KAAMF,YAAcE,KAuD/D,MAzDAwsB,GAAQgH,UAAU6Z,EAAera,GAOjCqa,EAAcpuC,UAAUwrC,QAAU,SAAUpmC,EAAGwC,GAC3C,GAAIymC,GAAYjpC,EAAEimC,KAAK9N,cACnB+Q,EAAY1mC,EAAEyjC,KAAK9N,cACnBgR,EAAWF,EAAUX,UAAUY,EACnC,OAAiB,KAAbC,EACOnS,EAAYh3B,EAAEhG,KAAMwI,EAAExI,MAGtBmvC,GAMfH,EAAcpuC,UAAU+rC,YAAc,SAAUV,GAC5C,OAAQA,EAAK9N,cAAc3K,WAK/Bwb,EAAcpuC,UAAUyrC,oBAAsB,SAAUC,EAASC,GAC7D,OAAQD,EAAQnO,cAAcuI,OAAO6F,EAAQpO,gBAKjD6Q,EAAcpuC,UAAU4rC,QAAU,WAC9B,MAAOpO,IAAUqO,KAKrBuC,EAAcpuC,UAAUgsC,QAAU,WAC9B,MAAO,IAAIxO,IAAUsE,EAAU,GAAInF,IAAS,kBAAmBsC,KAOnEmP,EAAcpuC,UAAUisC,SAAW,SAAUC,EAAY9sC,GACrD,GAAIktC,GAAetN,EAAakN,EAChC,OAAO,IAAI1O,IAAUp+B,EAAM,GAAIu9B,IAAS,kBAAmB2P,KAK/D8B,EAAcpuC,UAAU4F,SAAW,WAC/B,MAAO,aAEJwoC,GACT7C,IACE1N,GAAiB,GAAIuQ,IAoBrBI,GAAmC,WASnC,QAASA,GAAkBnD,EAAMoD,EAAUC,EAAYC,EAAYC,OACtC,KAArBA,IAA+BA,EAAmB,MACtD7tC,KAAK4tC,WAAaA,EAClB5tC,KAAK6tC,iBAAmBA,EAIxB7tC,KAAK8tC,aAEL,KADA,GAAIhJ,GAAM,GACFwF,EAAKzY,WAMT,GALAyY,EAAOA,EACPxF,EAAM4I,EAAWC,EAAWrD,EAAK7kC,IAAKioC,GAAY,EAE9CE,IACA9I,IAAQ,GACRA,EAAM,EAGFwF,EADAtqC,KAAK4tC,WACEtD,EAAKnP,KAGLmP,EAAKlP,UAGf,IAAY,IAAR0J,EAAW,CAEhB9kC,KAAK8tC,WAAWntC,KAAK2pC,EACrB,OAIAtqC,KAAK8tC,WAAWntC,KAAK2pC,GAEjBA,EADAtqC,KAAK4tC,WACEtD,EAAKlP,MAGLkP,EAAKnP,MA4C5B,MAvCAsS,GAAkBxuC,UAAU8uC,QAAU,WAClC,GAA+B,IAA3B/tC,KAAK8tC,WAAWtsC,OAChB,MAAO,KACX,IACI+I,GADA+/B,EAAOtqC,KAAK8tC,WAAW1zB,KAM3B,IAHI7P,EADAvK,KAAK6tC,iBACI7tC,KAAK6tC,iBAAiBvD,EAAK7kC,IAAK6kC,EAAK/qC,QAEnCkG,IAAK6kC,EAAK7kC,IAAKlG,MAAO+qC,EAAK/qC,OACtCS,KAAK4tC,WAEL,IADAtD,EAAOA,EAAKnP,MACJmP,EAAKzY,WACT7xB,KAAK8tC,WAAWntC,KAAK2pC,GACrBA,EAAOA,EAAKlP,UAKhB,KADAkP,EAAOA,EAAKlP,OACJkP,EAAKzY,WACT7xB,KAAK8tC,WAAWntC,KAAK2pC,GACrBA,EAAOA,EAAKnP,IAGpB,OAAO5wB,IAEXkjC,EAAkBxuC,UAAU+uC,QAAU,WAClC,MAAOhuC,MAAK8tC,WAAWtsC,OAAS,GAEpCisC,EAAkBxuC,UAAUgvC,KAAO,WAC/B,GAA+B,IAA3BjuC,KAAK8tC,WAAWtsC,OAChB,MAAO,KACX,IAAI8oC,GAAOtqC,KAAK8tC,WAAW9tC,KAAK8tC,WAAWtsC,OAAS,EACpD,OAAIxB,MAAK6tC,iBACE7tC,KAAK6tC,iBAAiBvD,EAAK7kC,IAAK6kC,EAAK/qC,QAGnCkG,IAAK6kC,EAAK7kC,IAAKlG,MAAO+qC,EAAK/qC,QAGrCkuC,KAKPS,GAA0B,WAS1B,QAASA,GAASzoC,EAAKlG,EAAO4uC,EAAOhT,EAAMC,GACvCp7B,KAAKyF,IAAMA,EACXzF,KAAKT,MAAQA,EACbS,KAAKmuC,MAAiB,MAATA,EAAgBA,EAAQD,EAASE,IAC9CpuC,KAAKm7B,KACO,MAARA,EAAeA,EAAOkT,GAAU1S,WACpC37B,KAAKo7B,MACQ,MAATA,EAAgBA,EAAQiT,GAAU1S,WA+P1C,MAnPAuS,GAASjvC,UAAUqvC,KAAO,SAAU7oC,EAAKlG,EAAO4uC,EAAOhT,EAAMC,GACzD,MAAO,IAAI8S,GAAgB,MAAPzoC,EAAcA,EAAMzF,KAAKyF,IAAc,MAATlG,EAAgBA,EAAQS,KAAKT,MAAgB,MAAT4uC,EAAgBA,EAAQnuC,KAAKmuC,MAAe,MAARhT,EAAeA,EAAOn7B,KAAKm7B,KAAe,MAATC,EAAgBA,EAAQp7B,KAAKo7B,QAK5L8S,EAASjvC,UAAU8O,MAAQ,WACvB,MAAO/N,MAAKm7B,KAAKptB,QAAU,EAAI/N,KAAKo7B,MAAMrtB,SAK9CmgC,EAASjvC,UAAU4yB,QAAU,WACzB,OAAO,GAWXqc,EAASjvC,UAAUsvC,iBAAmB,SAAUC,GAC5C,MAAQxuC,MAAKm7B,KAAKoT,iBAAiBC,IAC/BA,EAAOxuC,KAAKyF,IAAKzF,KAAKT,QACtBS,KAAKo7B,MAAMmT,iBAAiBC,IAUpCN,EAASjvC,UAAUwvC,iBAAmB,SAAUD,GAC5C,MAAQxuC,MAAKo7B,MAAMqT,iBAAiBD,IAChCA,EAAOxuC,KAAKyF,IAAKzF,KAAKT,QACtBS,KAAKm7B,KAAKsT,iBAAiBD,IAMnCN,EAASjvC,UAAUyvC,KAAO,WACtB,MAAI1uC,MAAKm7B,KAAKtJ,UACH7xB,KAGAA,KAAKm7B,KAAKuT,QAMzBR,EAASjvC,UAAU0vC,OAAS,WACxB,MAAO3uC,MAAK0uC,OAAOjpC,KAKvByoC,EAASjvC,UAAU2vC,OAAS,WACxB,MAAI5uC,MAAKo7B,MAAMvJ,UACJ7xB,KAAKyF,IAGLzF,KAAKo7B,MAAMwT,UAU1BV,EAASjvC,UAAU4vC,OAAS,SAAUppC,EAAKlG,EAAOouC,GAC9C,GAAI7I,GAAKjmC,CAYT,OAXAA,GAAImB,KACJ8kC,EAAM6I,EAAWloC,EAAK5G,EAAE4G,KAEpB5G,EADAimC,EAAM,EACFjmC,EAAEyvC,KAAK,KAAM,KAAM,KAAMzvC,EAAEs8B,KAAK0T,OAAOppC,EAAKlG,EAAOouC,GAAa,MAEvD,IAAR7I,EACDjmC,EAAEyvC,KAAK,KAAM/uC,EAAO,KAAM,KAAM,MAGhCV,EAAEyvC,KAAK,KAAM,KAAM,KAAM,KAAMzvC,EAAEu8B,MAAMyT,OAAOppC,EAAKlG,EAAOouC,IAE3D9uC,EAAEiwC,UAMbZ,EAASjvC,UAAU8vC,WAAa,WAC5B,GAAI/uC,KAAKm7B,KAAKtJ,UACV,MAAOwc,IAAU1S,UAErB,IAAI98B,GAAImB,IAIR,OAHKnB,GAAEs8B,KAAK6T,UAAanwC,EAAEs8B,KAAKA,KAAK6T,WACjCnwC,EAAIA,EAAEowC,gBACVpwC,EAAIA,EAAEyvC,KAAK,KAAM,KAAM,KAAMzvC,EAAEs8B,KAAK4T,aAAc,MAC3ClwC,EAAEiwC,UAObZ,EAASjvC,UAAU4/B,OAAS,SAAUp5B,EAAKkoC,GACvC,GAAI9uC,GAAGqwC,CAEP,IADArwC,EAAImB,KACA2tC,EAAWloC,EAAK5G,EAAE4G,KAAO,EACpB5G,EAAEs8B,KAAKtJ,WAAchzB,EAAEs8B,KAAK6T,UAAanwC,EAAEs8B,KAAKA,KAAK6T,WACtDnwC,EAAIA,EAAEowC,gBAEVpwC,EAAIA,EAAEyvC,KAAK,KAAM,KAAM,KAAMzvC,EAAEs8B,KAAK0D,OAAOp5B,EAAKkoC,GAAa,UAE5D,CAMD,GALI9uC,EAAEs8B,KAAK6T,WACPnwC,EAAIA,EAAEswC,gBACLtwC,EAAEu8B,MAAMvJ,WAAchzB,EAAEu8B,MAAM4T,UAAanwC,EAAEu8B,MAAMD,KAAK6T,WACzDnwC,EAAIA,EAAEuwC,iBAEqB,IAA3BzB,EAAWloC,EAAK5G,EAAE4G,KAAY,CAC9B,GAAI5G,EAAEu8B,MAAMvJ,UACR,MAAOwc,IAAU1S,UAGjBuT,GAAWrwC,EAAEu8B,MAAMsT,OACnB7vC,EAAIA,EAAEyvC,KAAKY,EAASzpC,IAAKypC,EAAS3vC,MAAO,KAAM,KAAMV,EAAEu8B,MAAM2T,cAGrElwC,EAAIA,EAAEyvC,KAAK,KAAM,KAAM,KAAM,KAAMzvC,EAAEu8B,MAAMyD,OAAOp5B,EAAKkoC,IAE3D,MAAO9uC,GAAEiwC,UAMbZ,EAASjvC,UAAU+vC,OAAS,WACxB,MAAOhvC,MAAKmuC,OAMhBD,EAASjvC,UAAU6vC,OAAS,WACxB,GAAIjwC,GAAImB,IAOR,OANInB,GAAEu8B,MAAM4T,WAAanwC,EAAEs8B,KAAK6T,WAC5BnwC,EAAIA,EAAEwwC,eACNxwC,EAAEs8B,KAAK6T,UAAYnwC,EAAEs8B,KAAKA,KAAK6T,WAC/BnwC,EAAIA,EAAEswC,gBACNtwC,EAAEs8B,KAAK6T,UAAYnwC,EAAEu8B,MAAM4T,WAC3BnwC,EAAIA,EAAEywC,cACHzwC,GAMXqvC,EAASjvC,UAAUgwC,aAAe,WAC9B,GAAIpwC,GAAImB,KAAKsvC,YAMb,OALIzwC,GAAEu8B,MAAMD,KAAK6T,WACbnwC,EAAIA,EAAEyvC,KAAK,KAAM,KAAM,KAAM,KAAMzvC,EAAEu8B,MAAM+T,gBAC3CtwC,EAAIA,EAAEwwC,cACNxwC,EAAIA,EAAEywC,cAEHzwC,GAMXqvC,EAASjvC,UAAUmwC,cAAgB,WAC/B,GAAIvwC,GAAImB,KAAKsvC,YAKb,OAJIzwC,GAAEs8B,KAAKA,KAAK6T,WACZnwC,EAAIA,EAAEswC,eACNtwC,EAAIA,EAAEywC,cAEHzwC,GAMXqvC,EAASjvC,UAAUowC,YAAc,WAE7B,MAAOrvC,MAAKo7B,MAAMkT,KAAK,KAAM,KAAMtuC,KAAKmuC,MAD/BnuC,KAAKsuC,KAAK,KAAM,KAAMJ,EAASE,IAAK,KAAMpuC,KAAKo7B,MAAMD,MACX,OAMvD+S,EAASjvC,UAAUkwC,aAAe,WAE9B,MAAOnvC,MAAKm7B,KAAKmT,KAAK,KAAM,KAAMtuC,KAAKmuC,MAAO,KADrCnuC,KAAKsuC,KAAK,KAAM,KAAMJ,EAASE,IAAKpuC,KAAKm7B,KAAKC,MAAO,QAOlE8S,EAASjvC,UAAUqwC,WAAa,WAG5B,MAAOtvC,MAAKsuC,KAAK,KAAM,MAAOtuC,KAAKmuC,MAFxBnuC,KAAKm7B,KAAKmT,KAAK,KAAM,MAAOtuC,KAAKm7B,KAAKgT,MAAO,KAAM,MAClDnuC,KAAKo7B,MAAMkT,KAAK,KAAM,MAAOtuC,KAAKo7B,MAAM+S,MAAO,KAAM,QASrED,EAASjvC,UAAUswC,eAAiB,WAChC,GAAIC,GAAaxvC,KAAKyvC,QACtB,OAAOjsC,MAAKu+B,IAAI,EAAKyN,IAAexvC,KAAK+N,QAAU,GAMvDmgC,EAASjvC,UAAUwwC,OAAS,WACxB,GAAID,EACJ,IAAIxvC,KAAKgvC,UAAYhvC,KAAKm7B,KAAK6T,SAC3B,KAAM,IAAI1rC,OAAM,0BAA4BtD,KAAKyF,IAAM,IAAMzF,KAAKT,MAAQ,IAE9E,IAAIS,KAAKo7B,MAAM4T,SACX,KAAM,IAAI1rC,OAAM,mBAAqBtD,KAAKyF,IAAM,IAAMzF,KAAKT,MAAQ,WAGvE,KADAiwC,EAAaxvC,KAAKm7B,KAAKsU,YACJzvC,KAAKo7B,MAAMqU,SAC1B,KAAM,IAAInsC,OAAM,sBAGhB,OAAOksC,IAAcxvC,KAAKgvC,SAAW,EAAI,IAGjDd,EAASE,KAAM,EACfF,EAASwB,OAAQ,EACVxB,KAKPyB,GAA+B,WAC/B,QAASA,MA2FT,MApFAA,GAAc1wC,UAAUqvC,KAAO,WAC3B,MAAOtuC,OAUX2vC,EAAc1wC,UAAU4vC,OAAS,SAAUppC,EAAKlG,GAC5C,MAAO,IAAI2uC,IAASzoC,EAAKlG,EAAO,OASpCowC,EAAc1wC,UAAU4/B,OAAS,WAC7B,MAAO7+B,OAKX2vC,EAAc1wC,UAAU8O,MAAQ,WAC5B,MAAO,IAKX4hC,EAAc1wC,UAAU4yB,QAAU,WAC9B,OAAO,GAUX8d,EAAc1wC,UAAUsvC,iBAAmB,WACvC,OAAO,GAUXoB,EAAc1wC,UAAUwvC,iBAAmB,WACvC,OAAO,GAKXkB,EAAc1wC,UAAU0vC,OAAS,WAC7B,MAAO,OAKXgB,EAAc1wC,UAAU2vC,OAAS,WAC7B,MAAO,OAMXe,EAAc1wC,UAAUwwC,OAAS,WAC7B,MAAO,IAMXE,EAAc1wC,UAAU+vC,OAAS,WAC7B,OAAO,GAEJW,KAMPtB,GAA2B,WAM3B,QAASA,GAAUuB,EAAaC,OACd,KAAVA,IAAoBA,EAAQxB,EAAU1S,YAC1C37B,KAAK4vC,YAAcA,EACnB5vC,KAAK6vC,MAAQA,EAyJjB,MA/IAxB,GAAUpvC,UAAU4vC,OAAS,SAAUppC,EAAKlG,GACxC,MAAO,IAAI8uC,GAAUruC,KAAK4vC,YAAa5vC,KAAK6vC,MACvChB,OAAOppC,EAAKlG,EAAOS,KAAK4vC,aACxBtB,KAAK,KAAM,KAAMJ,GAASwB,MAAO,KAAM,QAQhDrB,EAAUpvC,UAAU4/B,OAAS,SAAUp5B,GACnC,MAAO,IAAI4oC,GAAUruC,KAAK4vC,YAAa5vC,KAAK6vC,MACvChR,OAAOp5B,EAAKzF,KAAK4vC,aACjBtB,KAAK,KAAM,KAAMJ,GAASwB,MAAO,KAAM,QAShDrB,EAAUpvC,UAAUL,IAAM,SAAU6G,GAGhC,IAFA,GAAIq/B,GACAwF,EAAOtqC,KAAK6vC,OACRvF,EAAKzY,WAAW,CAEpB,GAAY,KADZiT,EAAM9kC,KAAK4vC,YAAYnqC,EAAK6kC,EAAK7kC,MAE7B,MAAO6kC,GAAK/qC,KAEPulC,GAAM,EACXwF,EAAOA,EAAKnP,KAEP2J,EAAM,IACXwF,EAAOA,EAAKlP,OAGpB,MAAO,OAOXiT,EAAUpvC,UAAU6wC,kBAAoB,SAAUrqC,GAE9C,IADA,GAAIq/B,GAAKwF,EAAOtqC,KAAK6vC,MAAOE,EAAc,MAClCzF,EAAKzY,WAAW,CAEpB,GAAY,KADZiT,EAAM9kC,KAAK4vC,YAAYnqC,EAAK6kC,EAAK7kC,MAClB,CACX,GAAK6kC,EAAKnP,KAAKtJ,UAMV,MAAIke,GACEA,EAAYtqC,IAGZ,IARP,KADA6kC,EAAOA,EAAKnP,MACJmP,EAAKlP,MAAMvJ,WACfyY,EAAOA,EAAKlP,KAChB,OAAOkP,GAAK7kC,IASXq/B,EAAM,EACXwF,EAAOA,EAAKnP,KAEP2J,EAAM,IACXiL,EAAczF,EACdA,EAAOA,EAAKlP,OAGpB,KAAM,IAAI93B,OAAM,0EAKpB+qC,EAAUpvC,UAAU4yB,QAAU,WAC1B,MAAO7xB,MAAK6vC,MAAMhe,WAKtBwc,EAAUpvC,UAAU8O,MAAQ,WACxB,MAAO/N,MAAK6vC,MAAM9hC,SAKtBsgC,EAAUpvC,UAAU0vC,OAAS,WACzB,MAAO3uC,MAAK6vC,MAAMlB,UAKtBN,EAAUpvC,UAAU2vC,OAAS,WACzB,MAAO5uC,MAAK6vC,MAAMjB,UAWtBP,EAAUpvC,UAAUsvC,iBAAmB,SAAUC,GAC7C,MAAOxuC,MAAK6vC,MAAMtB,iBAAiBC,IAUvCH,EAAUpvC,UAAUwvC,iBAAmB,SAAUD,GAC7C,MAAOxuC,MAAK6vC,MAAMpB,iBAAiBD,IAQvCH,EAAUpvC,UAAU+wC,YAAc,SAAUC,GACxC,MAAO,IAAIxC,IAAkBztC,KAAK6vC,MAAO,KAAM7vC,KAAK4vC,aAAa,EAAOK,IAE5E5B,EAAUpvC,UAAUixC,gBAAkB,SAAUzqC,EAAKwqC,GACjD,MAAO,IAAIxC,IAAkBztC,KAAK6vC,MAAOpqC,EAAKzF,KAAK4vC,aAAa,EAAOK,IAE3E5B,EAAUpvC,UAAUkxC,uBAAyB,SAAU1qC,EAAKwqC,GACxD,MAAO,IAAIxC,IAAkBztC,KAAK6vC,MAAOpqC,EAAKzF,KAAK4vC,aAAa,EAAMK,IAE1E5B,EAAUpvC,UAAUmxC,mBAAqB,SAAUH,GAC/C,MAAO,IAAIxC,IAAkBztC,KAAK6vC,MAAO,KAAM7vC,KAAK4vC,aAAa,EAAMK,IAM3E5B,EAAU1S,WAAa,GAAIgU,IACpBtB,KAkBPgC,GAAQ7sC,KAAK0mB,IAAI,GAIjBomB,GAA2B,WAI3B,QAASA,GAAU9uC,GAKfxB,KAAK+N,MAJU,SAAUwiC,GACrB,MAAOlO,UAAU7+B,KAAK0mB,IAAIqmB,GAAOF,GAAQ,KAGvB7uC,EAAS,GAC/BxB,KAAKwwC,SAAWxwC,KAAK+N,MAAQ,EAE7B/N,KAAKywC,MAASjvC,EAAS,EAJT,SAAUqgC,GAAQ,MAAOQ,UAASz/B,MAAMi/B,EAAO,GAAGr7B,KAAK,KAAM,IAGxDxG,KAAK+N,OAY5B,MANAuiC,GAAUrxC,UAAUyxC,aAAe,WAE/B,GAAInmC,KAAWvK,KAAKywC,MAAS,GAAOzwC,KAAKwwC,SAEzC,OADAxwC,MAAKwwC,WACEjmC,GAEJ+lC,KAiBP3T,GAAgB,SAAUgU,EAAW7L,EAAK8L,EAAOC,GACjDF,EAAUrP,KAAKwD,EACf,IAAIgM,GAAoB,QAApBA,GAA8BC,EAAK1b,GACnC,GACIuH,GACAn3B,EAFAjE,EAAS6zB,EAAO0b,CAGpB,IAAc,GAAVvvC,EACA,MAAO,KAEN,IAAc,GAAVA,EAGL,MAFAo7B,GAAY+T,EAAUI,GACtBtrC,EAAMmrC,EAAQA,EAAMhU,GAAaA,EAC1B,GAAIsR,IAASzoC,EAAKm3B,EAAU0N,KAAM4D,GAASwB,MAAO,KAAM,KAG/D,IAAIsB,GAAS3O,SAAU7gC,EAAS,EAAI,IAAMuvC,EACtC5V,EAAO2V,EAAkBC,EAAKC,GAC9B5V,EAAQ0V,EAAkBE,EAAS,EAAG3b,EAG1C,OAFAuH,GAAY+T,EAAUK,GACtBvrC,EAAMmrC,EAAQA,EAAMhU,GAAaA,EAC1B,GAAIsR,IAASzoC,EAAKm3B,EAAU0N,KAAM4D,GAASwB,MAAOvU,EAAMC,IAyCnE6V,EAAS,GAAIX,IAAUK,EAAUnvC,QACjC0vC,EAvCmB,SAAUD,GAuB7B,IAAK,GAtBD3G,GAAO,KACP4G,EAAO,KACP5mC,EAAQqmC,EAAUnvC,OAClB2vC,EAAe,SAAUC,EAAWjD,GACpC,GAAI4C,GAAMzmC,EAAQ8mC,EACd/b,EAAO/qB,CACXA,IAAS8mC,CACT,IAAIC,GAAYP,EAAkBC,EAAM,EAAG1b,GACvCuH,EAAY+T,EAAUI,GACtBtrC,EAAMmrC,EAAQA,EAAMhU,GAAaA,CACrC0U,GAAc,GAAIpD,IAASzoC,EAAKm3B,EAAU0N,KAAM6D,EAAO,KAAMkD,KAE7DC,EAAgB,SAAUC,GACtBjH,GACAA,EAAKnP,KAAOoW,EACZjH,EAAOiH,IAGPL,EAAOK,EACPjH,EAAOiH,IAGNxzC,EAAI,EAAGA,EAAIkzC,EAAOljC,QAAShQ,EAAG,CACnC,GAAIyzC,GAAQP,EAAOP,eAEfU,EAAY5tC,KAAKu+B,IAAI,EAAGkP,EAAOljC,OAAShQ,EAAI,GAC5CyzC,GACAL,EAAaC,EAAWlD,GAASwB,QAIjCyB,EAAaC,EAAWlD,GAASwB,OACjCyB,EAAaC,EAAWlD,GAASE,MAGzC,MAAO8C,IAGiBD,EAC5B,OAAO,IAAI5C,IAAUwC,GAAa/L,EAAKoM,IAmBvCO,MAOAzU,GAA0B,WAC1B,QAASA,GAAS0U,EAAUC,GACxB3xC,KAAK0xC,SAAWA,EAChB1xC,KAAK2xC,UAAYA,EA8IrB,MA5IAnzC,QAAOC,eAAeu+B,EAAU,WAM5Bp+B,IAAK,WAKD,MAJA6oB,GAAKmF,OAAO6kB,IAAkB3U,GAAgB,uCAC9CqB,EACIA,GACI,GAAInB,IAAWC,YAAawU,KAAoBxU,YAAaH,MAGzEn+B,YAAY,EACZD,cAAc,IAOlBs+B,EAAS/9B,UAAUL,IAAM,SAAUgzC,GAC/B,GAAIC,GAAYpqB,EAAK8J,QAAQvxB,KAAK0xC,SAAUE,EAC5C,KAAKC,EACD,KAAM,IAAIvuC,OAAM,wBAA0BsuC,EAC9C,OAAIC,KAAcJ,GAGP,KAGAI,GAOf7U,EAAS/9B,UAAU6yC,SAAW,SAAUC,GACpC,MAAOtqB,GAAKhB,SAASzmB,KAAK2xC,UAAWI,EAAgBltC,aAOzDm4B,EAAS/9B,UAAU+yC,SAAW,SAAUD,EAAiBE,GACrDxqB,EAAKmF,OAAOmlB,IAAoB3G,GAAW,sEAK3C,KAJA,GAAIuF,MACAuB,GAAkB,EAClBC,EAAOF,EAAiBjC,YAAYvT,GAAU8N,MAC9Cn1B,EAAO+8B,EAAKpE,UACT34B,GACH88B,EACIA,GAAmBH,EAAgB/G,YAAY51B,EAAKk1B,MACxDqG,EAAUhwC,KAAKyU,GACfA,EAAO+8B,EAAKpE,SAEhB,IAAIqE,EAEAA,GADAF,EACWvV,GAAcgU,EAAWoB,EAAgBhV,cAGzC0U,EAEf,IAAIY,GAAYN,EAAgBltC,WAC5BytC,EAAc7qB,EAAKkK,MAAM3xB,KAAK2xC,UAClCW,GAAYD,GAAaN,CACzB,IAAIQ,GAAa9qB,EAAKkK,MAAM3xB,KAAK0xC,SAEjC,OADAa,GAAWF,GAAaD,EACjB,GAAIpV,GAASuV,EAAYD,IAQpCtV,EAAS/9B,UAAUuzC,aAAe,SAAU5V,EAAWqV,GACnD,GAAIvvB,GAAQ1iB,IAkCZ,OAAO,IAAIg9B,GAjCMvV,EAAKtD,IAAInkB,KAAK0xC,SAAU,SAAUe,EAAiBJ,GAChE,GAAI/nC,GAAQmd,EAAK8J,QAAQ7O,EAAMivB,UAAWU,EAE1C,IADA5qB,EAAKmF,OAAOtiB,EAAO,oCAAsC+nC,GACrDI,IAAoBhB,GAAgB,CAEpC,GAAInnC,EAAM0gC,YAAYpO,EAAU0N,MAAO,CAKnC,IAHA,GAAIqG,MACAwB,EAAOF,EAAiBjC,YAAYvT,GAAU8N,MAC9Cn1B,EAAO+8B,EAAKpE,UACT34B,GACCA,EAAK/W,MAAQu+B,EAAUv+B,MACvBsyC,EAAUhwC,KAAKyU,GAEnBA,EAAO+8B,EAAKpE,SAGhB,OADA4C,GAAUhwC,KAAKi8B,GACRD,GAAcgU,EAAWrmC,EAAMyyB,cAItC,MAAO0U,IAIX,GAAIiB,GAAeT,EAAiBrzC,IAAIg+B,EAAUv+B,MAC9Cs0C,EAAcF,CAIlB,OAHIC,KACAC,EAAcA,EAAY9T,OAAO,GAAIpC,IAAUG,EAAUv+B,KAAMq0C,KAE5DC,EAAY9D,OAAOjS,EAAWA,EAAU0N,QAGvBtqC,KAAK2xC,YAQzC3U,EAAS/9B,UAAU2zC,kBAAoB,SAAUhW,EAAWqV,GAiBxD,MAAO,IAAIjV,GAhBMvV,EAAKtD,IAAInkB,KAAK0xC,SAAU,SAAUe,GAC/C,GAAIA,IAAoBhB,GAEpB,MAAOgB,EAGP,IAAIC,GAAeT,EAAiBrzC,IAAIg+B,EAAUv+B,KAClD,OAAIq0C,GACOD,EAAgB5T,OAAO,GAAIpC,IAAUG,EAAUv+B,KAAMq0C,IAIrDD,IAIazyC,KAAK2xC,YAElC3U,KAkDPtB,GAA8B,WAQ9B,QAASA,GAAamX,EAAWpH,EAAeqH,GAC5C9yC,KAAK6yC,UAAYA,EACjB7yC,KAAKyrC,cAAgBA,EACrBzrC,KAAK8yC,UAAYA,EACjB9yC,KAAK0rC,UAAY,KAMb1rC,KAAKyrC,eACLH,GAAqBtrC,KAAKyrC,eAE1BzrC,KAAK6yC,UAAUhhB,WACfpK,EAAKmF,QAAQ5sB,KAAKyrC,eAAiBzrC,KAAKyrC,cAAc5Z,UAAW,wCAuXzE,MApXArzB,QAAOC,eAAei9B,EAAc,cAChC98B,IAAK,WACD,MAAQ+8B,KACHA,EAAa,GAAID,GAAa,GAAI2S,IAAU/S,GAAkB,KAAM0B,GAASE,WAEtFv+B,YAAY,EACZD,cAAc,IAGlBg9B,EAAaz8B,UAAUi9B,WAAa,WAChC,OAAO,GAGXR,EAAaz8B,UAAUu9B,YAAc,WACjC,MAAOx8B,MAAKyrC,eAAiB9P,GAGjCD,EAAaz8B,UAAUm9B,eAAiB,SAAUuP,GAC9C,MAAI3rC,MAAK6yC,UAAUhhB,UAER7xB,KAGA,GAAI07B,GAAa17B,KAAK6yC,UAAWlH,EAAiB3rC,KAAK8yC,YAItEpX,EAAaz8B,UAAU2sC,kBAAoB,SAAUC,GAEjD,GAAkB,cAAdA,EACA,MAAO7rC,MAAKw8B,aAGZ,IAAI4H,GAAQpkC,KAAK6yC,UAAUj0C,IAAIitC,EAC/B,OAAiB,QAAVzH,EAAiBzI,EAAayI,GAI7C1I,EAAaz8B,UAAU6sC,SAAW,SAAUjJ,GACxC,GAAIsJ,GAAQtJ,EAAKgB,UACjB,OAAc,QAAVsI,EACOnsC,KACJA,KAAK4rC,kBAAkBO,GAAOL,SAASjJ,EAAKkB,aAGvDrI,EAAaz8B,UAAU8sC,SAAW,SAAUF,GACxC,MAAyC,QAAlC7rC,KAAK6yC,UAAUj0C,IAAIitC,IAG9BnQ,EAAaz8B,UAAUk9B,qBAAuB,SAAU0P,EAAWI,GAE/D,GADAxkB,EAAKmF,OAAOqf,EAAc,8CACR,cAAdJ,EACA,MAAO7rC,MAAKo8B,eAAe6P,EAG3B,IAAIrP,GAAY,GAAIH,IAAUoP,EAAWI,GACrC0G,MAAc,GAAQI,MAAc,GAAQC,MAAc,EAU9D,OATI/G,GAAapa,WACb8gB,EAAc3yC,KAAK6yC,UAAUhU,OAAOgN,GACpCkH,EAAc/yC,KAAK8yC,UAAUF,kBAAkBhW,EAAW58B,KAAK6yC,aAG/DF,EAAc3yC,KAAK6yC,UAAUhE,OAAOhD,EAAWI,GAC/C8G,EAAc/yC,KAAK8yC,UAAUN,aAAa5V,EAAW58B,KAAK6yC,YAE9DG,EAAcL,EAAY9gB,UAAY8J,EAAa37B,KAAKyrC,cACjD,GAAI/P,GAAaiX,EAAaK,EAAaD,IAI1DrX,EAAaz8B,UAAUitC,YAAc,SAAUrJ,EAAMoJ,GACjD,GAAIE,GAAQtJ,EAAKgB,UACjB,OAAc,QAAVsI,EACOF,GAGPxkB,EAAKmF,OAA2B,cAApBiW,EAAKgB,YAAmD,IAArBhB,EAAKiB,YAAmB,8CAEhE9jC,KAAKm8B,qBAAqBgQ,EADTnsC,KAAK4rC,kBAAkBO,GAAOD,YAAYrJ,EAAKkB,WAAYkI,MAK3FvQ,EAAaz8B,UAAU4yB,QAAU,WAC7B,MAAO7xB,MAAK6yC,UAAUhhB,WAG1B6J,EAAaz8B,UAAUmtC,YAAc,WACjC,MAAOpsC,MAAK6yC,UAAU9kC,SAG1B2tB,EAAaz8B,UAAUwD,IAAM,SAAU6pC,GACnC,GAAItsC,KAAK6xB,UACL,MAAO,KACX,IAAI/N,MACAmvB,EAAU,EAAGrE,EAAS,EAAGsE,GAAiB,CAW9C,IAVAlzC,KAAKqsC,aAAavP,GAAgB,SAAUr3B,EAAKw2B,GAC7CnY,EAAIre,GAAOw2B,EAAUx5B,IAAI6pC,GACzB2G,IACIC,GAAkBxX,EAAaqH,gBAAgBhuB,KAAKtP,GACpDmpC,EAASprC,KAAK0H,IAAI0jC,EAAQtO,OAAO76B,IAGjCytC,GAAiB,KAGpB5G,GAAgB4G,GAAkBtE,EAAS,EAAIqE,EAAS,CAEzD,GAAIE,KACJ,KAAK,GAAI1tC,KAAOqe,GACZqvB,EAAM1tC,GAAOqe,EAAIre,EACrB,OAAO0tC,GAMP,MAHI7G,KAAiBtsC,KAAKw8B,cAAc3K,YACpC/N,EAAI,aAAe9jB,KAAKw8B,cAAc/5B,OAEnCqhB,GAIf4X,EAAaz8B,UAAUwtC,KAAO,WAC1B,GAAuB,OAAnBzsC,KAAK0rC,UAAoB,CACzB,GAAI0H,GAAW,EACVpzC,MAAKw8B,cAAc3K,YACpBuhB,GACI,YACI/H,GAAiBrrC,KAAKw8B,cAAc/5B,OACpC,KACZzC,KAAKqsC,aAAavP,GAAgB,SAAUr3B,EAAKw2B,GAC7C,GAAIoX,GAAYpX,EAAUwQ,MACR,MAAd4G,IACAD,GAAY,IAAM3tC,EAAM,IAAM4tC,KAEtCrzC,KAAK0rC,UAAyB,KAAb0H,EAAkB,GAAK5T,EAAK4T,GAEjD,MAAOpzC,MAAK0rC,WAGhBhQ,EAAaz8B,UAAU+sC,wBAA0B,SAAUH,EAAW5P,EAAW3xB,GAC7E,GAAIgpC,GAAMtzC,KAAKuzC,cAAcjpC,EAC7B,IAAIgpC,EAAK,CACL,GAAIE,GAAcF,EAAIxD,kBAAkB,GAAIrT,IAAUoP,EAAW5P,GACjE,OAAOuX,GAAcA,EAAYn1C,KAAO,KAGxC,MAAO2B,MAAK6yC,UAAU/C,kBAAkBjE,IAOhDnQ,EAAaz8B,UAAUw0C,kBAAoB,SAAU1B,GACjD,GAAIuB,GAAMtzC,KAAKuzC,cAAcxB,EAC7B,IAAIuB,EAAK,CACL,GAAI3E,GAAS2E,EAAI3E,QACjB,OAAOA,IAAUA,EAAOtwC,KAGxB,MAAO2B,MAAK6yC,UAAUlE,UAO9BjT,EAAaz8B,UAAUy0C,cAAgB,SAAU3B,GAC7C,GAAIpD,GAAS3uC,KAAKyzC,kBAAkB1B,EACpC,OAAIpD,GACO,GAAIlS,IAAUkS,EAAQ3uC,KAAK6yC,UAAUj0C,IAAI+vC,IAGzC,MAQfjT,EAAaz8B,UAAU00C,iBAAmB,SAAU5B,GAChD,GAAIuB,GAAMtzC,KAAKuzC,cAAcxB,EAC7B,IAAIuB,EAAK,CACL,GAAI1E,GAAS0E,EAAI1E,QACjB,OAAOA,IAAUA,EAAOvwC,KAGxB,MAAO2B,MAAK6yC,UAAUjE,UAO9BlT,EAAaz8B,UAAU20C,aAAe,SAAU7B,GAC5C,GAAInD,GAAS5uC,KAAK2zC,iBAAiB5B,EACnC,OAAInD,GACO,GAAInS,IAAUmS,EAAQ5uC,KAAK6yC,UAAUj0C,IAAIgwC,IAGzC,MAMflT,EAAaz8B,UAAUotC,aAAe,SAAU/hC,EAAOkkC,GACnD,GAAI8E,GAAMtzC,KAAKuzC,cAAcjpC,EAC7B,OAAIgpC,GACOA,EAAI/E,iBAAiB,SAAUsF,GAClC,MAAOrF,GAAOqF,EAAYx1C,KAAMw1C,EAAYvJ,QAIzCtqC,KAAK6yC,UAAUtE,iBAAiBC,IAO/C9S,EAAaz8B,UAAU+wC,YAAc,SAAU+B,GAC3C,MAAO/xC,MAAKkwC,gBAAgB6B,EAAgBlH,UAAWkH,IAQ3DrW,EAAaz8B,UAAUixC,gBAAkB,SAAU4D,EAAW/B,GAC1D,GAAIuB,GAAMtzC,KAAKuzC,cAAcxB,EAC7B,IAAIuB,EACA,MAAOA,GAAIpD,gBAAgB4D,EAAW,SAAUruC,GAAO,MAAOA,IAK9D,KAFA,GAAI8N,GAAWvT,KAAK6yC,UAAU3C,gBAAgB4D,EAAUz1C,KAAMo+B,GAAU8N,MACpEn1B,EAAO7B,EAAS06B,OACL,MAAR74B,GAAgB28B,EAAgBtH,QAAQr1B,EAAM0+B,GAAa,GAC9DvgC,EAASw6B,UACT34B,EAAO7B,EAAS06B,MAEpB,OAAO16B,IAOfmoB,EAAaz8B,UAAUmxC,mBAAqB,SAAU2B,GAClD,MAAO/xC,MAAKmwC,uBAAuB4B,EAAgB9G,UAAW8G,IAOlErW,EAAaz8B,UAAUkxC,uBAAyB,SAAU4D,EAAShC,GAC/D,GAAIuB,GAAMtzC,KAAKuzC,cAAcxB,EAC7B,IAAIuB,EACA,MAAOA,GAAInD,uBAAuB4D,EAAS,SAAUtuC,GACjD,MAAOA,IAMX,KAFA,GAAI8N,GAAWvT,KAAK6yC,UAAU1C,uBAAuB4D,EAAQ11C,KAAMo+B,GAAU8N,MACzEn1B,EAAO7B,EAAS06B,OACL,MAAR74B,GAAgB28B,EAAgBtH,QAAQr1B,EAAM2+B,GAAW,GAC5DxgC,EAASw6B,UACT34B,EAAO7B,EAAS06B,MAEpB,OAAO16B,IAMfmoB,EAAaz8B,UAAU0tC,UAAY,SAAU3H,GACzC,MAAIhlC,MAAK6xB,UACDmT,EAAMnT,UACC,GAGC,EAGPmT,EAAM9I,cAAgB8I,EAAMnT,UAC1B,EAEFmT,IAAUgP,IACP,EAID,GAMftY,EAAaz8B,UAAUkuC,UAAY,SAAU4E,GACzC,MAAIA,KAAoB3G,IACpBprC,KAAK8yC,UAAUhB,SAASC,GACjB/xC,KAIA,GAAI07B,GAAa17B,KAAK6yC,UAAW7yC,KAAKyrC,cAD3BzrC,KAAK8yC,UAAUd,SAASD,EAAiB/xC,KAAK6yC,aAOxEnX,EAAaz8B,UAAUmuC,UAAY,SAAU9iC,GACzC,MAAOA,KAAU8gC,IAAaprC,KAAK8yC,UAAUhB,SAASxnC,IAK1DoxB,EAAaz8B,UAAU8lC,OAAS,SAAUC,GACtC,GAAIA,IAAUhlC,KACV,OAAO,CAEN,IAAIglC,EAAM9I,aACX,OAAO,CAGP,IAAI+X,GAAoBjP,CACxB,IAAKhlC,KAAKw8B,cAAcuI,OAAOkP,EAAkBzX,eAG5C,IAAIx8B,KAAK6yC,UAAU9kC,UAAYkmC,EAAkBpB,UAAU9kC,QAAS,CAKrE,IAJA,GAAImmC,GAAWl0C,KAAKgwC,YAAYlT,IAC5BqX,EAAYF,EAAkBjE,YAAYlT,IAC1CsX,EAAcF,EAASnG,UACvBsG,EAAeF,EAAUpG,UACtBqG,GAAeC,GAAc,CAChC,GAAID,EAAY/1C,OAASg2C,EAAah2C,OACjC+1C,EAAY9J,KAAKvF,OAAOsP,EAAa/J,MACtC,OAAO,CAEX8J,GAAcF,EAASnG,UACvBsG,EAAeF,EAAUpG,UAE7B,MAAuB,QAAhBqG,GAAyC,OAAjBC,EAG/B,OAAO,EAlBP,OAAO,GA8BnB3Y,EAAaz8B,UAAUs0C,cAAgB,SAAUxB,GAC7C,MAAIA,KAAoB3G,GACb,KAGAprC,KAAK8yC,UAAUl0C,IAAImzC,EAAgBltC,aAOlD62B,EAAaqH,gBAAkB,iBACxBrH,KAOP4Y,GAAyB,SAAUthB,GAEnC,QAASshB,KACL,MAAOthB,GAAO/0B,KAAK+B,KAAM,GAAIquC,IAAU/S,GAAkBI,GAAaC,WAAYqB,GAASE,UAAYl9B,KAuB3G,MAzBAwsB,GAAQgH,UAAU8gB,EAASthB,GAI3BshB,EAAQr1C,UAAU0tC,UAAY,SAAU3H,GACpC,MAAIA,KAAUhlC,KACH,EAGA,GAGfs0C,EAAQr1C,UAAU8lC,OAAS,SAAUC,GAEjC,MAAOA,KAAUhlC,MAErBs0C,EAAQr1C,UAAUu9B,YAAc,WAC5B,MAAOx8B,OAEXs0C,EAAQr1C,UAAU2sC,kBAAoB,WAClC,MAAOlQ,IAAaC,YAExB2Y,EAAQr1C,UAAU4yB,QAAU,WACxB,OAAO,GAEJyiB,GACT5Y,IAMEsY,GAAa,GAAIM,GACrB91C,QAAOqR,iBAAiB4sB,IACpBqO,KACIvrC,MAAO,GAAIk9B,IAAUqE,EAAUpF,GAAaC,aAEhD4Y,KACIh1C,MAAO,GAAIk9B,IAAUsE,EAAUiT,OAMvCjJ,GAASjN,aAAepC,GAAaC,WACrCC,GAASoC,0BAA4BtC,GAlyDrC,SAAoBj5B,GAChBs7B,EAAWt7B,GAkyDJuxC,IA3+CX,SAAsBvxC,GAClBy7B,EAAaz7B,GA2+CJuxC,GAiBb,IAAInY,KAAY,GAhgDhB,SAAyBp5B,GACrBw7B,EAAex7B,GAskDH84B,EAsBhB,IAwnBIiZ,IAi1BAC,GAz8CAC,GAA4B,SAAU1hB,GAEtC,QAAS0hB,KACL,MAAkB,QAAX1hB,GAAmBA,EAAOnzB,MAAMG,KAAMF,YAAcE,KAqD/D,MAvDAwsB,GAAQgH,UAAUkhB,EAAY1hB,GAO9B0hB,EAAWz1C,UAAUwrC,QAAU,SAAUpmC,EAAGwC,GACxC,GAAI2mC,GAAWnpC,EAAEimC,KAAKqC,UAAU9lC,EAAEyjC,KAClC,OAAiB,KAAbkD,EACOnS,EAAYh3B,EAAEhG,KAAMwI,EAAExI,MAGtBmvC,GAMfkH,EAAWz1C,UAAU+rC,YAAc,WAC/B,OAAO,GAKX0J,EAAWz1C,UAAUyrC,oBAAsB,SAAUC,EAASC,GAC1D,OAAQD,EAAQ5F,OAAO6F,IAK3B8J,EAAWz1C,UAAU4rC,QAAU,WAC3B,MAAOpO,IAAUqO,KAKrB4J,EAAWz1C,UAAUgsC,QAAU,WAC3B,MAAOxO,IAAU8X,KAOrBG,EAAWz1C,UAAUisC,SAAW,SAAUC,EAAY9sC,GAClD,GAAIs2C,GAAYpZ,EAAe4P,EAC/B,OAAO,IAAI1O,IAAUp+B,EAAMs2C,IAK/BD,EAAWz1C,UAAU4F,SAAW,WAC5B,MAAO,UAEJ6vC,GACTlK,IACEoK,GAAc,GAAIF,IAsBlBG,GAA2B,SAAU7hB,GAErC,QAAS6hB,GAAUC,GACf,GAAIpyB,GAAQsQ,EAAO/0B,KAAK+B,OAASA,IAGjC,OAFA0iB,GAAMoyB,WAAaA,EACnBrtB,EAAKmF,QAAQkoB,EAAWjjB,WAAuC,cAA1BijB,EAAWjR,WAA4B,2DACrEnhB,EAmDX,MAxDA8J,GAAQgH,UAAUqhB,EAAW7hB,GAY7B6hB,EAAU51C,UAAU81C,aAAe,SAAUC,GACzC,MAAOA,GAAKlJ,SAAS9rC,KAAK80C,aAK9BD,EAAU51C,UAAU+rC,YAAc,SAAUV,GACxC,OAAQA,EAAKwB,SAAS9rC,KAAK80C,YAAYjjB,WAK3CgjB,EAAU51C,UAAUwrC,QAAU,SAAUpmC,EAAGwC,GACvC,GAAIouC,GAASj1C,KAAK+0C,aAAa1wC,EAAEimC,MAC7B4K,EAASl1C,KAAK+0C,aAAaluC,EAAEyjC,MAC7BkD,EAAWyH,EAAOtI,UAAUuI,EAChC,OAAiB,KAAb1H,EACOnS,EAAYh3B,EAAEhG,KAAMwI,EAAExI,MAGtBmvC,GAMfqH,EAAU51C,UAAUisC,SAAW,SAAUC,EAAY9sC,GACjD,GAAIs2C,GAAYpZ,EAAe4P,GAC3Bb,EAAO5O,GAAaC,WAAWuQ,YAAYlsC,KAAK80C,WAAYH,EAChE,OAAO,IAAIlY,IAAUp+B,EAAMisC,IAK/BuK,EAAU51C,UAAUgsC,QAAU,WAC1B,GAAIX,GAAO5O,GAAaC,WAAWuQ,YAAYlsC,KAAK80C,WAAYd,GAChE,OAAO,IAAIvX,IAAUsE,EAAUuJ,IAKnCuK,EAAU51C,UAAU4F,SAAW,WAC3B,MAAO7E,MAAK80C,WAAWjyC,QAAQ2D,KAAK,MAEjCquC,GACTrK,IAqBE2K,GAA8B,WAM9B,QAASA,GAAaC,EAAOC,EAAMC,GAC/Bt1C,KAAKo1C,MAAQA,EACbp1C,KAAKq1C,KAAOA,EACZr1C,KAAKs1C,OAASA,EAsIlB,MA9HAH,GAAal2C,UAAUwD,IAAM,WAEzB,MADAglB,GAAKsN,iBAAiB,mBAAoB,EAAG,EAAGj1B,UAAU0B,QACnDxB,KAAKo1C,MAAM3yC,OAOtB0yC,EAAal2C,UAAUs2C,UAAY,WAE/B,MADA9tB,GAAKsN,iBAAiB,yBAA0B,EAAG,EAAGj1B,UAAU0B,QACzDxB,KAAKo1C,MAAM3yC,KAAI,IAI1B0yC,EAAal2C,UAAU8qC,OAAS,WAG5B,MADAtiB,GAAKsN,iBAAiB,sBAAuB,EAAG,EAAGj1B,UAAU0B,QACtDxB,KAAKu1C,aAOhBJ,EAAal2C,UAAUu2C,OAAS,WAE5B,MADA/tB,GAAKsN,iBAAiB,sBAAuB,EAAG,EAAGj1B,UAAU0B,SACrDxB,KAAKo1C,MAAMvjB,WAQvBsjB,EAAal2C,UAAUmlC,MAAQ,SAAUqR,GACrChuB,EAAKsN,iBAAiB,qBAAsB,EAAG,EAAGj1B,UAAU0B,QAE5Di0C,EAAkBhvC,OAAOgvC,GACzB7M,GAAmB,qBAAsB,EAAG6M,GAAiB,EAC7D,IAAIC,GAAY,GAAInS,IAAKkS,GACrBE,EAAW31C,KAAKq1C,KAAKjR,MAAMsR,EAC/B,OAAO,IAAIP,GAAan1C,KAAKo1C,MAAMtJ,SAAS4J,GAAYC,EAAU7Y,KAQtEqY,EAAal2C,UAAU8sC,SAAW,SAAU0J,GAIxC,MAHAhuB,GAAKsN,iBAAiB,wBAAyB,EAAG,EAAGj1B,UAAU0B,QAC/DonC,GAAmB,wBAAyB,EAAG6M,GAAiB,IAExDz1C,KAAKo1C,MAAMtJ,SADH,GAAIvI,IAAKkS,IACc5jB,WAO3CsjB,EAAal2C,UAAUu9B,YAAc,WAGjC,MAFA/U,GAAKsN,iBAAiB,2BAA4B,EAAG,EAAGj1B,UAAU0B,QAE3DxB,KAAKo1C,MAAM5Y,cAAc/5B,OAUpC0yC,EAAal2C,UAAU0N,QAAU,SAAU6hC,GACvC,GAAI9rB,GAAQ1iB,IAGZ,OAFAynB,GAAKsN,iBAAiB,uBAAwB,EAAG,EAAGj1B,UAAU0B,QAC9DimB,EAAK6E,iBAAiB,uBAAwB,EAAGkiB,GAAQ,IACrDxuC,KAAKo1C,MAAMlZ,gBAEIl8B,KAAKo1C,MAEF/I,aAAarsC,KAAKs1C,OAAQ,SAAU7vC,EAAK6kC,GAC3D,MAAOkE,GAAO,GAAI2G,GAAa7K,EAAM5nB,EAAM2yB,KAAKjR,MAAM3+B,GAAMq3B,QAOpEqY,EAAal2C,UAAU22C,YAAc,WAEjC,MADAnuB,GAAKsN,iBAAiB,2BAA4B,EAAG,EAAGj1B,UAAU0B,SAC9DxB,KAAKo1C,MAAMlZ,eAGHl8B,KAAKo1C,MAAMvjB,WAE3BrzB,OAAOC,eAAe02C,EAAal2C,UAAW,OAC1CL,IAAK,WACD,MAAOoB,MAAKq1C,KAAKQ,UAErBl3C,YAAY,EACZD,cAAc,IAMlBy2C,EAAal2C,UAAUmtC,YAAc,WAEjC,MADA3kB,GAAKsN,iBAAiB,2BAA4B,EAAG,EAAGj1B,UAAU0B,QAC3DxB,KAAKo1C,MAAMhJ,eAKtB+I,EAAal2C,UAAU62C,OAAS,WAE5B,MADAruB,GAAKsN,iBAAiB,mBAAoB,EAAG,EAAGj1B,UAAU0B,QACnDxB,KAAKq1C,MAEhB72C,OAAOC,eAAe02C,EAAal2C,UAAW,OAC1CL,IAAK,WACD,MAAOoB,MAAK81C,UAEhBn3C,YAAY,EACZD,cAAc,IAEXy2C,KAsBPY,GAA2B,WAO3B,QAASA,GAAUrN,EAAWsN,EAAmB7wB,EAAU8wB,GACvDj2C,KAAK0oC,UAAYA,EACjB1oC,KAAKg2C,kBAAoBA,EACzBh2C,KAAKmlB,SAAWA,EAChBnlB,KAAKi2C,SAAWA,EAoCpB,MA/BAF,GAAU92C,UAAUi3C,QAAU,WAC1B,GAAIv4B,GAAM3d,KAAKmlB,SAAS2wB,QACxB,OAAuB,UAAnB91C,KAAK0oC,UACE/qB,EAAIklB,KAGJllB,EAAIw4B,YAAYtT,MAM/BkT,EAAU92C,UAAUm3C,aAAe,WAC/B,MAAOp2C,MAAK0oC,WAKhBqN,EAAU92C,UAAUo3C,eAAiB,WACjC,MAAOr2C,MAAKg2C,kBAAkBK,eAAer2C,OAKjD+1C,EAAU92C,UAAU4F,SAAW,WAC3B,MAAQ7E,MAAKk2C,UAAUrxC,WACnB,IACA7E,KAAK0oC,UACL,IACAjhB,EAAKpV,UAAUrS,KAAKmlB,SAASowB,cAE9BQ,KAEPO,GAA6B,WAM7B,QAASA,GAAYN,EAAmBtvB,EAAOmc,GAC3C7iC,KAAKg2C,kBAAoBA,EACzBh2C,KAAK0mB,MAAQA,EACb1mB,KAAK6iC,KAAOA,EA0BhB,MArBAyT,GAAYr3C,UAAUi3C,QAAU,WAC5B,MAAOl2C,MAAK6iC,MAKhByT,EAAYr3C,UAAUm3C,aAAe,WACjC,MAAO,UAKXE,EAAYr3C,UAAUo3C,eAAiB,WACnC,MAAOr2C,MAAKg2C,kBAAkBK,eAAer2C,OAKjDs2C,EAAYr3C,UAAU4F,SAAW,WAC7B,MAAO7E,MAAK6iC,KAAKh+B,WAAa,WAE3ByxC,KAqBPC,GAAwC,WAMxC,QAASA,GAAuBC,EAAWC,EAAiBC,GACxD12C,KAAKw2C,UAAYA,EACjBx2C,KAAKy2C,gBAAkBA,EACvBz2C,KAAK02C,SAAWA,EAmEpB,MA9DAH,GAAuBt3C,UAAU03C,WAAa,SAAUjO,GACpD,MAAqB,UAAdA,GAKX6N,EAAuBt3C,UAAU23C,YAAc,SAAUC,EAAQjU,GAC7D,GAAIt4B,GAAQs4B,EAAMkU,iBAAiBC,UACnC,OAAO,IAAIhB,IAAU,QAAS/1C,KAAM,GAAIm1C,IAAa0B,EAAOG,aAAcpU,EAAMkT,SAAUxrC,KAK9FisC,EAAuBt3C,UAAUo3C,eAAiB,SAAUY,GACxD,GAAIC,GAAMl3C,KAAK02C,QACf,IAAiC,WAA7BO,EAAUb,eAA6B,CACvC3uB,EAAKmF,OAAO5sB,KAAKy2C,gBAAiB,+DAClC,IAAIU,GAAan3C,KAAKy2C,eACtB,OAAO,YAEHU,EAAWl5C,KAAKi5C,EAAKD,EAAUvwB,QAInC,GAAI0wB,GAAOp3C,KAAKw2C,SAChB,OAAO,YACHY,EAAKn5C,KAAKi5C,EAAKD,EAAU9xB,YAOrCoxB,EAAuBt3C,UAAUo4C,kBAAoB,SAAU3wB,EAAOmc,GAClE,MAAI7iC,MAAKy2C,gBACE,GAAIH,IAAYt2C,KAAM0mB,EAAOmc,GAG7B,MAMf0T,EAAuBt3C,UAAUq4C,QAAU,SAAUtS,GACjD,MAAMA,aAAiBuR,MAGbvR,EAAMwR,YAAcx2C,KAAKw2C,WAKvBxR,EAAMwR,YAAcx2C,KAAKw2C,WAAaxR,EAAM0R,WAAa12C,KAAK02C,WAM9EH,EAAuBt3C,UAAUs4C,eAAiB,WAC9C,MAA0B,QAAnBv3C,KAAKw2C,WAETD,KAWPiB,GAAwC,WAMxC,QAASA,GAAuBC,EAAYhB,EAAiBC,GACzD12C,KAAKy3C,WAAaA,EAClBz3C,KAAKy2C,gBAAkBA,EACvBz2C,KAAK02C,SAAWA,EAyFpB,MApFAc,GAAuBv4C,UAAU03C,WAAa,SAAUjO,GACpD,GAAIgP,GAA6B,mBAAdhP,EAAiC,cAAgBA,CAGpE,OAFAgP,GACqB,qBAAjBA,EAAsC,gBAAkBA,EACrDjwB,EAAKhB,SAASzmB,KAAKy3C,WAAYC,IAK1CF,EAAuBv4C,UAAUo4C,kBAAoB,SAAU3wB,EAAOmc,GAClE,MAAI7iC,MAAKy2C,gBACE,GAAIH,IAAYt2C,KAAM0mB,EAAOmc,GAG7B,MAMf2U,EAAuBv4C,UAAU23C,YAAc,SAAUC,EAAQjU,GAC7Dnb,EAAKmF,OAA2B,MAApBiqB,EAAOhL,UAAmB,wCACtC,IAAIluB,GAAMilB,EAAMkT,SAAS1R,MAA8ByS,EAAOhL,WAC1DvhC,EAAQs4B,EAAMkU,iBAAiBC,UACnC,OAAO,IAAIhB,IAAUc,EAAO9vC,KAAM/G,KAAM,GAAIm1C,IAAa0B,EAAOG,aAAcr5B,EAAKrT,GAAQusC,EAAOZ,WAKtGuB,EAAuBv4C,UAAUo3C,eAAiB,SAAUY,GACxD,GAAIC,GAAMl3C,KAAK02C,QACf,IAAiC,WAA7BO,EAAUb,eAA6B,CACvC3uB,EAAKmF,OAAO5sB,KAAKy2C,gBAAiB,+DAClC,IAAIkB,GAAa33C,KAAKy2C,eACtB,OAAO,YAEHkB,EAAW15C,KAAKi5C,EAAKD,EAAUvwB,QAInC,GAAIkxB,GAAO53C,KAAKy3C,WAAWR,EAAUvO,UACrC,OAAO,YACHkP,EAAK35C,KAAKi5C,EAAKD,EAAU9xB,SAAU8xB,EAAUhB,YAOzDuB,EAAuBv4C,UAAUq4C,QAAU,SAAUtS,GACjD,GAAIA,YAAiBwS,GAAwB,CACzC,IAAKx3C,KAAKy3C,aAAezS,EAAMyS,WAC3B,OAAO,CAEN,IAAIz3C,KAAK02C,WAAa1R,EAAM0R,SAAU,CACvC,GAAImB,GAAapwB,EAAKqK,SAASkT,EAAMyS,WAErC,IAAII,IADYpwB,EAAKqK,SAAS9xB,KAAKy3C,YACL,CAI1B,GAAmB,IAAfI,EAAkB,CAClB,GAAIC,GAAkCrwB,EAAK2K,UAAU4S,EAAMyS,YACvDM,EAAiCtwB,EAAK2K,UAAUpyB,KAAKy3C,WACzD,SAAQM,IAAYD,GACd9S,EAAMyS,WAAWK,IACd93C,KAAKy3C,WAAWM,IACjB/S,EAAMyS,WAAWK,KAAc93C,KAAKy3C,WAAWM,IAIvD,MAAOtwB,GAAK6K,MAAMtyB,KAAKy3C,WAAY,SAAU/O,EAAW7nC,GAAM,MAAOmkC,GAAMyS,WAAW/O,KAAe7nC,MAKrH,OAAO,GAKX22C,EAAuBv4C,UAAUs4C,eAAiB,WAC9C,MAA2B,QAApBv3C,KAAKy3C,YAETD,KAyBP/Z,GAAuB,WACvB,QAASA,GAAMua,EAAMnV,EAAMoV,EAAcC,GACrCl4C,KAAKg4C,KAAOA,EACZh4C,KAAK6iC,KAAOA,EACZ7iC,KAAKi4C,aAAeA,EACpBj4C,KAAKk4C,eAAiBA,EA6c1B,MA3cA15C,QAAOC,eAAeg/B,EAAO,0BACzB7+B,IAAK,WAED,MADA6oB,GAAKmF,OAAO4nB,GAAwB,oCAC7BA,IAEXvgC,IAAK,SAAUxR,GACX+xC,GAAyB/xC,GAE7B9D,YAAY,EACZD,cAAc,IAOlB++B,EAAM0a,wBAA0B,SAAU1lB,GACtC,GAAI2lB,GAAY,KACZC,EAAU,IAOd,IANI5lB,EAAO6lB,aACPF,EAAY3lB,EAAO8lB,sBAEnB9lB,EAAO+lB,WACPH,EAAU5lB,EAAOgmB,oBAEjBhmB,EAAOskB,aAAe3L,GAAW,CACjC,GAAIsN,GAAmB,mGAEnBC,EAAoB,uGAExB,IAAIlmB,EAAO6lB,WAAY,CAEnB,GADgB7lB,EAAOmmB,qBACN9X,EACb,KAAM,IAAIx9B,OAAMo1C,EAEf,IAAyB,gBAAdN,GACZ,KAAM,IAAI90C,OAAMq1C,GAGxB,GAAIlmB,EAAO+lB,SAAU,CAEjB,GADc/lB,EAAOomB,mBACN9X,EACX,KAAM,IAAIz9B,OAAMo1C,EAEf,IAAuB,gBAAZL,GACZ,KAAM,IAAI/0C,OAAMq1C,QAIvB,IAAIlmB,EAAOskB,aAAeja,IAC3B,GAAkB,MAAbsb,IAAsBvQ,GAAgBuQ,IAC3B,MAAXC,IAAoBxQ,GAAgBwQ,GACrC,KAAM,IAAI/0C,OAAM,qKAOpB,IAFAmkB,EAAKmF,OAAO6F,EAAOskB,oBAAsBlC,KACrCpiB,EAAOskB,aAAenC,GAAa,uBACrB,MAAbwD,GAA0C,gBAAdA,IACjB,MAAXC,GAAsC,gBAAZA,GAC3B,KAAM,IAAI/0C,OAAM,0FAU5Bm6B,EAAMqb,eAAiB,SAAUrmB,GAC7B,GAAIA,EAAO6lB,YACP7lB,EAAO+lB,UACP/lB,EAAOsmB,aACNtmB,EAAOumB,mBACR,KAAM,IAAI11C,OAAM,uGAQxBm6B,EAAMx+B,UAAUg6C,+BAAiC,SAAUhtB,GACvD,IAA4B,IAAxBjsB,KAAKk4C,eACL,KAAM,IAAI50C,OAAM2oB,EAAS,gDAMjCwR,EAAMx+B,UAAU63C,eAAiB,WAC7B,MAAO92C,MAAKi4C,cAKhBxa,EAAMx+B,UAAU62C,OAAS,WAKrB,MAJAruB,GAAKsN,iBAAiB,YAAa,EAAG,EAAGj1B,UAAU0B,QAI5C,GAAIi8B,GAAM+W,uBAAuBx0C,KAAKg4C,KAAMh4C,KAAK6iC,OAS5DpF,EAAMx+B,UAAUimB,GAAK,SAAUwjB,EAAWrmC,EAAU62C,EAAyB36B,GACzEkJ,EAAKsN,iBAAiB,WAAY,EAAG,EAAGj1B,UAAU0B,QAClDinC,GAAkB,WAAY,EAAGC,GAAW,GAC5CjhB,EAAK6E,iBAAiB,WAAY,EAAGjqB,GAAU,EAC/C,IAAIlB,GAAMs8B,EAAM0b,yBAAyB,WAAYD,EAAyB36B,EAC9E,IAAkB,UAAdmqB,EACA1oC,KAAKo5C,aAAa/2C,EAAUlB,EAAIioC,OAAQjoC,EAAIod,aAE3C,CACD,GAAI86B,KACJA,GAAU3Q,GAAarmC,EACvBrC,KAAKs5C,aAAaD,EAAWl4C,EAAIioC,OAAQjoC,EAAIod,SAEjD,MAAOlc,IAQXo7B,EAAMx+B,UAAUm6C,aAAe,SAAU/2C,EAAUk3C,EAAgBh7B,GAE/Dve,KAAKg4C,KAAKwB,yBAAyBx5C,KADnB,GAAIu2C,IAAuBl0C,EAAUk3C,GAAkB,KAAMh7B,GAAW,QAS5Fkf,EAAMx+B,UAAUq6C,aAAe,SAAUD,EAAWE,EAAgBh7B,GAEhEve,KAAKg4C,KAAKwB,yBAAyBx5C,KADnB,GAAIw3C,IAAuB6B,EAAWE,EAAgBh7B,KAQ1Ekf,EAAMx+B,UAAUw6C,IAAM,SAAU/Q,EAAWrmC,EAAUkc,GACjDkJ,EAAKsN,iBAAiB,YAAa,EAAG,EAAGj1B,UAAU0B,QACnDinC,GAAkB,YAAa,EAAGC,GAAW,GAC7CjhB,EAAK6E,iBAAiB,YAAa,EAAGjqB,GAAU,GAChDolB,EAAK8E,sBAAsB,YAAa,EAAGhO,GAAS,EACpD,IAAIm7B,GAAY,KACZL,EAAY,IAChB,IAAkB,UAAd3Q,EAAuB,CAEvBgR,EAAY,GAAInD,IADIl0C,GAAY,KACsB,KAAMkc,GAAW,UAElEmqB,KACDrmC,IACAg3C,KACAA,EAAU3Q,GAAarmC,GAE3Bq3C,EAAY,GAAIlC,IAAuB6B,EAAW,KAAM96B,GAAW,MAEvEve,MAAKg4C,KAAK2B,4BAA4B35C,KAAM05C,IAUhDjc,EAAMx+B,UAAU26C,KAAO,SAAUlR,EAAWmR,EAAcC,EAAiBv7B,GACvE,GAAImE,GAAQ1iB,IACZynB,GAAKsN,iBAAiB,aAAc,EAAG,EAAGj1B,UAAU0B,QACpDinC,GAAkB,aAAc,EAAGC,GAAW,GAC9CjhB,EAAK6E,iBAAiB,aAAc,EAAGutB,GAAc,EACrD,IAAI14C,GAAMs8B,EAAM0b,yBAAyB,aAAcW,EAAiBv7B,GAKpEw7B,GAAY,EACZr5C,EAAW,GAAI+mB,GAAKkI,QAExBjvB,GAASQ,QAAQ2qB,MAAM,aACvB,IAAImuB,GAAe,QAAfA,GAAyB70B,GAGrB40B,IACAA,GAAY,EACZr3B,EAAM+2B,IAAI/Q,EAAWsR,GACjBH,GACAA,EAAan6C,KAAKyB,EAAIod,SAAS4G,GAEnCzkB,EAASM,QAAQmkB,IAUzB,OAPAnlB,MAAKklB,GAAGwjB,EAAWsR,EACP,SAAU/2C,GAClByf,EAAM+2B,IAAI/Q,EAAWsR,GACjB74C,EAAIioC,QACJjoC,EAAIioC,OAAO1pC,KAAKyB,EAAIod,SAAStb,GACjCvC,EAASO,OAAOgC,KAEbvC,EAASQ,SAOpBu8B,EAAMx+B,UAAUg7C,aAAe,SAAUC,GAErC,GADAzyB,EAAKsN,iBAAiB,qBAAsB,EAAG,EAAGj1B,UAAU0B,QACvC,gBAAV04C,IACP12C,KAAKgF,MAAM0xC,KAAWA,GACtBA,GAAS,EACT,KAAM,IAAI52C,OAAM,iEAEpB,IAAItD,KAAKi4C,aAAac,WAClB,KAAM,IAAIz1C,OAAM,sGAGpB,OAAO,IAAIm6B,GAAMz9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAM7iC,KAAKi4C,aAAagC,aAAaC,GAAQl6C,KAAKk4C,iBAOvFza,EAAMx+B,UAAUk7C,YAAc,SAAUD,GAEpC,GADAzyB,EAAKsN,iBAAiB,oBAAqB,EAAG,EAAGj1B,UAAU0B,QACtC,gBAAV04C,IACP12C,KAAKgF,MAAM0xC,KAAWA,GACtBA,GAAS,EACT,KAAM,IAAI52C,OAAM,gEAEpB,IAAItD,KAAKi4C,aAAac,WAClB,KAAM,IAAIz1C,OAAM,qGAGpB,OAAO,IAAIm6B,GAAMz9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAM7iC,KAAKi4C,aAAakC,YAAYD,GAAQl6C,KAAKk4C,iBAOtFza,EAAMx+B,UAAUm7C,aAAe,SAAUvX,GAErC,GADApb,EAAKsN,iBAAiB,qBAAsB,EAAG,EAAGj1B,UAAU0B,QAC/C,SAATqhC,EACA,KAAM,IAAIv/B,OAAM,0EAEf,IAAa,cAATu/B,EACL,KAAM,IAAIv/B,OAAM,oFAEf,IAAa,WAATu/B,EACL,KAAM,IAAIv/B,OAAM,8EAEpBslC,IAAmB,qBAAsB,EAAG/F,GAAM,GAClD7iC,KAAKi5C,+BAA+B,qBACpC,IAAIoB,GAAa,GAAI9W,IAAKV,EAC1B,IAAIwX,EAAWxoB,UACX,KAAM,IAAIvuB,OAAM,oFAEpB,IAAIgH,GAAQ,GAAIuqC,IAAUwF,GACtBC,EAAYt6C,KAAKi4C,aAAasC,QAAQjwC,EAE1C,OADAmzB,GAAM0a,wBAAwBmC,GACvB,GAAI7c,GAAMz9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAMyX,GAA8B,IAMzE7c,EAAMx+B,UAAUu7C,WAAa,WACzB/yB,EAAKsN,iBAAiB,mBAAoB,EAAG,EAAGj1B,UAAU0B,QAC1DxB,KAAKi5C,+BAA+B,mBACpC,IAAIqB,GAAYt6C,KAAKi4C,aAAasC,QAAQnP,GAE1C,OADA3N,GAAM0a,wBAAwBmC,GACvB,GAAI7c,GAAMz9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAMyX,GAA8B,IAMzE7c,EAAMx+B,UAAUw7C,gBAAkB,WAC9BhzB,EAAKsN,iBAAiB,wBAAyB,EAAG,EAAGj1B,UAAU0B,QAC/DxB,KAAKi5C,+BAA+B,wBACpC,IAAIqB,GAAYt6C,KAAKi4C,aAAasC,QAAQzd,GAE1C,OADAW,GAAM0a,wBAAwBmC,GACvB,GAAI7c,GAAMz9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAMyX,GAA8B,IAMzE7c,EAAMx+B,UAAUy7C,aAAe,WAC3BjzB,EAAKsN,iBAAiB,qBAAsB,EAAG,EAAGj1B,UAAU0B,QAC5DxB,KAAKi5C,+BAA+B,qBACpC,IAAIqB,GAAYt6C,KAAKi4C,aAAasC,QAAQ3F,GAE1C,OADAnX,GAAM0a,wBAAwBmC,GACvB,GAAI7c,GAAMz9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAMyX,GAA8B,IAOzE7c,EAAMx+B,UAAU07C,QAAU,SAAUp7C,EAAOlB,OACzB,KAAVkB,IAAoBA,EAAQ,MAChCkoB,EAAKsN,iBAAiB,gBAAiB,EAAG,EAAGj1B,UAAU0B,QACvDsmC,GAAwB,gBAAiB,EAAGvoC,EAAOS,KAAK6iC,MAAM,GAC9D8F,GAAY,gBAAiB,EAAGtqC,GAAM,EACtC,IAAIi8C,GAAYt6C,KAAKi4C,aAAa0C,QAAQp7C,EAAOlB,EAGjD,IAFAo/B,EAAMqb,eAAewB,GACrB7c,EAAM0a,wBAAwBmC,GAC1Bt6C,KAAKi4C,aAAaK,WAClB,KAAM,IAAIh1C,OAAM,yFAQpB,YAJcjD,KAAVd,IACAA,EAAQ,KACRlB,EAAO,MAEJ,GAAIo/B,GAAMz9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAMyX,EAAWt6C,KAAKk4C,iBAO3Dza,EAAMx+B,UAAU27C,MAAQ,SAAUr7C,EAAOlB,OACvB,KAAVkB,IAAoBA,EAAQ,MAChCkoB,EAAKsN,iBAAiB,cAAe,EAAG,EAAGj1B,UAAU0B,QACrDsmC,GAAwB,cAAe,EAAGvoC,EAAOS,KAAK6iC,MAAM,GAC5D8F,GAAY,cAAe,EAAGtqC,GAAM,EACpC,IAAIi8C,GAAYt6C,KAAKi4C,aAAa2C,MAAMr7C,EAAOlB,EAG/C,IAFAo/B,EAAMqb,eAAewB,GACrB7c,EAAM0a,wBAAwBmC,GAC1Bt6C,KAAKi4C,aAAaO,SAClB,KAAM,IAAIl1C,OAAM,mFAGpB,OAAO,IAAIm6B,GAAMz9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAMyX,EAAWt6C,KAAKk4C,iBAS3Dza,EAAMx+B,UAAU47C,QAAU,SAAUt7C,EAAOlB,GAIvC,GAHAopB,EAAKsN,iBAAiB,gBAAiB,EAAG,EAAGj1B,UAAU0B,QACvDsmC,GAAwB,gBAAiB,EAAGvoC,EAAOS,KAAK6iC,MAAM,GAC9D8F,GAAY,gBAAiB,EAAGtqC,GAAM,GAClC2B,KAAKi4C,aAAaK,WAClB,KAAM,IAAIh1C,OAAM,yFAGpB,IAAItD,KAAKi4C,aAAaO,SAClB,KAAM,IAAIl1C,OAAM,qFAGpB,OAAOtD,MAAK26C,QAAQp7C,EAAOlB,GAAMu8C,MAAMr7C,EAAOlB,IAKlDo/B,EAAMx+B,UAAU4F,SAAW,WAEvB,MADA4iB,GAAKsN,iBAAiB,iBAAkB,EAAG,EAAGj1B,UAAU0B,QACjDxB,KAAKg4C,KAAKnzC,WAAa7E,KAAK6iC,KAAKoB,sBAI5CxG,EAAMx+B,UAAU8qC,OAAS,WAGrB,MADAtiB,GAAKsN,iBAAiB,eAAgB,EAAG,EAAGj1B,UAAU0B,QAC/CxB,KAAK6E,YAMhB44B,EAAMx+B,UAAU67C,YAAc,WAC1B,MAAO96C,MAAKi4C,aAAa8C,kBAK7Btd,EAAMx+B,UAAU+7C,gBAAkB,WAC9B,GAAIl3B,GAAM9jB,KAAK86C,cACXn1C,EAAK07B,EAAkBvd,EAC3B,OAAc,OAAPne,EAAc,UAAYA,GAOrC83B,EAAMx+B,UAAUg8C,QAAU,SAAUjW,GAEhC,GADAvd,EAAKsN,iBAAiB,gBAAiB,EAAG,EAAGj1B,UAAU0B,UACjDwjC,YAAiBvH,IAAQ,CAE3B,KAAM,IAAIn6B,OADK,wFAGnB,GAAI43C,GAAWl7C,KAAKg4C,OAAShT,EAAMgT,KAC/BmD,EAAWn7C,KAAK6iC,KAAKkC,OAAOC,EAAMnC,MAClCuY,EAAsBp7C,KAAKg7C,oBAAsBhW,EAAMgW,iBAC3D,OAAOE,IAAYC,GAAYC,GAUnC3d,EAAM0b,yBAA2B,SAAUltB,EAAQ6tB,EAAiBv7B,GAChE,GAAIpd,IAAQioC,OAAQ,KAAM7qB,QAAS,KACnC,IAAIu7B,GAAmBv7B,EACnBpd,EAAIioC,OAAS0Q,EACbryB,EAAK6E,iBAAiBL,EAAQ,EAAG9qB,EAAIioC,QAAQ,GAC7CjoC,EAAIod,QAAUA,EACdkJ,EAAK8E,sBAAsBN,EAAQ,EAAG9qB,EAAIod,SAAS,OAElD,IAAIu7B,EAEL,GAA+B,gBAApBA,IAAoD,OAApBA,EAEvC34C,EAAIod,QAAUu7B,MAEb,IAA+B,kBAApBA,GAIZ,KAAM,IAAIx2C,OAAMmkB,EAAKuE,YAAYC,EAAQ,GAAG,GACxC,yDAJJ9qB,GAAIioC,OAAS0Q,EAOrB,MAAO34C,IAEX3C,OAAOC,eAAeg/B,EAAMx+B,UAAW,OACnCL,IAAK,WACD,MAAOoB,MAAK81C,UAEhBn3C,YAAY,EACZD,cAAc,IAEX++B,KAuBP4d,GAA4B,WAC5B,QAASA,KACLr7C,KAAKiU,OAkET,MA5DAonC,GAAWp8C,UAAUq8C,IAAM,SAAUr3B,EAAMxhB,GACvCzC,KAAKiU,IAAIgQ,GAAgB,OAARxhB,GAAeA,GAMpC44C,EAAWp8C,UAAUwnB,SAAW,SAAUhhB,GACtC,MAAOgiB,GAAKhB,SAASzmB,KAAKiU,IAAKxO,IAMnC41C,EAAWp8C,UAAUL,IAAM,SAAUqlB,GACjC,MAAOjkB,MAAKymB,SAASxC,GAAQjkB,KAAKiU,IAAIgQ,OAAQ5jB,IAKlDg7C,EAAWp8C,UAAU4/B,OAAS,SAAU5a,SAC7BjkB,MAAKiU,IAAIgQ,IAKpBo3B,EAAWp8C,UAAUs8C,MAAQ,WACzBv7C,KAAKiU,QAMTonC,EAAWp8C,UAAU4yB,QAAU,WAC3B,MAAOpK,GAAKoK,QAAQ7xB,KAAKiU,MAK7BonC,EAAWp8C,UAAU8O,MAAQ,WACzB,MAAO0Z,GAAKqK,SAAS9xB,KAAKiU,MAM9BonC,EAAWp8C,UAAUyiC,KAAO,SAAU/hC,GAClC8nB,EAAK9a,QAAQ3M,KAAKiU,IAAK,SAAUrH,EAAGoQ,GAAK,MAAOrd,GAAGiN,EAAGoQ,MAM1Dq+B,EAAWp8C,UAAU+M,KAAO,WACxB,GAAIA,KAIJ,OAHAyb,GAAK9a,QAAQ3M,KAAKiU,IAAK,SAAUrH,GAC7BZ,EAAKrL,KAAKiM,KAEPZ,GAEJqvC,KAuBPG,GAAoC,WACpC,QAASA,KAKLx7C,KAAKwrC,OAAS,KAKdxrC,KAAK6yC,UAAY,KAuIrB,MA/HA2I,GAAmBv8C,UAAU4L,KAAO,SAAUg4B,GAC1C,GAAmB,MAAf7iC,KAAKwrC,OACL,MAAOxrC,MAAKwrC,OAAOM,SAASjJ,EAE3B,IAAKA,EAAKhR,WAA+B,MAAlB7xB,KAAK6yC,UAY7B,MAAO,KAXP,IAAI4I,GAAW5Y,EAAKgB,UAEpB,IADAhB,EAAOA,EAAKkB,WACR/jC,KAAK6yC,UAAUpsB,SAASg1B,GAAW,CAEnC,MADgBz7C,MAAK6yC,UAAUj0C,IAAI68C,GAClB5wC,KAAKg4B,GAGtB,MAAO,OAcnB2Y,EAAmBv8C,UAAUy8C,SAAW,SAAU7Y,EAAMxX,GACpD,GAAIwX,EAAKhR,UACL7xB,KAAKwrC,OAASngB,EACdrrB,KAAK6yC,UAAY,SAEhB,IAAoB,OAAhB7yC,KAAKwrC,OACVxrC,KAAKwrC,OAASxrC,KAAKwrC,OAAOU,YAAYrJ,EAAMxX,OAE3C,CACqB,MAAlBrrB,KAAK6yC,YACL7yC,KAAK6yC,UAAY,GAAIwI,IAEzB,IAAII,GAAW5Y,EAAKgB,UACf7jC,MAAK6yC,UAAUpsB,SAASg1B,IACzBz7C,KAAK6yC,UAAUyI,IAAIG,EAAU,GAAID,GAErC,IAAIpX,GAAQpkC,KAAK6yC,UAAUj0C,IAAI68C,EAC/B5Y,GAAOA,EAAKkB,WACZK,EAAMsX,SAAS7Y,EAAMxX,KAS7BmwB,EAAmBv8C,UAAU08C,OAAS,SAAU9Y,GAC5C,GAAIA,EAAKhR,UAGL,MAFA7xB,MAAKwrC,OAAS,KACdxrC,KAAK6yC,UAAY,MACV,CAGP,IAAoB,OAAhB7yC,KAAKwrC,OAAiB,CACtB,GAAIxrC,KAAKwrC,OAAOtP,aAEZ,OAAO,CAGP,IAAI38B,GAAQS,KAAKwrC,MACjBxrC,MAAKwrC,OAAS,IACd,IAAIoQ,GAAS57C,IAIb,OAHAT,GAAM8sC,aAAavP,GAAgB,SAAUr3B,EAAKo2C,GAC9CD,EAAOF,SAAS,GAAInY,IAAK99B,GAAMo2C,KAE5B77C,KAAK27C,OAAO9Y,GAGtB,GAAuB,OAAnB7iC,KAAK6yC,UAAoB,CAC9B,GAAI4I,GAAW5Y,EAAKgB,UAEpB,IADAhB,EAAOA,EAAKkB,WACR/jC,KAAK6yC,UAAUpsB,SAASg1B,GAAW,CAChBz7C,KAAK6yC,UAAUj0C,IAAI68C,GAAUE,OAAO9Y,IAEnD7iC,KAAK6yC,UAAUhU,OAAO4c,GAG9B,QAAIz7C,KAAK6yC,UAAUhhB,YACf7xB,KAAK6yC,UAAY,MACV,GAOX,OAAO,GAWnB2I,EAAmBv8C,UAAU68C,YAAc,SAAUC,EAAYC,GACzC,OAAhBh8C,KAAKwrC,OACLwQ,EAAKD,EAAY/7C,KAAKwrC,QAGtBxrC,KAAKqsC,aAAa,SAAU5mC,EAAKo2C,GAE7BA,EAAKC,YADM,GAAIvY,IAAKwY,EAAWl3C,WAAa,IAAMY,GAC3Bu2C,MASnCR,EAAmBv8C,UAAUotC,aAAe,SAAU2P,GAC3B,OAAnBh8C,KAAK6yC,WACL7yC,KAAK6yC,UAAUnR,KAAK,SAAUj8B,EAAKo2C,GAC/BG,EAAKv2C,EAAKo2C,MAIfL,KAuBPS,GAAqB,SAAUl5C,GAG/B,MAFAA,GAASA,MACTA,EAAA,UAAsBA,EAAA,YAAuB,GAAI6nB,OAAOE,UACjD/nB,GASPm5C,GAAuB,SAAU38C,EAAO48C,GACxC,MAAK58C,IAA0B,gBAAVA,IAIjBkoB,EAAKmF,OAAO,OAASrtB,GAAO,6CACrB48C,EAAa58C,EAAM,SAJnBA,GAcX68C,GAA2B,SAAUP,EAAMM,GAC3C,GAAIE,GAAe,GAAIb,GAIvB,OAHAK,GAAKC,YAAY,GAAIvY,IAAK,IAAK,SAAUV,EAAMyH,GAC3C+R,EAAaX,SAAS7Y,EAAMyZ,GAA6BhS,EAAM6R,MAE5DE,GAUPC,GAA+B,QAA/BA,GAAyChS,EAAM6R,GAC/C,GAEIvR,GAFA2R,EAASjS,EAAK9N,cAAc/5B,MAC5Bg5B,EAAWygB,GAAqBK,EAAQJ,EAE5C,IAAI7R,EAAKpO,aAAc,CACnB,GAAIsgB,GAAWlS,EACX/qC,EAAQ28C,GAAqBM,EAAShQ,WAAY2P,EACtD,OAAI58C,KAAUi9C,EAAShQ,YACnB/Q,IAAa+gB,EAAShgB,cAAc/5B,MAC7B,GAAIm5B,IAASr8B,EAAOg8B,EAAeE,IAGnC6O,EAIX,GAAImS,GAAenS,CAWnB,OAVAM,GAAU6R,EACNhhB,IAAaghB,EAAajgB,cAAc/5B,QACxCmoC,EAAUA,EAAQxO,eAAe,GAAIR,IAASH,KAElDghB,EAAapQ,aAAavP,GAAgB,SAAU+O,EAAW5P,GAC3D,GAAIgQ,GAAeqQ,EAA6BrgB,EAAWkgB,EACvDlQ,KAAiBhQ,IACjB2O,EAAUA,EAAQzO,qBAAqB0P,EAAWI,MAGnDrB,IAwBf,SAAW6J,GACPA,EAAcA,EAAA,UAA6B,GAAK,YAChDA,EAAcA,EAAA,MAAyB,GAAK,QAC5CA,EAAcA,EAAA,eAAkC,GAAK,iBACrDA,EAAcA,EAAA,gBAAmC,GAAK,mBACvDA,KAAkBA,OAQrB,IAwGIiI,IAw5DAC,GAhgEAC,GAAiC,WACjC,QAASA,GAAgBC,EAAUC,EAAYC,EAASC,GACpDh9C,KAAK68C,SAAWA,EAChB78C,KAAK88C,WAAaA,EAClB98C,KAAK+8C,QAAUA,EACf/8C,KAAKg9C,OAASA,EACdv1B,EAAKmF,QAAQowB,GAAUF,EAAY,uCAyBvC,MAnBAF,GAAgBK,KAAO,GAAIL,IACb,GAAM,EAAO,MACf,GAKZA,EAAgBM,OAAS,GAAIN,IAAgB,GAC7B,EAAM,MACV,GAKZA,EAAgBO,qBAAuB,SAAUJ,GAC7C,MAAO,IAAIH,IAAgB,GACX,EAAMG,GACV,IAETH,KAkBPQ,GAA8B,WAO9B,QAASA,GACSva,EACAwa,EACAC,GACdt9C,KAAK6iC,KAAOA,EACZ7iC,KAAKq9C,aAAeA,EACpBr9C,KAAKs9C,OAASA,EAEdt9C,KAAK+G,KAAO0tC,GAAc8I,eAE1Bv9C,KAAKgH,OAAS41C,GAAgBK,KAoBlC,MAfAG,GAAan+C,UAAUu+C,kBAAoB,SAAU3R,GACjD,GAAK7rC,KAAK6iC,KAAKhR,UAIV,IAA+B,MAA3B7xB,KAAKq9C,aAAa99C,MAGvB,MAFAkoB,GAAKmF,OAAO5sB,KAAKq9C,aAAaljC,SAAS0X,UAAW,4DAE3C7xB,IAGP,IAAIqxC,GAAYrxC,KAAKq9C,aAAaI,QAAQ,GAAIla,IAAKsI,GACnD,OAAO,IAAIuR,GAAa7Z,GAAKpzB,MAAOkhC,EAAWrxC,KAAKs9C,QATpD,MADA71B,GAAKmF,OAAO5sB,KAAK6iC,KAAKgB,aAAegI,EAAW,iDACzC,GAAIuR,GAAap9C,KAAK6iC,KAAKkB,WAAY/jC,KAAKq9C,aAAcr9C,KAAKs9C,SAYvEF,KAyBPM,GAAgB,WAIhB,MAHKhB,MACDA,GAAyB,GAAIrO,IAAUlN,IAEpCub,IAKPiB,GAA+B,WAM/B,QAASA,GAAcp+C,EAAO4a,OACT,KAAbA,IAAuBA,EAAWujC,MACtC19C,KAAKT,MAAQA,EACbS,KAAKma,SAAWA,EAkTpB,MA3SAwjC,GAAcC,WAAa,SAAU95B,GACjC,GAAI+3B,GAAO8B,EAAcxtC,KAIzB,OAHAsX,GAAK9a,QAAQmX,EAAK,SAAU4xB,EAAWmI,GACnChC,EAAOA,EAAK5nC,IAAI,GAAIsvB,IAAKmS,GAAYmI,KAElChC,GAMX8B,EAAc1+C,UAAU4yB,QAAU,WAC9B,MAAsB,QAAf7xB,KAAKT,OAAkBS,KAAKma,SAAS0X,WAchD8rB,EAAc1+C,UAAU6+C,iCAAmC,SAAUvZ,EAAcwZ,GAC/E,GAAkB,MAAd/9C,KAAKT,OAAiBw+C,EAAU/9C,KAAKT,OACrC,OAASsjC,KAAMU,GAAKpzB,MAAO5Q,MAAOS,KAAKT,MAGvC,IAAIglC,EAAa1S,UACb,MAAO,KAGP,IAAIsa,GAAQ5H,EAAaV,WACrBO,EAAQpkC,KAAKma,SAASvb,IAAIutC,EAC9B,IAAc,OAAV/H,EAAgB,CAChB,GAAI4Z,GAA4B5Z,EAAM0Z,iCAAiCvZ,EAAaR,WAAYga,EAChG,IAAiC,MAA7BC,EAAmC,CAEnC,OAASnb,KADM,GAAIU,IAAK4I,GAAO/H,MAAM4Z,EAA0Bnb,MACtCtjC,MAAOy+C,EAA0Bz+C,OAG1D,MAAO,MAIX,MAAO,OAWvBo+C,EAAc1+C,UAAUg/C,yBAA2B,SAAU1Z,GACzD,MAAOvkC,MAAK89C,iCAAiCvZ,EAAc,WAAc,OAAO,KAMpFoZ,EAAc1+C,UAAUw+C,QAAU,SAAUlZ,GACxC,GAAIA,EAAa1S,UACb,MAAO7xB,KAGP,IAAImsC,GAAQ5H,EAAaV,WACrBwN,EAAYrxC,KAAKma,SAASvb,IAAIutC,EAClC,OAAkB,QAAdkF,EACOA,EAAUoM,QAAQlZ,EAAaR,YAG/B4Z,EAAcxtC,OAWjCwtC,EAAc1+C,UAAUgV,IAAM,SAAUswB,EAAc2Z,GAClD,GAAI3Z,EAAa1S,UACb,MAAO,IAAI8rB,GAAcO,EAAOl+C,KAAKma,SAGrC,IAAIgyB,GAAQ5H,EAAaV,UAIzB,OAAO,IAAI8Z,GAAc39C,KAAKT,MADZS,KAAKma,SAAS00B,OAAO1C,GAF3BnsC,KAAKma,SAASvb,IAAIutC,IAAUwR,EAAcxtC,OACjC8D,IAAIswB,EAAaR,WAAYma,MAW1DP,EAAc1+C,UAAU4/B,OAAS,SAAU0F,GACvC,GAAIA,EAAa1S,UACb,MAAI7xB,MAAKma,SAAS0X,UACP8rB,EAAcxtC,MAGd,GAAIwtC,GAAc,KAAM39C,KAAKma,SAIxC,IAAIgyB,GAAQ5H,EAAaV,WACrBO,EAAQpkC,KAAKma,SAASvb,IAAIutC,EAC9B,IAAI/H,EAAO,CACP,GAAI+Z,GAAW/Z,EAAMvF,OAAO0F,EAAaR,YACrC4O,MAAc,EAOlB,OALIA,GADAwL,EAAStsB,UACK7xB,KAAKma,SAAS0kB,OAAOsN,GAGrBnsC,KAAKma,SAAS00B,OAAO1C,EAAOgS,GAE3B,OAAfn+C,KAAKT,OAAkBozC,EAAY9gB,UAC5B8rB,EAAcxtC,MAGd,GAAIwtC,GAAc39C,KAAKT,MAAOozC,GAIzC,MAAO3yC,OAUnB29C,EAAc1+C,UAAUL,IAAM,SAAU2lC,GACpC,GAAIA,EAAa1S,UACb,MAAO7xB,MAAKT,KAGZ,IAAI4sC,GAAQ5H,EAAaV,WACrBO,EAAQpkC,KAAKma,SAASvb,IAAIutC,EAC9B,OAAI/H,GACOA,EAAMxlC,IAAI2lC,EAAaR,YAGvB,MAWnB4Z,EAAc1+C,UAAUm/C,QAAU,SAAU7Z,EAAc8Z,GACtD,GAAI9Z,EAAa1S,UACb,MAAOwsB,EAGP,IAAIlS,GAAQ5H,EAAaV,WACrBO,EAAQpkC,KAAKma,SAASvb,IAAIutC,IAAUwR,EAAcxtC,MAClDguC,EAAW/Z,EAAMga,QAAQ7Z,EAAaR,WAAYsa,GAClD1L,MAAc,EAOlB,OALIA,GADAwL,EAAStsB,UACK7xB,KAAKma,SAAS0kB,OAAOsN,GAGrBnsC,KAAKma,SAAS00B,OAAO1C,EAAOgS,GAEvC,GAAIR,GAAc39C,KAAKT,MAAOozC,IAW7CgL,EAAc1+C,UAAUq/C,KAAO,SAAU3+C,GACrC,MAAOK,MAAKu+C,MAAMhb,GAAKpzB,MAAOxQ,IAUlCg+C,EAAc1+C,UAAUs/C,MAAQ,SAAUC,EAAW7+C,GACjD,GAAI8+C,KAIJ,OAHAz+C,MAAKma,SAASo0B,iBAAiB,SAAUkN,EAAUpK,GAC/CoN,EAAMhD,GAAYpK,EAAUkN,MAAMC,EAAUpa,MAAMqX,GAAW97C,KAE1DA,EAAG6+C,EAAWx+C,KAAKT,MAAOk/C,IASrCd,EAAc1+C,UAAUy/C,WAAa,SAAU7b,EAAM79B,GACjD,MAAOhF,MAAK2+C,YAAY9b,EAAMU,GAAKpzB,MAAOnL,IAE9C24C,EAAc1+C,UAAU0/C,YAAc,SAAUC,EAAcJ,EAAWx5C,GACrE,GAAIuF,KAASvK,KAAKT,OAAQyF,EAAEw5C,EAAWx+C,KAAKT,MAC5C,IAAIgL,EACA,MAAOA,EAGP,IAAIq0C,EAAa/sB,UACb,MAAO,KAGP,IAAIsa,GAAQyS,EAAa/a,WACrBgb,EAAY7+C,KAAKma,SAASvb,IAAIutC,EAClC,OAAI0S,GACOA,EAAUF,YAAYC,EAAa7a,WAAYya,EAAUpa,MAAM+H,GAAQnnC,GAGvE,MAWvB24C,EAAc1+C,UAAU6/C,cAAgB,SAAUjc,EAAM79B,GACpD,MAAOhF,MAAK++C,eAAelc,EAAMU,GAAKpzB,MAAOnL,IAEjD24C,EAAc1+C,UAAU8/C,eAAiB,SAAUH,EAAcI,EAAqBh6C,GAClF,GAAI45C,EAAa/sB,UACb,MAAO7xB,KAGHA,MAAKT,OACLyF,EAAEg6C,EAAqBh/C,KAAKT,MAEhC,IAAI4sC,GAAQyS,EAAa/a,WACrBgb,EAAY7+C,KAAKma,SAASvb,IAAIutC,EAClC,OAAI0S,GACOA,EAAUE,eAAeH,EAAa7a,WAAYib,EAAoB5a,MAAM+H,GAAQnnC,GAGpF24C,EAAcxtC,OAWjCwtC,EAAc1+C,UAAUggD,QAAU,SAAUj6C,GACxChF,KAAKk/C,SAAS3b,GAAKpzB,MAAOnL,IAE9B24C,EAAc1+C,UAAUigD,SAAW,SAAUF,EAAqBh6C,GAC9DhF,KAAKma,SAASo0B,iBAAiB,SAAU1C,EAAWwF,GAChDA,EAAU6N,SAASF,EAAoB5a,MAAMyH,GAAY7mC,KAEzDhF,KAAKT,OACLyF,EAAEg6C,EAAqBh/C,KAAKT,QAOpCo+C,EAAc1+C,UAAUkgD,aAAe,SAAUn6C,GAC7ChF,KAAKma,SAASo0B,iBAAiB,SAAU1C,EAAWwF,GAC5CA,EAAU9xC,OACVyF,EAAE6mC,EAAWwF,EAAU9xC,UAInCo+C,EAAcxtC,MAAQ,GAAIwtC,GAAc,MACjCA,KAwBPyB,GAAgC,WAChC,QAASA,GAAep4C,EAAQ67B,GAC5B7iC,KAAKgH,OAASA,EACdhH,KAAK6iC,KAAOA,EAEZ7iC,KAAK+G,KAAO0tC,GAAc4K,gBAU9B,MARAD,GAAengD,UAAUu+C,kBAAoB,WACzC,MAAIx9C,MAAK6iC,KAAKhR,UACH,GAAIutB,GAAep/C,KAAKgH,OAAQu8B,GAAKpzB,OAGrC,GAAIivC,GAAep/C,KAAKgH,OAAQhH,KAAK6iC,KAAKkB,aAGlDqb,KAyBPE,GAA2B,WAC3B,QAASA,GAAUt4C,EAAQ67B,EAAMmS,GAC7Bh1C,KAAKgH,OAASA,EACdhH,KAAK6iC,KAAOA,EACZ7iC,KAAKg1C,KAAOA,EAEZh1C,KAAK+G,KAAO0tC,GAAc8K,UAU9B,MARAD,GAAUrgD,UAAUu+C,kBAAoB,SAAU3R,GAC9C,MAAI7rC,MAAK6iC,KAAKhR,UACH,GAAIytB,GAAUt/C,KAAKgH,OAAQu8B,GAAKpzB,MAAOnQ,KAAKg1C,KAAKpJ,kBAAkBC,IAGnE,GAAIyT,GAAUt/C,KAAKgH,OAAQhH,KAAK6iC,KAAKkB,WAAY/jC,KAAKg1C,OAG9DsK,KAyBPE,GAAuB,WACvB,QAASA,GACSx4C,EACA67B,EACA1oB,GACdna,KAAKgH,OAASA,EACdhH,KAAK6iC,KAAOA,EACZ7iC,KAAKma,SAAWA,EAEhBna,KAAK+G,KAAO0tC,GAAcgL,MAsC9B,MAjCAD,GAAMvgD,UAAUu+C,kBAAoB,SAAU3R,GAC1C,GAAI7rC,KAAK6iC,KAAKhR,UAAW,CACrB,GAAIwf,GAAYrxC,KAAKma,SAASsjC,QAAQ,GAAIla,IAAKsI,GAC/C,OAAIwF,GAAUxf,UAEH,KAEFwf,EAAU9xC,MAER,GAAI+/C,IAAUt/C,KAAKgH,OAAQu8B,GAAKpzB,MAAOkhC,EAAU9xC,OAIjD,GAAIigD,GAAMx/C,KAAKgH,OAAQu8B,GAAKpzB,MAAOkhC,GAK9C,MADA5pB,GAAKmF,OAAO5sB,KAAK6iC,KAAKgB,aAAegI,EAAW,kEACzC,GAAI2T,GAAMx/C,KAAKgH,OAAQhH,KAAK6iC,KAAKkB,WAAY/jC,KAAKma,WAMjEqlC,EAAMvgD,UAAU4F,SAAW,WACvB,MAAQ,aACJ7E,KAAK6iC,KACL,KACA7iC,KAAKgH,OAAOnC,WACZ,WACA7E,KAAKma,SAAStV,WACd,KAED26C,KAwBPE,GAA2B,WAM3B,QAASA,GAAUtK,EAAOuK,EAAmBC,GACzC5/C,KAAKo1C,MAAQA,EACbp1C,KAAK2/C,kBAAoBA,EACzB3/C,KAAK4/C,UAAYA,EAwCrB,MAlCAF,GAAUzgD,UAAU4gD,mBAAqB,WACrC,MAAO7/C,MAAK2/C,mBAMhBD,EAAUzgD,UAAU6gD,WAAa,WAC7B,MAAO9/C,MAAK4/C,WAMhBF,EAAUzgD,UAAU8gD,kBAAoB,SAAUld,GAC9C,MAAIA,GAAKhR,UACE7xB,KAAK6/C,uBAAyB7/C,KAAK4/C,UAGvC5/C,KAAKggD,mBADGnd,EAAKgB,aAOxB6b,EAAUzgD,UAAU+gD,mBAAqB,SAAUv6C,GAC/C,MAASzF,MAAK6/C,uBAAyB7/C,KAAK4/C,WAAc5/C,KAAKo1C,MAAMrJ,SAAStmC,IAKlFi6C,EAAUzgD,UAAUghD,QAAU,WAC1B,MAAOjgD,MAAKo1C,OAETsK,KAyBPQ,GAA2B,WAM3B,QAASA,GAAUC,EAAaC,GAC5BpgD,KAAKmgD,YAAcA,EACnBngD,KAAKogD,aAAeA,EAyDxB,MAjDAF,GAAUjhD,UAAUohD,gBAAkB,SAAUC,EAAW7rB,EAAU8rB,GACjE,MAAO,IAAIL,GAAU,GAAIR,IAAUY,EAAW7rB,EAAU8rB,GAAWvgD,KAAKogD,eAQ5EF,EAAUjhD,UAAUuhD,iBAAmB,SAAUC,EAAYhsB,EAAU8rB,GACnE,MAAO,IAAIL,GAAUlgD,KAAKmgD,YAAa,GAAIT,IAAUe,EAAYhsB,EAAU8rB,KAK/EL,EAAUjhD,UAAUyhD,cAAgB,WAChC,MAAO1gD,MAAKmgD,aAKhBD,EAAUjhD,UAAU0hD,qBAAuB,WACvC,MAAO3gD,MAAKmgD,YAAYN,qBAClB7/C,KAAKmgD,YAAYF,UACjB,MAKVC,EAAUjhD,UAAU2hD,eAAiB,WACjC,MAAO5gD,MAAKogD,cAKhBF,EAAUjhD,UAAU4hD,sBAAwB,WACxC,MAAO7gD,MAAKogD,aAAaP,qBACnB7/C,KAAKogD,aAAaH,UAClB,MAMVC,EAAU/vC,MAAQ,GAAI+vC,GAAU,GAAIR,IAAUhkB,GAAaC,YACrC,GACR,GAAQ,GAAI+jB,IAAUhkB,GAAaC,YAC3B,GACR,IACPukB,KA2BPY,GAAwB,WACxB,QAASA,GAAO/5C,EAAMiwC,EAAcnL,EAAWkV,EAAS9K,GACpDj2C,KAAK+G,KAAOA,EACZ/G,KAAKg3C,aAAeA,EACpBh3C,KAAK6rC,UAAYA,EACjB7rC,KAAK+gD,QAAUA,EACf/gD,KAAKi2C,SAAWA,EAqDpB,MA/CA6K,GAAOE,YAAc,SAAU77B,GAC3B,MAAO,IAAI27B,GAAOA,EAAOG,MAAO97B,IAOpC27B,EAAOI,iBAAmB,SAAUzF,EAAUt2B,GAC1C,MAAO,IAAI27B,GAAOA,EAAOK,YAAah8B,EAAUs2B,IAOpDqF,EAAOM,mBAAqB,SAAU3F,EAAUt2B,GAC5C,MAAO,IAAI27B,GAAOA,EAAOO,cAAel8B,EAAUs2B,IAQtDqF,EAAOQ,mBAAqB,SAAU7F,EAAU8F,EAAaC,GACzD,MAAO,IAAIV,GAAOA,EAAOW,cAAeF,EAAa9F,EAAU+F,IAOnEV,EAAOY,iBAAmB,SAAUjG,EAAUt2B,GAC1C,MAAO,IAAI27B,GAAOA,EAAOa,YAAax8B,EAAUs2B,IAIpDqF,EAAOK,YAAc,cAErBL,EAAOO,cAAgB,gBAEvBP,EAAOW,cAAgB,gBAEvBX,EAAOa,YAAc,cAErBb,EAAOG,MAAQ,QACRH,KAyBPc,GAA+B,WAC/B,QAASA,GAActM,GACnBt1C,KAAKs1C,OAASA,EAkGlB,MAhGAsM,GAAc3iD,UAAUitC,YAAc,SAAU8I,EAAMvvC,EAAK04C,EAAU0D,EAAc76C,EAAQ86C,GACvFr6B,EAAKmF,OAAOooB,EAAK5H,UAAUptC,KAAKs1C,QAAS,oDACzC,IAAIyM,GAAW/M,EAAKpJ,kBAAkBnmC,EAEtC,OAAIs8C,GAASjW,SAAS+V,GAAc9c,OAAOoZ,EAASrS,SAAS+V,KAIrDE,EAASlwB,WAAassB,EAAStsB,UAIxBmjB,GAGa,MAAxB8M,IACI3D,EAAStsB,UACLmjB,EAAKjJ,SAAStmC,GACdq8C,EAAqBE,iBAAiBlB,GAAOM,mBAAmB37C,EAAKs8C,IAGrEt6B,EAAKmF,OAAOooB,EAAK9Y,aAAc,uEAInC4lB,EAAqBE,iBADhBD,EAASlwB,UACwBivB,GAAOI,iBAAiBz7C,EAAK04C,GAG7B2C,GAAOQ,mBAAmB77C,EAAK04C,EAAU4D,KAGnF/M,EAAK9Y,cAAgBiiB,EAAStsB,UACvBmjB,EAIAA,EAAK7Y,qBAAqB12B,EAAK04C,GAAUhR,UAAUntC,KAAKs1C,UAMvEsM,EAAc3iD,UAAUgjD,eAAiB,SAAUlB,EAASmB,EAASJ,GAuBjE,MAtB4B,OAAxBA,IACKf,EAAQ7kB,cACT6kB,EAAQ1U,aAAavP,GAAgB,SAAUr3B,EAAKw2B,GAC3CimB,EAAQnW,SAAStmC,IAClBq8C,EAAqBE,iBAAiBlB,GAAOM,mBAAmB37C,EAAKw2B,MAI5EimB,EAAQhmB,cACTgmB,EAAQ7V,aAAavP,GAAgB,SAAUr3B,EAAKw2B,GAChD,GAAI8kB,EAAQhV,SAAStmC,GAAM,CACvB,GAAIs8C,GAAWhB,EAAQnV,kBAAkBnmC,EACpCs8C,GAAShd,OAAO9I,IACjB6lB,EAAqBE,iBAAiBlB,GAAOQ,mBAAmB77C,EAAKw2B,EAAW8lB,QAIpFD,GAAqBE,iBAAiBlB,GAAOI,iBAAiBz7C,EAAKw2B,OAK5EimB,EAAQ/U,UAAUntC,KAAKs1C,SAKlCsM,EAAc3iD,UAAUm9B,eAAiB,SAAU2kB,EAAS/N,GACxD,MAAI+N,GAAQlvB,UACD6J,GAAaC,WAGbolB,EAAQ3kB,eAAe4W,IAMtC4O,EAAc3iD,UAAUkjD,aAAe,WACnC,OAAO,GAKXP,EAAc3iD,UAAUmjD,iBAAmB,WACvC,MAAOpiD,OAKX4hD,EAAc3iD,UAAU83C,SAAW,WAC/B,MAAO/2C,MAAKs1C,QAETsM,KAqBPS,GAAwC,WACxC,QAASA,KACLriD,KAAKsiD,cAmDT,MA9CAD,GAAuBpjD,UAAU+iD,iBAAmB,SAAUnL,GAC1D,GAAI9vC,GAAO8vC,EAAO9vC,KACd00C,EAAkC5E,EAAOhL,SAC7CpkB,GAAKmF,OAAO7lB,GAAQ+5C,GAAOK,aACvBp6C,GAAQ+5C,GAAOW,eACf16C,GAAQ+5C,GAAOO,cAAe,6CAClC55B,EAAKmF,OAAoB,cAAb6uB,EAA0B,kDACtC,IAAI8G,GAAY96B,EAAK8J,QAAQvxB,KAAKsiD,WAAY7G,EAC9C,IAAI8G,EAAW,CACX,GAAIC,GAAUD,EAAUx7C,IACxB,IAAIA,GAAQ+5C,GAAOK,aAAeqB,GAAW1B,GAAOO,cAChDrhD,KAAKsiD,WAAW7G,GAAYqF,GAAOQ,mBAAmB7F,EAAU5E,EAAOG,aAAcuL,EAAUvL,kBAE9F,IAAIjwC,GAAQ+5C,GAAOO,eACpBmB,GAAW1B,GAAOK,kBACXnhD,MAAKsiD,WAAW7G,OAEtB,IAAI10C,GAAQ+5C,GAAOO,eACpBmB,GAAW1B,GAAOW,cAClBzhD,KAAKsiD,WAAW7G,GAAYqF,GAAOM,mBAAmB3F,EAAU8G,EAAUxB,aAEzE,IAAIh6C,GAAQ+5C,GAAOW,eACpBe,GAAW1B,GAAOK,YAClBnhD,KAAKsiD,WAAW7G,GAAYqF,GAAOI,iBAAiBzF,EAAU5E,EAAOG,kBAEpE,IAAIjwC,GAAQ+5C,GAAOW,eACpBe,GAAW1B,GAAOW,cAIlB,KAAMh6B,GAAKsF,eAAe,mCACtB8pB,EACA,mBACA0L,EANJviD,MAAKsiD,WAAW7G,GAAYqF,GAAOQ,mBAAmB7F,EAAU5E,EAAOG,aAAcuL,EAAUxB,cAUnG/gD,MAAKsiD,WAAW7G,GAAY5E,GAMpCwL,EAAuBpjD,UAAUwjD,WAAa,WAC1C,MAAOh7B,GAAK4K,UAAUryB,KAAKsiD,aAExBD,KAyBPK,GAAwC,WACxC,QAASA,MAcT,MATAA,GAAuBzjD,UAAU0jD,iBAAmB,WAChD,MAAO,OAKXD,EAAuBzjD,UAAU2jD,mBAAqB,WAClD,MAAO,OAEJF,KAOPG,GAA2B,GAAIH,IAQ/BI,GAA8C,WAM9C,QAASA,GAA6BC,EAASC,EAAYC,OACvB,KAA5BA,IAAsCA,EAA0B,MACpEjjD,KAAK+iD,QAAUA,EACf/iD,KAAKgjD,WAAaA,EAClBhjD,KAAKijD,wBAA0BA,EAgCnC,MA3BAH,GAA6B7jD,UAAU0jD,iBAAmB,SAAUlH,GAChE,GAAInR,GAAOtqC,KAAKgjD,WAAWtC,eAC3B,OAAIpW,GAAK0V,mBAAmBvE,GACjBnR,EAAK2V,UAAUrU,kBAAkB6P,GAMjCz7C,KAAK+iD,QAAQG,kBAAkBzH,EAHW,MAAhCz7C,KAAKijD,wBAChB,GAAIvD,IAAU1/C,KAAKijD,yBAAyB,GAAM,GAClDjjD,KAAKgjD,WAAWpC,mBAO9BkC,EAA6B7jD,UAAU2jD,mBAAqB,SAAUt4C,EAAO85B,EAAOlC,GAChF,GAAIihB,GAAqD,MAAhCnjD,KAAKijD,wBACxBjjD,KAAKijD,wBACLjjD,KAAKgjD,WAAWnC,wBAClBuC,EAAQpjD,KAAK+iD,QAAQM,iBAAiBF,EAAoB/e,EAAO,EAAGlC,EAAS53B,EACjF,OAAqB,KAAjB84C,EAAM5hD,OACC,KAGA4hD,EAAM,IAGdN,KAsBPQ,GAAiC,WAKjC,QAASA,GAAgBC,EAAWC,GAChCxjD,KAAKujD,UAAYA,EACjBvjD,KAAKwjD,QAAUA,EAEnB,MAAOF,MAKPG,GAA+B,WAI/B,QAASA,GAAcC,GACnB1jD,KAAK0jD,QAAUA,EA4hBnB,MAvhBAD,GAAcxkD,UAAU0kD,cAAgB,SAAUJ,GAC9C97B,EAAKmF,OAAO22B,EACP7C,gBACAT,UACA7S,UAAUptC,KAAK0jD,QAAQ3M,YAAa,0BACzCtvB,EAAKmF,OAAO22B,EACP3C,iBACAX,UACA7S,UAAUptC,KAAK0jD,QAAQ3M,YAAa,4BAS7C0M,EAAcxkD,UAAU2kD,eAAiB,SAAUC,EAAcC,EAAWC,EAAaC,GACrF,GACIC,GAAcC,EADdC,EAAc,GAAI9B,GAEtB,IAAIyB,EAAU/8C,OAAS0tC,GAAc8K,UAAW,CAC5C,GAAI6E,GAAYN,CACZM,GAAUp9C,OAAO61C,SACjBoH,EAAejkD,KAAKqkD,oBAAoBR,EAAcO,EAAUvhB,KAAMuhB,EAAUpP,KAAM+O,EAAaC,EAAeG,IAGlH18B,EAAKmF,OAAOw3B,EAAUp9C,OAAO81C,WAAY,mBAIzCoH,EACIE,EAAUp9C,OAAOg2C,QACZ6G,EAAajD,iBAAiBd,eAC1BsE,EAAUvhB,KAAKhR,UAC5BoyB,EAAejkD,KAAKskD,sBAAsBT,EAAcO,EAAUvhB,KAAMuhB,EAAUpP,KAAM+O,EAAaC,EAAeE,EAAkBC,QAGzI,IAAIL,EAAU/8C,OAAS0tC,GAAcgL,MAAO,CAC7C,GAAI8E,GAAQT,CACRS,GAAMv9C,OAAO61C,SACboH,EAAejkD,KAAKwkD,gBAAgBX,EAAcU,EAAM1hB,KAAM0hB,EAAMpqC,SAAU4pC,EAAaC,EAAeG,IAG1G18B,EAAKmF,OAAO23B,EAAMv9C,OAAO81C,WAAY,mBAErCoH,EACIK,EAAMv9C,OAAOg2C,QAAU6G,EAAajD,iBAAiBd,aACzDmE,EAAejkD,KAAKykD,kBAAkBZ,EAAcU,EAAM1hB,KAAM0hB,EAAMpqC,SAAU4pC,EAAaC,EAAeE,EAAkBC,QAGjI,IAAIL,EAAU/8C,OAAS0tC,GAAc8I,eAAgB,CACtD,GAAImH,GAAeZ,CAKfG,GAJCS,EAAapH,OAICt9C,KAAK2kD,iBAAiBd,EAAca,EAAa7hB,KAAMkhB,EAAaC,EAAeG,GAHnFnkD,KAAK4kD,cAAcf,EAAca,EAAa7hB,KAAM6hB,EAAarH,aAAc0G,EAAaC,EAAeG,OAM7H,IAAIL,EAAU/8C,OAAS0tC,GAAc4K,gBAItC,KAAM53B,GAAKsF,eAAe,2BAA6B+2B,EAAU/8C,KAHjEk9C,GAAejkD,KAAK6kD,gBAAgBhB,EAAcC,EAAUjhB,KAAMkhB,EAAaI,GAKnF,GAAIX,GAAUW,EAAY1B,YAE1B,OADAgB,GAAcqB,oBAAoBjB,EAAcI,EAAcT,GACvD,GAAIF,IAAgBW,EAAcT,IAQ7CC,EAAcqB,oBAAsB,SAAUjB,EAAcI,EAAcE,GACtE,GAAI7D,GAAY2D,EAAavD,eAC7B,IAAIJ,EAAUT,qBAAsB,CAChC,GAAIkF,GAAgBzE,EAAUL,UAAU/jB,cAAgBokB,EAAUL,UAAUpuB,UACxEmzB,EAAkBnB,EAAalD,wBAC/BwD,EAAY3iD,OAAS,IACpBqiD,EAAanD,gBAAgBb,sBAC7BkF,IACIzE,EACIL,UACAlb,OAA6BigB,KACrC1E,EACIL,UACAzjB,cACAuI,OAAOigB,EAAgBxoB,iBAC5B2nB,EAAYxjD,KAAKmgD,GAAOE,YACHiD,EAAatD,2BAa9C8C,EAAcxkD,UAAUgmD,oCAAsC,SAAU1B,EAAW2B,EAAYnB,EAAa/8C,EAAQm9C,GAChH,GAAIgB,GAAe5B,EAAU7C,eAC7B,IAA8C,MAA1CqD,EAAYqB,eAAeF,GAE3B,MAAO3B,EAGP,IAAI8B,OAAgB,GAAQC,MAAa,EACzC,IAAIJ,EAAWrzB,UAGX,GADApK,EAAKmF,OAAO22B,EAAU3C,iBAAiBf,qBAAsB,8DACzD0D,EAAU3C,iBAAiBd,aAAc,CAIzC,GAAIyF,GAAchC,EAAU1C,wBACxB2E,EAAmBD,YAAuB7pB,IACxC6pB,EACA7pB,GAAaC,WACf8pB,EAAwB1B,EAAY2B,0BAA0BF,EAClEH,GAAgBrlD,KAAK0jD,QAAQzB,eAAesB,EAAU7C,gBAAgBT,UAAWwF,EAAuBtB,OAEvG,CACD,GAAIwB,GAAe5B,EAAY6B,uBAAuBrC,EAAU1C,wBAChEwE,GAAgBrlD,KAAK0jD,QAAQzB,eAAesB,EAAU7C,gBAAgBT,UAAW0F,EAAcxB,OAGlG,CACD,GAAI1I,GAAWyJ,EAAWrhB,UAC1B,IAAgB,aAAZ4X,EAAyB,CACzBh0B,EAAKmF,OAAiC,GAA1Bs4B,EAAWphB,YAAkB,wDACzC,IAAI+hB,GAAeV,EAAalF,SAChCqF,GAAa/B,EAAU3C,iBAAiBX,SAExC,IAAI6F,GAAkB/B,EAAYgC,mCAAmCb,EAAYW,EAAcP,EAE3FD,GADmB,MAAnBS,EACgB9lD,KAAK0jD,QAAQtnB,eAAeypB,EAAcC,GAI1CX,EAAalF,cAGhC,CACD,GAAI+F,GAAkBd,EAAWnhB,WAE7BkiB,MAAgB,EACpB,IAAId,EAAanF,mBAAmBvE,GAAW,CAC3C6J,EAAa/B,EAAU3C,iBAAiBX,SACxC,IAAIiG,GAAmBnC,EAAYgC,mCAAmCb,EAAYC,EAAalF,UAAWqF,EAEtGW,GADoB,MAApBC,EACgBf,EACXlF,UACArU,kBAAkB6P,GAClBvP,YAAY8Z,EAAiBE,GAIlBf,EACXlF,UACArU,kBAAkB6P,OAI3BwK,GAAgBlC,EAAYb,kBAAkBzH,EAAU8H,EAAU3C,iBAGlEyE,GADiB,MAAjBY,EACgBjmD,KAAK0jD,QAAQxX,YAAYiZ,EAAalF,UAAWxE,EAAUwK,EAAeD,EAAiBh/C,EAAQm9C,GAInGgB,EAAalF,WAIzC,MAAOsD,GAAUlD,gBAAgBgF,EAAeF,EAAatF,sBAAwBqF,EAAWrzB,UAAW7xB,KAAK0jD,QAAQvB,iBAchIsB,EAAcxkD,UAAUqlD,sBAAwB,SAAUT,EAAcqB,EAAYiB,EAAapC,EAAaC,EAAeE,EAAkBC,GAC3I,GACIiC,GADAC,EAAgBxC,EAAajD,iBAE7B0F,EAAepC,EACblkD,KAAK0jD,QACL1jD,KAAK0jD,QAAQtB,kBACnB,IAAI8C,EAAWrzB,UACXu0B,EAAiBE,EAAarE,eAAeoE,EAAcpG,UAAWkG,EAAa,UAElF,IAAIG,EAAanE,iBAAmBkE,EAAcvG,aAAc,CAEjE,GAAIyG,GAAgBF,EACfpG,UACA/T,YAAYgZ,EAAYiB,EAC7BC,GAAiBE,EAAarE,eAAeoE,EAAcpG,UAAWsG,EAAe,UAEpF,CACD,GAAI9K,GAAWyJ,EAAWrhB,UAC1B,KAAKwiB,EAActG,kBAAkBmF,IACjCA,EAAWphB,YAAc,EAEzB,MAAO+f,EAEX,IAAImC,GAAkBd,EAAWnhB,WAC7B9H,EAAYoqB,EAAcpG,UAAUrU,kBAAkB6P,GACtDxP,EAAehQ,EAAUiQ,YAAY8Z,EAAiBG,EAEtDC,GADY,aAAZ3K,EACiB6K,EAAalqB,eAAeiqB,EAAcpG,UAAWhU,GAGrDqa,EAAapa,YAAYma,EAAcpG,UAAWxE,EAAUxP,EAAc+Z,EAAiBnD,GAA0B,MAG9I,GAAIoB,GAAeJ,EAAarD,iBAAiB4F,EAAgBC,EAAcxG,sBAAwBqF,EAAWrzB,UAAWy0B,EAAanE,eAE1I,OAAOniD,MAAKilD,oCAAoChB,EAAciB,EAAYnB,EAD7D,GAAIjB,IAA6BiB,EAAaE,EAAcD,GACsBG,IAYnGV,EAAcxkD,UAAUolD,oBAAsB,SAAUR,EAAcqB,EAAYiB,EAAapC,EAAaC,EAAeG,GACvH,GACIF,GAAcoB,EADdF,EAAetB,EAAanD,gBAE5B15C,EAAS,GAAI87C,IAA6BiB,EAAaF,EAAcG,EACzE,IAAIkB,EAAWrzB,UACXwzB,EAAgBrlD,KAAK0jD,QAAQzB,eAAe4B,EAAanD,gBAAgBT,UAAWkG,EAAahC,GACjGF,EAAeJ,EAAaxD,gBAAgBgF,GAAe,EAAMrlD,KAAK0jD,QAAQvB,oBAE7E,CACD,GAAI1G,GAAWyJ,EAAWrhB,UAC1B,IAAiB,cAAb4X,EACA4J,EAAgBrlD,KAAK0jD,QAAQtnB,eAAeynB,EAAanD,gBAAgBT,UAAWkG,GACpFlC,EAAeJ,EAAaxD,gBAAgBgF,EAAeF,EAAatF,qBAAsBsF,EAAarF,kBAE1G,CACD,GAAIkG,GAAkBd,EAAWnhB,WAC7Bge,EAAWoD,EAAalF,UAAUrU,kBAAkB6P,GACpD0C,MAAW,EACf,IAAI6H,EAAgBn0B,UAEhBssB,EAAWgI,MAEV,CACD,GAAIlqB,GAAYj1B,EAAO27C,iBAAiBlH,EAMhC0C,GALS,MAAbliB,EACkC,cAA9B+pB,EAAgBhiB,WAChB/H,EAAU6P,SAASka,EAAgB7hB,UAAUtS,UAGlCoK,EAGAA,EAAUiQ,YAAY8Z,EAAiBG,GAK3CzqB,GAAaC,WAGhC,GAAKomB,EAAShd,OAAOoZ,GAKjB8F,EAAeJ,MALa,CAE5BI,EAAeJ,EAAaxD,gBADTrgD,KAAK0jD,QAAQxX,YAAYiZ,EAAalF,UAAWxE,EAAU0C,EAAU6H,EAAiBh/C,EAAQm9C,GACvDgB,EAAatF,qBAAsB7/C,KAAK0jD,QAAQvB,kBAOtH,MAAO8B,IAQXR,EAAc+C,eAAiB,SAAUjD,EAAW9H,GAChD,MAAO8H,GAAU7C,gBAAgBV,mBAAmBvE,IAYxDgI,EAAcxkD,UAAUulD,gBAAkB,SAAUjB,EAAW1gB,EAAM4jB,EAAiB1C,EAAawB,EAAapB,GAC5G,GAAIzhC,GAAQ1iB,KAOR0mD,EAAenD,CAanB,OAZAkD,GAAgBxH,QAAQ,SAAU1a,EAActI,GAC5C,GAAI0qB,GAAY9jB,EAAKuB,MAAMG,EACvBkf,GAAc+C,eAAejD,EAAWoD,EAAU9iB,cAClD6iB,EAAehkC,EAAM2hC,oBAAoBqC,EAAcC,EAAW1qB,EAAW8nB,EAAawB,EAAapB,MAG/GsC,EAAgBxH,QAAQ,SAAU1a,EAActI,GAC5C,GAAI0qB,GAAY9jB,EAAKuB,MAAMG,EACtBkf,GAAc+C,eAAejD,EAAWoD,EAAU9iB,cACnD6iB,EAAehkC,EAAM2hC,oBAAoBqC,EAAcC,EAAW1qB,EAAW8nB,EAAawB,EAAapB,MAGxGuC,GAQXjD,EAAcxkD,UAAU2nD,YAAc,SAAUtc,EAAMia,GAIlD,MAHAA,GAAMtF,QAAQ,SAAU1a,EAActI,GAClCqO,EAAOA,EAAK4B,YAAY3H,EAActI,KAEnCqO,GAaXmZ,EAAcxkD,UAAUwlD,kBAAoB,SAAUlB,EAAW1gB,EAAM4jB,EAAiB1C,EAAawB,EAAarB,EAAkBC,GAChI,GAAIzhC,GAAQ1iB,IAGZ,IAAIujD,EACC3C,iBACAX,UACApuB,YACA0xB,EAAU3C,iBAAiBf,qBAC5B,MAAO0D,EAQX,IACIsD,GADAH,EAAenD,CAGfsD,GADAhkB,EAAKhR,UACW40B,EAGA9I,GAAcxtC,MAAMiuC,QAAQvb,EAAM4jB,EAEtD,IAAInB,GAAa/B,EAAU3C,iBAAiBX,SAuB5C,OAtBA4G,GAAc1sC,SAASo0B,iBAAiB,SAAUkN,EAAUpK,GACxD,GAAIiU,EAAWvZ,SAAS0P,GAAW,CAC/B,GAAIqL,GAAcvD,EACb3C,iBACAX,UACArU,kBAAkB6P,GACnB0C,EAAWz7B,EAAMkkC,YAAYE,EAAazV,EAC9CqV,GAAehkC,EAAM4hC,sBAAsBoC,EAAc,GAAInjB,IAAKkY,GAAW0C,EAAU4F,EAAawB,EAAarB,EAAkBC,MAG3I0C,EAAc1sC,SAASo0B,iBAAiB,SAAUkN,EAAUsL,GACxD,GAAIC,IAAsBzD,EAAU3C,iBAAiBZ,mBAAmBvE,IAC5C,MAAxBsL,EAAexnD,KACnB,KAAK+lD,EAAWvZ,SAAS0P,KAAcuL,EAAoB,CACvD,GAAIF,GAAcvD,EACb3C,iBACAX,UACArU,kBAAkB6P,GACnB0C,EAAWz7B,EAAMkkC,YAAYE,EAAaC,EAC9CL,GAAehkC,EAAM4hC,sBAAsBoC,EAAc,GAAInjB,IAAKkY,GAAW0C,EAAU4F,EAAawB,EAAarB,EAAkBC,MAGpIuC,GAYXjD,EAAcxkD,UAAU2lD,cAAgB,SAAUrB,EAAW0D,EAAS5J,EAAc0G,EAAaC,EAAeG,GAC5G,GAA2C,MAAvCJ,EAAYqB,eAAe6B,GAC3B,MAAO1D,EAGX,IAAIW,GAAmBX,EAAU3C,iBAAiBd,aAG9CyF,EAAchC,EAAU3C,gBAC5B,IAA0B,MAAtBvD,EAAa99C,MAAe,CAE5B,GAAK0nD,EAAQp1B,WAAa0zB,EAAY1F,sBAClC0F,EAAYxF,kBAAkBkH,GAC9B,MAAOjnD,MAAKskD,sBAAsBf,EAAW0D,EAAS1B,EAAYtF,UAAUnU,SAASmb,GAAUlD,EAAaC,EAAeE,EAAkBC,EAE5I,IAAI8C,EAAQp1B,UAAW,CAGxB,GAAIq1B,GAAoBvJ,GAAcxtC,KAItC,OAHAo1C,GAAYtF,UAAU5T,aAAajB,GAAW,SAAU/sC,EAAMisC,GAC1D4c,EAAoBA,EAAkBjzC,IAAI,GAAIsvB,IAAKllC,GAAOisC,KAEvDtqC,KAAKykD,kBAAkBlB,EAAW0D,EAASC,EAAmBnD,EAAaC,EAAeE,EAAkBC,GAGnH,MAAOZ,GAKX,GAAI4D,GAAoBxJ,GAAcxtC,KAOtC,OANAktC,GAAa4B,QAAQ,SAAUmI,GAC3B,GAAIC,GAAkBJ,EAAQ7iB,MAAMgjB,EAChC7B,GAAYxF,kBAAkBsH,KAC9BF,EAAoBA,EAAkBlzC,IAAImzC,EAAW7B,EAAYtF,UAAUnU,SAASub,OAGrFrnD,KAAKykD,kBAAkBlB,EAAW0D,EAASE,EAAmBpD,EAAaC,EAAeE,EAAkBC,IAW3HV,EAAcxkD,UAAU4lD,gBAAkB,SAAUtB,EAAW1gB,EAAMkhB,EAAaI,GAC9E,GAAImD,GAAgB/D,EAAU3C,gBAE9B,OAAO5gD,MAAKilD,oCADO1B,EAAU/C,iBAAiB8G,EAAcrH,UAAWqH,EAAczH,sBAAwBhd,EAAKhR,UAAWy1B,EAAcxH,cAC7Ejd,EAAMkhB,EAAalB,GAA0BsB,IAW/GV,EAAcxkD,UAAU0lD,iBAAmB,SAAUpB,EAAW1gB,EAAMkhB,EAAawD,EAAqBpD,GACpG,GAAI1vB,EACJ,IAAwC,MAApCsvB,EAAYqB,eAAeviB,GAC3B,MAAO0gB,EAGP,IAAIv8C,GAAS,GAAI87C,IAA6BiB,EAAaR,EAAWgE,GAClEC,EAAgBjE,EAAU7C,gBAAgBT,UAC1CoF,MAAgB,EACpB,IAAIxiB,EAAKhR,WAAiC,cAApBgR,EAAKgB,WAA4B,CACnD,GAAI+G,OAAU,EACd,IAAI2Y,EAAU3C,iBAAiBf,qBAC3BjV,EAAUmZ,EAAY6B,uBAAuBrC,EAAU1C,6BAEtD,CACD,GAAI4G,GAAiBlE,EAAU3C,iBAAiBX,SAChDx4B,GAAKmF,OAAO66B,YAA0B/rB,IAAc,iDACpDkP,EAAUmZ,EAAY2B,0BAA0B+B,GAEpD7c,EAAUA,EACVya,EAAgBrlD,KAAK0jD,QAAQzB,eAAeuF,EAAe5c,EAASuZ,OAEnE,CACD,GAAI1I,GAAW5Y,EAAKgB,WAChBsa,EAAW4F,EAAYb,kBAAkBzH,EAAU8H,EAAU3C,iBACjD,OAAZzC,GACAoF,EAAU3C,iBAAiBZ,mBAAmBvE,KAC9C0C,EAAWqJ,EAAc5b,kBAAkB6P,IAG3C4J,EADY,MAAZlH,EACgBn+C,KAAK0jD,QAAQxX,YAAYsb,EAAe/L,EAAU0C,EAAUtb,EAAKkB,WAAY/8B,EAAQm9C,GAEhGZ,EACJ7C,gBACAT,UACAlU,SAAS0P,GAEMz7C,KAAK0jD,QAAQxX,YAAYsb,EAAe/L,EAAU/f,GAAaC,WAAYkH,EAAKkB,WAAY/8B,EAAQm9C,GAGpGqD,EAEhBnC,EAAcxzB,WACd0xB,EAAU3C,iBAAiBf,uBAE3BprB,EAAWsvB,EAAY6B,uBAAuBrC,EAAU1C,yBACpDpsB,EAASyH,eACTmpB,EAAgBrlD,KAAK0jD,QAAQzB,eAAeoD,EAAe5wB,EAAU0vB,KAOjF,MAHA1vB,GACI8uB,EAAU3C,iBAAiBf,sBACmB,MAA1CkE,EAAYqB,eAAe7hB,GAAKpzB,OACjCozC,EAAUlD,gBAAgBgF,EAAe5wB,EAAUz0B,KAAK0jD,QAAQvB,iBAGxEsB,KAyBPiE,GAAgC,WAKhC,QAASA,GAAeC,GACpB3nD,KAAK2nD,OAASA,EAKd3nD,KAAKs1C,OAASt1C,KAAK2nD,OAAO7Q,iBAAiBC,WAuF/C,MAvEA2Q,GAAezoD,UAAU2oD,yBAA2B,SAAUpE,EAASqE,EAAYC,GAC/E,GAAIplC,GAAQ1iB,KACR+nD,KACAC,IAYJ,OAXAxE,GAAQ72C,QAAQ,SAAUkqC,GAClBA,EAAO9vC,OAAS+5C,GAAOW,eACvB/+B,EAAM4yB,OAAO5K,oBAAoBmM,EAAOkK,QAASlK,EAAOG,eACxDgR,EAAMrnD,KAAKmgD,GAAOY,iBAAiB7K,EAAOhL,UAAWgL,EAAOG,iBAGpEh3C,KAAKioD,uBAAuBF,EAAQjH,GAAOO,cAAemC,EAASsE,EAAoBD,GACvF7nD,KAAKioD,uBAAuBF,EAAQjH,GAAOK,YAAaqC,EAASsE,EAAoBD,GACrF7nD,KAAKioD,uBAAuBF,EAAQjH,GAAOa,YAAaqG,EAAOF,EAAoBD,GACnF7nD,KAAKioD,uBAAuBF,EAAQjH,GAAOW,cAAe+B,EAASsE,EAAoBD,GACvF7nD,KAAKioD,uBAAuBF,EAAQjH,GAAOG,MAAOuC,EAASsE,EAAoBD,GACxEE,GAYXL,EAAezoD,UAAUgpD,uBAAyB,SAAUF,EAAQrf,EAAW8a,EAAS0E,EAAeL,GACnG,GAAInlC,GAAQ1iB,KACRmoD,EAAkB3E,EAAQj6B,OAAO,SAAUstB,GAAU,MAAOA,GAAO9vC,OAAS2hC,GAChFyf,GAAgB7mB,KAAKthC,KAAKooD,gBAAgB1oD,KAAKM,OAC/CmoD,EAAgBx7C,QAAQ,SAAUkqC,GAC9B,GAAIwR,GAAqB3lC,EAAM4lC,yBAAyBzR,EAAQgR,EAChEK,GAAcv7C,QAAQ,SAAU47C,GACxBA,EAAa5R,WAAWE,EAAO9vC,OAC/BghD,EAAOpnD,KAAK4nD,EAAa3R,YAAYyR,EAAoB3lC,EAAMilC,cAW/ED,EAAezoD,UAAUqpD,yBAA2B,SAAUzR,EAAQgR,GAClE,MAAoB,UAAhBhR,EAAO9vC,MAAoC,kBAAhB8vC,EAAO9vC,KAC3B8vC,GAGPA,EAAOZ,SAAW4R,EAAW7b,wBAE7B6K,EAAOhL,UAAWgL,EAAOG,aAAch3C,KAAKs1C,QACrCuB,IASf6Q,EAAezoD,UAAUmpD,gBAAkB,SAAU/jD,EAAGwC,GACpD,GAAmB,MAAfxC,EAAEwnC,WAAoC,MAAfhlC,EAAEglC,UACzB,KAAMpkB,GAAKsF,eAAe,qCAI9B,OAAO/sB,MAAKs1C,OAAO7K,QAFJ,GAAIhO,IAAUp4B,EAAEwnC,UAAWxnC,EAAE2yC,cAC7B,GAAIva,IAAU51B,EAAEglC,UAAWhlC,EAAEmwC,gBAGzC0Q,KA4BPc,GAAsB,WAMtB,QAASA,GAAKb,EAAQc,GAClBzoD,KAAK2nD,OAASA,EACd3nD,KAAK0oD,sBACL,IAAIj2B,GAASzyB,KAAK2nD,OAAO7Q,iBACrB6R,EAAc,GAAI/G,IAAcnvB,EAAOskB,YACvCxtB,EAASkJ,EAAOm2B,eAKpB5oD,MAAK6oD,WAAa,GAAIpF,IAAcl6B,EACpC,IAAIu/B,GAAqBL,EAAiB7H,iBACtCmI,EAAoBN,EAAiB/H,gBAErCD,EAAakI,EAAY1G,eAAevmB,GAAaC,WAAYmtB,EAAmB7I,UAAW,MAC/FK,EAAY/2B,EAAO04B,eAAevmB,GAAaC,WAAYotB,EAAkB9I,UAAW,MACxFmG,EAAiB,GAAI1G,IAAUe,EAAYqI,EAAmBjJ,qBAAsB8I,EAAYxG,gBAChGkD,EAAgB,GAAI3F,IAAUY,EAAWyI,EAAkBlJ,qBAAsBt2B,EAAO44B,eAK5FniD,MAAKgjD,WAAa,GAAI9C,IAAUmF,EAAee,GAK/CpmD,KAAKgpD,gBAAkB,GAAItB,IAAe1nD,KAAK2nD,QAqInD,MAhIAa,GAAKvpD,UAAUgqD,SAAW,WACtB,MAAOjpD,MAAK2nD,QAKhBa,EAAKvpD,UAAU2hD,eAAiB,WAC5B,MAAO5gD,MAAKgjD,WAAWpC,iBAAiBX,WAM5CuI,EAAKvpD,UAAUiqD,uBAAyB,SAAUrmB,GAC9C,GAAIsmB,GAAQnpD,KAAKgjD,WAAWnC,uBAC5B,OAAIsI,KAGInpD,KAAK2nD,OAAO7Q,iBAAiBsS,iBAC3BvmB,EAAKhR,YAAcs3B,EAAMvd,kBAAkB/I,EAAKgB,YAAYhS,WACvDs3B,EAAMrd,SAASjJ,GAGvB,MAKX2lB,EAAKvpD,UAAU4yB,QAAU,WACrB,MAA2C,KAApC7xB,KAAK0oD,oBAAoBlnD,QAKpCgnD,EAAKvpD,UAAUoqD,qBAAuB,SAAUrT,GAC5Ch2C,KAAK0oD,oBAAoB/nD,KAAKq1C,IAOlCwS,EAAKvpD,UAAUqqD,wBAA0B,SAAUtT,EAAmBuT,GAClE,GAAIC,KACJ,IAAID,EAAa,CACb9hC,EAAKmF,OAA4B,MAArBopB,EAA2B,kDACvC,IAAIyT,GAASzpD,KAAK2nD,OAAO9kB,IACzB7iC,MAAK0oD,oBAAoB/7C,QAAQ,SAAU47C,GACvCgB,EAAoCA,CACpC,IAAIG,GAAanB,EAAalR,kBAAkBkS,EAAaE,EACzDC,IACAF,EAAa7oD,KAAK+oD,KAI9B,GAAI1T,EAAmB,CAEnB,IAAK,GADDrzC,MACK5E,EAAI,EAAGA,EAAIiC,KAAK0oD,oBAAoBlnD,SAAUzD,EAAG,CACtD,GAAI4rD,GAAW3pD,KAAK0oD,oBAAoB3qD,EACxC,IAAK4rD,EAASrS,QAAQtB,IAGjB,GAAIA,EAAkBuB,iBAAkB,CAEzC50C,EAAYA,EAAUoD,OAAO/F,KAAK0oD,oBAAoB7lD,MAAM9E,EAAI,GAChE,YALA4E,GAAUhC,KAAKgpD,GAQvB3pD,KAAK0oD,oBAAsB/lD,MAG3B3C,MAAK0oD,sBAET,OAAOc,IAUXhB,EAAKvpD,UAAU2kD,eAAiB,SAAUE,EAAWC,EAAawD,GAC1DzD,EAAU/8C,OAAS0tC,GAAcgL,OACJ,OAA7BqE,EAAU98C,OAAO+1C,UACjBt1B,EAAKmF,OAAO5sB,KAAKgjD,WAAWnC,wBAAyB,6DACrDp5B,EAAKmF,OAAO5sB,KAAKgjD,WAAWrC,uBAAwB,2DAExD,IAAIkD,GAAe7jD,KAAKgjD,WACpBz4C,EAASvK,KAAK6oD,WAAWjF,eAAeC,EAAcC,EAAWC,EAAawD,EAKlF,OAJAvnD,MAAK6oD,WAAWlF,cAAcp5C,EAAOg5C,WACrC97B,EAAKmF,OAAOriB,EAAOg5C,UAAU3C,iBAAiBf,uBACzCgE,EAAajD,iBAAiBf,qBAAsB,2DACzD7/C,KAAKgjD,WAAaz4C,EAAOg5C,UAClBvjD,KAAK4pD,0BAA0Br/C,EAAOi5C,QAASj5C,EAAOg5C,UAAU7C,gBAAgBT,UAAW,OAMtGuI,EAAKvpD,UAAU4qD,iBAAmB,SAAUtB,GACxC,GAAIjI,GAAYtgD,KAAKgjD,WAAWtC,gBAC5BoJ,IACJ,KAAKxJ,EAAUL,UAAU/jB,aAAc,CACnBokB,EAAUL,UAChB5T,aAAavP,GAAgB,SAAUr3B,EAAKw2B,GAClD6tB,EAAenpD,KAAKmgD,GAAOI,iBAAiBz7C,EAAKw2B,MAMzD,MAHIqkB,GAAUT,sBACViK,EAAenpD,KAAKmgD,GAAOE,YAAYV,EAAUL,YAE9CjgD,KAAK4pD,0BAA0BE,EAAgBxJ,EAAUL,UAAWsI,IAS/EC,EAAKvpD,UAAU2qD,0BAA4B,SAAUpG,EAASqE,EAAY7R,GAItE,MAAOh2C,MAAKgpD,gBAAgBpB,yBAAyBpE,EAASqE,EAH1C7R,GACbA,GACDh2C,KAAK0oD,sBAGRF,KA6BPuB,GAA2B,WAC3B,QAASA,KAUL/pD,KAAKgqD,UAwMT,MAtMAxrD,QAAOC,eAAesrD,EAAW,0BAC7BnrD,IAAK,WAED,MADA6oB,GAAKmF,OAAO+vB,GAA0B,oCAC/BA,IAEX1oC,IAAK,SAAUxR,GACXglB,EAAKmF,QAAQ+vB,GAA0B,mDACvCA,GAA2Bl6C,GAE/B9D,YAAY,EACZD,cAAc,IAKlBqrD,EAAU9qD,UAAU4yB,QAAU,WAC1B,MAAOpK,GAAKoK,QAAQ7xB,KAAKgqD,SAS7BD,EAAU9qD,UAAU2kD,eAAiB,SAAUE,EAAWC,EAAakG,GACnE,GAAIlN,GAAU+G,EAAU98C,OAAO+1C,OAC/B,IAAgB,OAAZA,EAAkB,CAClB,GAAImN,GAAOziC,EAAK8J,QAAQvxB,KAAKgqD,OAAQjN,EAErC,OADAt1B,GAAKmF,OAAe,MAARs9B,EAAc,gDACnBA,EAAKtG,eAAeE,EAAWC,EAAakG,GAGnD,GAAIE,KAIJ,OAHA1iC,GAAK9a,QAAQ3M,KAAKgqD,OAAQ,SAAUvkD,EAAKykD,GACrCC,EAAWA,EAASpkD,OAAOmkD,EAAKtG,eAAeE,EAAWC,EAAakG,MAEpEE,GAafJ,EAAU9qD,UAAUoqD,qBAAuB,SAAUzmB,EAAOoT,EAAmB+N,EAAawB,EAAa6E,GACrG,GAAIrN,GAAUna,EAAMoY,kBAChBkP,EAAOziC,EAAK8J,QAAQvxB,KAAKgqD,OAAQjN,EACrC,KAAKmN,EAAM,CAEP,GAAIrC,GAAa9D,EAAY6B,uBAAuBwE,EAAsB7E,EAAc,MACpF8E,GAAqB,CACrBxC,GACAwC,GAAqB,EAEhB9E,YAAuB7pB,KAC5BmsB,EAAa9D,EAAY2B,0BAA0BH,GACnD8E,GAAqB,IAGrBxC,EAAansB,GAAaC,WAC1B0uB,GAAqB,EAEzB,IAAI9G,GAAY,GAAIrD,IAAU,GAAIR,IACZmI,EAAawC,GAAoB,GAAQ,GAAI3K,IAC7C6F,EAAc6E,GAAqB,GACzDF,GAAO,GAAI1B,IAAK5lB,EAAO2gB,GACvBvjD,KAAKgqD,OAAOjN,GAAWmN,EAI3B,MADAA,GAAKb,qBAAqBrT,GACnBkU,EAAKL,iBAAiB7T,IAajC+T,EAAU9qD,UAAUqqD,wBAA0B,SAAU1mB,EAAOoT,EAAmBuT,GAC9E,GAAIxM,GAAUna,EAAMoY,kBAChBsP,KACAd,KACAe,EAAkBvqD,KAAKwqD,iBAC3B,IAAgB,YAAZzN,EAAuB,CAEvB,GAAInB,GAAS57C,IACbynB,GAAK9a,QAAQ3M,KAAKgqD,OAAQ,SAAUS,EAAaP,GAC7CV,EAAeA,EAAazjD,OAAOmkD,EAAKZ,wBAAwBtT,EAAmBuT,IAC/EW,EAAKr4B,kBACE+pB,GAAOoO,OAAOS,GAEhBP,EACAjB,WACAnS,iBACAsS,gBACDkB,EAAQ3pD,KAAKupD,EAAKjB,mBAK7B,CAED,GAAIiB,GAAOziC,EAAK8J,QAAQvxB,KAAKgqD,OAAQjN,EACjCmN,KACAV,EAAeA,EAAazjD,OAAOmkD,EAAKZ,wBAAwBtT,EAAmBuT,IAC/EW,EAAKr4B,kBACE7xB,MAAKgqD,OAAOjN,GAEdmN,EACAjB,WACAnS,iBACAsS,gBACDkB,EAAQ3pD,KAAKupD,EAAKjB,cASlC,MAJIsB,KAAoBvqD,KAAKwqD,mBAEzBF,EAAQ3pD,KAAK,GAAIopD,GAAUvV,uBAAuB5R,EAAMoV,KAAMpV,EAAMC,QAE/DynB,QAASA,EAASvC,OAAQyB,IAKvCO,EAAU9qD,UAAUyrD,cAAgB,WAChC,GAAIhoC,GAAQ1iB,IAEZ,OADaxB,QAAOwN,KAAKhM,KAAKgqD,QAAQ7lC,IAAI,SAAU1e,GAAO,MAAOid,GAAMsnC,OAAOvkD,KACjE8jB,OAAO,SAAU2gC,GAC3B,OAAQA,EACHjB,WACAnS,iBACAsS,kBAQbW,EAAU9qD,UAAUiqD,uBAAyB,SAAUrmB,GACnD,GAAI0iB,GAAc,IAIlB,OAHA99B,GAAK9a,QAAQ3M,KAAKgqD,OAAQ,SAAUvkD,EAAKykD,GACrC3E,EAAcA,GAAe2E,EAAKhB,uBAAuBrmB,KAEtD0iB,GAMXwE,EAAU9qD,UAAU0rD,aAAe,SAAU/nB,GAEzC,GADaA,EAAMkU,iBACRsS,eACP,MAAOppD,MAAK4qD,iBAGZ,IAAI7N,GAAUna,EAAMoY,iBACpB,OAAOvzB,GAAK8J,QAAQvxB,KAAKgqD,OAAQjN,IAOzCgN,EAAU9qD,UAAU4rD,mBAAqB,SAAUjoB,GAC/C,MAAmC,OAA5B5iC,KAAK2qD,aAAa/nB,IAK7BmnB,EAAU9qD,UAAUurD,gBAAkB,WAClC,MAAiC,OAA1BxqD,KAAK4qD,mBAKhBb,EAAU9qD,UAAU2rD,gBAAkB,WAOlC,MANmBnjC,GAAK0K,UAAUnyB,KAAKgqD,OAAQ,SAAUE,GACrD,MAAOA,GACFjB,WACAnS,iBACAsS,kBAEc,MAEpBW,KA2BPe,GAA+B,WAC/B,QAASA,GAAcC,GACnB/qD,KAAK+qD,WAAaA,EAkLtB,MA3KAD,GAAc7rD,UAAU+rD,SAAW,SAAUnoB,EAAMyH,GAC/C,GAAIzH,EAAKhR,UACL,MAAO,IAAIi5B,GAAc,GAAInN,IAAcrT,GAG3C,IAAI2gB,GAAWjrD,KAAK+qD,WAAW9M,yBAAyBpb,EACxD,IAAgB,MAAZooB,EAAkB,CAClB,GAAIC,GAAeD,EAASpoB,KACxBtjC,EAAQ0rD,EAAS1rD,KAGrB,OADAA,GAAQA,EAAM2sC,YADK3I,GAAKgB,aAAa2mB,EAAcroB,GACXyH,GACjC,GAAIwgB,GAAc9qD,KAAK+qD,WAAW92C,IAAIi3C,EAAc3rD,IAK3D,MAAO,IAAIurD,GADQ9qD,KAAK+qD,WAAW3M,QAAQvb,EAD7B,GAAI8a,IAAcrT,MAW5CwgB,EAAc7rD,UAAUksD,UAAY,SAAUtoB,EAAMuoB,GAChD,GAAIC,GAAWrrD,IAIf,OAHAynB,GAAK9a,QAAQy+C,EAAS,SAAU3P,EAAUnR,GACtC+gB,EAAWA,EAASL,SAASnoB,EAAKuB,MAAMqX,GAAWnR,KAEhD+gB,GASXP,EAAc7rD,UAAUqsD,YAAc,SAAUzoB,GAC5C,MAAIA,GAAKhR,UACEi5B,EAAc36C,MAId,GAAI26C,GADQ9qD,KAAK+qD,WAAW3M,QAAQvb,EAAM8a,GAAcxtC,SAWvE26C,EAAc7rD,UAAUssD,iBAAmB,SAAU1oB,GACjD,MAAqC,OAA9B7iC,KAAKwrD,gBAAgB3oB,IAShCioB,EAAc7rD,UAAUusD,gBAAkB,SAAU3oB,GAChD,GAAIooB,GAAWjrD,KAAK+qD,WAAW9M,yBAAyBpb,EACxD,OAAgB,OAAZooB,EACOjrD,KAAK+qD,WACPnsD,IAAIqsD,EAASpoB,MACbiJ,SAASvI,GAAKgB,aAAa0mB,EAASpoB,KAAMA,IAGxC,MAQfioB,EAAc7rD,UAAUwsD,oBAAsB,WAC1C,GAAItxC,MACAmwB,EAAOtqC,KAAK+qD,WAAWxrD,KAgB3B,OAfY,OAAR+qC,EAEKA,EAAKpO,cACNoO,EAAK+B,aAAavP,GAAgB,SAAU+O,EAAW5P,GACnD9hB,EAASxZ,KAAK,GAAI87B,IAAUoP,EAAW5P,MAK/Cj8B,KAAK+qD,WAAW5wC,SAASo0B,iBAAiB,SAAU1C,EAAWwF,GACpC,MAAnBA,EAAU9xC,OACV4a,EAASxZ,KAAK,GAAI87B,IAAUoP,EAAWwF,EAAU9xC,UAItD4a,GAMX2wC,EAAc7rD,UAAUysD,mBAAqB,SAAU7oB,GACnD,GAAIA,EAAKhR,UACL,MAAO7xB,KAGP,IAAI2rD,GAAgB3rD,KAAKwrD,gBAAgB3oB,EACzC,OACW,IAAIioB,GADM,MAAjBa,EACyB,GAAIhO,IAAcgO,GAGlB3rD,KAAK+qD,WAAWtN,QAAQ5a,KAQ7DioB,EAAc7rD,UAAU4yB,QAAU,WAC9B,MAAO7xB,MAAK+qD,WAAWl5B,WAQ3Bi5B,EAAc7rD,UAAUY,MAAQ,SAAUyqC,GACtC,MAAOwgB,GAAcc,mBAAmBroB,GAAKpzB,MAAOnQ,KAAK+qD,WAAYzgB,IAKzEwgB,EAAc36C,MAAQ,GAAI26C,GAAc,GAAInN,IAAc,OAQ1DmN,EAAcc,mBAAqB,SAAUrnB,EAAcsnB,EAAWvhB,GAClE,GAAuB,MAAnBuhB,EAAUtsD,MAEV,MAAO+qC,GAAK4B,YAAY3H,EAAcsnB,EAAUtsD,MAGhD,IAAIusD,GAAkB,IAgBtB,OAfAD,GAAU1xC,SAASo0B,iBAAiB,SAAUkN,EAAUpK,GACnC,cAAboK,GAGAh0B,EAAKmF,OAA2B,OAApBykB,EAAU9xC,MAAgB,6CACtCusD,EAAkBza,EAAU9xC,OAG5B+qC,EAAOwgB,EAAcc,mBAAmBrnB,EAAaH,MAAMqX,GAAWpK,EAAW/G,KAIpFA,EAAKwB,SAASvH,GAAc1S,WAAiC,OAApBi6B,IAC1CxhB,EAAOA,EAAK4B,YAAY3H,EAAaH,MAAM,aAAc0nB,IAEtDxhB,GAGRwgB,KAyBPiB,GAA2B,WAC3B,QAASA,KAQL/rD,KAAKgsD,eAAiBlB,GAAc36C,MASpCnQ,KAAKisD,cACLjsD,KAAKksD,cAAgB,EAudzB,MA/cAH,GAAU9sD,UAAUktD,YAAc,SAAUtpB,GACxC,MAAO,IAAIupB,IAAavpB,EAAM7iC,OAUlC+rD,EAAU9sD,UAAUotD,aAAe,SAAUxpB,EAAMmS,EAAMsX,EAASC,GAC9D9kC,EAAKmF,OAAO0/B,EAAUtsD,KAAKksD,aAAc,oDACzB7rD,KAAZksD,IACAA,GAAU,GAEdvsD,KAAKisD,WAAWtrD,MACZkiC,KAAMA,EACNmS,KAAMA,EACNsX,QAASA,EACTC,QAASA,IAETA,IACAvsD,KAAKgsD,eAAiBhsD,KAAKgsD,eAAehB,SAASnoB,EAAMmS,IAE7Dh1C,KAAKksD,aAAeI,GASxBP,EAAU9sD,UAAUutD,SAAW,SAAU3pB,EAAM4jB,EAAiB6F,GAC5D7kC,EAAKmF,OAAO0/B,EAAUtsD,KAAKksD,aAAc,gDACzClsD,KAAKisD,WAAWtrD,MACZkiC,KAAMA,EACN1oB,SAAUssC,EACV6F,QAASA,EACTC,SAAS,IAEbvsD,KAAKgsD,eAAiBhsD,KAAKgsD,eAAeb,UAAUtoB,EAAM4jB,GAC1DzmD,KAAKksD,aAAeI,GAMxBP,EAAU9sD,UAAUwtD,SAAW,SAAUH,GACrC,IAAK,GAAIvuD,GAAI,EAAGA,EAAIiC,KAAKisD,WAAWzqD,OAAQzD,IAAK,CAC7C,GAAI2uD,GAAS1sD,KAAKisD,WAAWluD,EAC7B,IAAI2uD,EAAOJ,UAAYA,EACnB,MAAOI,GAGf,MAAO,OAUXX,EAAU9sD,UAAUqsD,YAAc,SAAUgB,GAKxC,GAAI5pC,GAAQ1iB,KACRszC,EAAMtzC,KAAKisD,WAAWjhD,UAAU,SAAU5L,GAC1C,MAAOA,GAAEktD,UAAYA,GAEzB7kC,GAAKmF,OAAO0mB,GAAO,EAAG,+CACtB,IAAIqZ,GAAgB3sD,KAAKisD,WAAW3Y,EACpCtzC,MAAKisD,WAAWjuC,OAAOs1B,EAAK,EAI5B,KAHA,GAAIsZ,GAAyBD,EAAcJ,QACvCM,GAAsC,EACtC9uD,EAAIiC,KAAKisD,WAAWzqD,OAAS,EAC1BorD,GAA0B7uD,GAAK,GAAG,CACrC,GAAI+uD,GAAe9sD,KAAKisD,WAAWluD,EAC/B+uD,GAAaP,UACTxuD,GAAKu1C,GACLtzC,KAAK+sD,oBAAoBD,EAAcH,EAAc9pB,MAErD+pB,GAAyB,EAEpBD,EAAc9pB,KAAKpc,SAASqmC,EAAajqB,QAE9CgqB,GAAsC,IAG9C9uD,IAEJ,GAAK6uD,EAGA,IAAIC,EAGL,MADA7sD,MAAKgtD,cACE,CAIP,IAAIL,EAAc3X,KACdh1C,KAAKgsD,eAAiBhsD,KAAKgsD,eAAeV,YAAYqB,EAAc9pB,UAEnE,CAEDpb,EAAK9a,QADUggD,EAAcxyC,SACN,SAAU0xB,GAC7BnpB,EAAMspC,eAAiBtpC,EAAMspC,eAAeV,YAAYqB,EAAc9pB,KAAKuB,MAAMyH,MAGzF,OAAO,EAlBP,OAAO,GA4BfkgB,EAAU9sD,UAAUguD,qBAAuB,SAAUpqB,GACjD,MAAO7iC,MAAKgsD,eAAeR,gBAAgB3oB,IAY/CkpB,EAAU9sD,UAAU2mD,uBAAyB,SAAUsH,EAAU3F,EAAqB4F,EAAmBC,GACrG,GAAKD,GAAsBC,EAqBtB,CACD,GAAI7I,GAAQvkD,KAAKgsD,eAAeN,mBAAmBwB,EACnD,KAAKE,GAAuB7I,EAAM1yB,UAC9B,MAAO01B,EAIP,IAAK6F,GACsB,MAAvB7F,GACChD,EAAMgH,iBAAiBhoB,GAAKpzB,OAG5B,CACD,GAAIoZ,GAAS,SAAU1Y,GACnB,OAASA,EAAM07C,SAAWa,MACpBD,KACIA,EAAkBx3B,QAAQ9kB,EAAMy7C,YACrCz7C,EAAMgyB,KAAKpc,SAASymC,IAAaA,EAASzmC,SAAS5V,EAAMgyB,QAE9DwqB,EAActB,EAAUuB,WAAWttD,KAAKisD,WAAY1iC,EAAQ2jC,GAC5DK,EAAehG,GAAuB7rB,GAAaC,UACvD,OAAO0xB,GAAYxtD,MAAM0tD,GAXzB,MAAO,MA9Bf,GAAI5B,GAAgB3rD,KAAKgsD,eAAeR,gBAAgB0B,EACxD,IAAqB,MAAjBvB,EACA,MAAOA,EAGP,IAAI6B,GAAWxtD,KAAKgsD,eAAeN,mBAAmBwB,EACtD,IAAIM,EAAS37B,UACT,MAAO01B,EAEN,IAA2B,MAAvBA,GACJiG,EAASjC,iBAAiBhoB,GAAKpzB,OAI/B,CACD,GAAIo9C,GAAehG,GAAuB7rB,GAAaC,UACvD,OAAO6xB,GAAS3tD,MAAM0tD,GAJtB,MAAO,OA0CvBxB,EAAU9sD,UAAUymD,0BAA4B,SAAUwH,EAAUO,GAChE,GAAIjI,GAAmB9pB,GAAaC,WAChC+xB,EAAc1tD,KAAKgsD,eAAeR,gBAAgB0B,EACtD,IAAIQ,EAOA,MANKA,GAAYxxB,cAEbwxB,EAAYrhB,aAAavP,GAAgB,SAAU+O,EAAWgS,GAC1D2H,EAAmBA,EAAiBrpB,qBAAqB0P,EAAWgS,KAGrE2H,CAEN,IAAIiI,EAAwB,CAG7B,GAAIE,GAAU3tD,KAAKgsD,eAAeN,mBAAmBwB,EAWrD,OAVAO,GAAuBphB,aAAavP,GAAgB,SAAU+O,EAAW5P,GACrE,GAAIqO,GAAOqjB,EACNjC,mBAAmB,GAAInoB,IAAKsI,IAC5BhsC,MAAMo8B,EACXupB,GAAmBA,EAAiBrpB,qBAAqB0P,EAAWvB,KAGxEqjB,EAAQlC,sBAAsB9+C,QAAQ,SAAUiwB,GAC5C4oB,EAAmBA,EAAiBrpB,qBAAqBS,EAAUv+B,KAAMu+B,EAAU0N,QAEhFkb,EASP,MAJYxlD,MAAKgsD,eAAeN,mBAAmBwB,GAC7CzB,sBAAsB9+C,QAAQ,SAAUiwB,GAC1C4oB,EAAmBA,EAAiBrpB,qBAAqBS,EAAUv+B,KAAMu+B,EAAU0N,QAEhFkb,GAuBfuG,EAAU9sD,UAAU8mD,mCAAqC,SAAUmH,EAAUxX,EAAWkY,EAAmBC,GACvGpmC,EAAKmF,OAAOghC,GAAqBC,EAAoB,4DACrD,IAAIhrB,GAAOqqB,EAAS9oB,MAAMsR,EAC1B,IAAI11C,KAAKgsD,eAAeT,iBAAiB1oB,GAGrC,MAAO,KAIP,IAAIirB,GAAa9tD,KAAKgsD,eAAeN,mBAAmB7oB,EACxD,OAAIirB,GAAWj8B,UAEJg8B,EAAmB/hB,SAAS4J,GAS5BoY,EAAWjuD,MAAMguD,EAAmB/hB,SAAS4J,KAahEqW,EAAU9sD,UAAUikD,kBAAoB,SAAUgK,EAAUzR,EAAUoS,GAClE,GAAIhrB,GAAOqqB,EAAS9oB,MAAMqX,GACtBkQ,EAAgB3rD,KAAKgsD,eAAeR,gBAAgB3oB,EACxD,IAAqB,MAAjB8oB,EACA,MAAOA,EAGP,IAAIkC,EAAmB7N,mBAAmBvE,GAAW,CAEjD,MADiBz7C,MAAKgsD,eAAeN,mBAAmB7oB,GACtChjC,MAAMguD,EAAmB5N,UAAUrU,kBAAkB6P,IAGvE,MAAO,OAYnBsQ,EAAU9sD,UAAUmmD,eAAiB,SAAUviB,GAC3C,MAAO7iC,MAAKgsD,eAAeR,gBAAgB3oB,IAc/CkpB,EAAU9sD,UAAUokD,iBAAmB,SAAU6J,EAAU/J,EAAoBrP,EAAW/lC,EAAOm0B,EAAS53B,GACtG,GAAIyjD,GACAxJ,EAAQvkD,KAAKgsD,eAAeN,mBAAmBwB,GAC/CvB,EAAgBpH,EAAMiH,gBAAgBjoB,GAAKpzB,MAC/C,IAAqB,MAAjBw7C,EACAoC,EAAYpC,MAEX,IAA0B,MAAtBxI,EAKL,QAJA4K,GAAYxJ,EAAM1kD,MAAMsjD,GAO5B,GADA4K,EAAYA,EAAU5gB,UAAU7iC,GAC3ByjD,EAAUl8B,WAAck8B,EAAU7xB,aAgBnC,QATA,KANA,GAAIknB,MACAte,EAAMx6B,EAAMyyB,aACZoV,EAAOjQ,EACL6rB,EAAU5d,uBAAuB2D,EAAWxpC,GAC5CyjD,EAAU7d,gBAAgB4D,EAAWxpC,GACvC8K,EAAO+8B,EAAKpE,UACT34B,GAAQguC,EAAM5hD,OAASuM,GACG,IAAzB+2B,EAAI1vB,EAAM0+B,IACVsP,EAAMziD,KAAKyU,GAEfA,EAAO+8B,EAAKpE,SAEhB,OAAOqV,IAYf2I,EAAU9sD,UAAU8tD,oBAAsB,SAAUiB,EAAanrB,GAC7D,MAAImrB,GAAYhZ,KACLgZ,EAAYnrB,KAAKpc,SAASoc,KAIxBpb,EAAKwK,QAAQ+7B,EAAY7zC,SAAU,SAAU0jC,EAAWhS,GAC7D,MAAOmiB,GAAYnrB,KAAKuB,MAAMyH,GAAWplB,SAASoc,MAQ9DkpB,EAAU9sD,UAAU+tD,WAAa,WAC7BhtD,KAAKgsD,eAAiBD,EAAUuB,WAAWttD,KAAKisD,WAAYF,EAAUkC,eAAgB1qB,GAAKpzB,OAEvFnQ,KAAKksD,aADLlsD,KAAKisD,WAAWzqD,OAAS,EACLxB,KAAKisD,WAAWjsD,KAAKisD,WAAWzqD,OAAS,GAAG8qD,SAG3C,GAU7BP,EAAUkC,eAAiB,SAAUp9C,GACjC,MAAOA,GAAM07C,SAYjBR,EAAUuB,WAAa,SAAUY,EAAQ3kC,EAAQ4kC,GAE7C,IAAK,GADDC,GAAgBtD,GAAc36C,MACzBpS,EAAI,EAAGA,EAAImwD,EAAO1sD,SAAUzD,EAAG,CACpC,GAAI8S,GAAQq9C,EAAOnwD,EAInB,IAAIwrB,EAAO1Y,GAAQ,CACf,GAAI81C,GAAY91C,EAAMgyB,KAClB0B,MAAe,EACnB,IAAI1zB,EAAMmkC,KACFmZ,EAAS1nC,SAASkgC,IAClBpiB,EAAehB,GAAKgB,aAAa4pB,EAAUxH,GAC3CyH,EAAgBA,EAAcpD,SAASzmB,EAAc1zB,EAAMmkC,OAEtD2R,EAAUlgC,SAAS0nC,KACxB5pB,EAAehB,GAAKgB,aAAaoiB,EAAWwH,GAC5CC,EAAgBA,EAAcpD,SAASznB,GAAKpzB,MAAOU,EAAMmkC,KAAKlJ,SAASvH,SAM1E,KAAI1zB,EAAMsJ,SAwBX,KAAMsN,GAAKsF,eAAe,6CAvB1B,IAAIohC,EAAS1nC,SAASkgC,GAClBpiB,EAAehB,GAAKgB,aAAa4pB,EAAUxH,GAC3CyH,EAAgBA,EAAcjD,UAAU5mB,EAAc1zB,EAAMsJ,cAE3D,IAAIwsC,EAAUlgC,SAAS0nC,GAExB,GADA5pB,EAAehB,GAAKgB,aAAaoiB,EAAWwH,GACxC5pB,EAAa1S,UACbu8B,EAAgBA,EAAcjD,UAAU5nB,GAAKpzB,MAAOU,EAAMsJ,cAEzD,CACD,GAAIiqB,GAAQ3c,EAAK8J,QAAQ1gB,EAAMsJ,SAAUoqB,EAAaV,WACtD,IAAIO,EAAO,CAEP,GAAIiqB,GAAWjqB,EAAM0H,SAASvH,EAAaR,WAC3CqqB,GAAgBA,EAAcpD,SAASznB,GAAKpzB,MAAOk+C,OAa3E,MAAOD,IAEJrC,KAQPK,GAA8B,WAK9B,QAASA,GAAavpB,EAAMgpB,GACxB7rD,KAAKsuD,UAAYzrB,EACjB7iC,KAAK+qD,WAAac,EA4FtB,MAhFAO,GAAantD,UAAU2mD,uBAAyB,SAAU2B,EAAqB4F,EAAmBC,GAC9F,MAAOptD,MAAK+qD,WAAWnF,uBAAuB5lD,KAAKsuD,UAAW/G,EAAqB4F,EAAmBC,IAS1GhB,EAAantD,UAAUymD,0BAA4B,SAAU+H,GACzD,MAAOztD,MAAK+qD,WAAWrF,0BAA0B1lD,KAAKsuD,UAAWb,IAqBrErB,EAAantD,UAAU8mD,mCAAqC,SAAUljB,EAAM+qB,EAAmBC,GAC3F,MAAO7tD,MAAK+qD,WAAWhF,mCAAmC/lD,KAAKsuD,UAAWzrB,EAAM+qB,EAAmBC,IAUvGzB,EAAantD,UAAUmmD,eAAiB,SAAUviB,GAC9C,MAAO7iC,MAAK+qD,WAAW3F,eAAeplD,KAAKsuD,UAAUlqB,MAAMvB,KAa/DupB,EAAantD,UAAUokD,iBAAmB,SAAUF,EAAoBrP,EAAW/lC,EAAOm0B,EAAS53B,GAC/F,MAAOtK,MAAK+qD,WAAW1H,iBAAiBrjD,KAAKsuD,UAAWnL,EAAoBrP,EAAW/lC,EAAOm0B,EAAS53B,IAU3G8hD,EAAantD,UAAUikD,kBAAoB,SAAUzH,EAAU8S,GAC3D,MAAOvuD,MAAK+qD,WAAW7H,kBAAkBljD,KAAKsuD,UAAW7S,EAAU8S,IAQvEnC,EAAantD,UAAUmlC,MAAQ,SAAUyH,GACrC,MAAO,IAAIugB,GAAapsD,KAAKsuD,UAAUlqB,MAAMyH,GAAY7rC,KAAK+qD,aAE3DqB,KAwCPoC,GAA0B,WAK1B,QAASA,GAASC,GACdzuD,KAAKyuD,gBAAkBA,EAMvBzuD,KAAK0uD,eAAiB/Q,GAAcxtC,MAMpCnQ,KAAK2uD,kBAAoB,GAAI5C,IAC7B/rD,KAAK4uD,kBACL5uD,KAAK6uD,kBA0nBT,MA/mBAL,GAASvvD,UAAU6vD,mBAAqB,SAAUjsB,EAAMksB,EAASzC,EAASC,GAGtE,MADAvsD,MAAK2uD,kBAAkBtC,aAAaxpB,EAAMksB,EAASzC,EAASC,GACvDA,EAIMvsD,KAAKgvD,4BAA4B,GAAI1P,IAAU1C,GAAgBK,KAAMpa,EAAMksB,QAW1FP,EAASvvD,UAAUgwD,eAAiB,SAAUpsB,EAAM4jB,EAAiB6F,GAEjEtsD,KAAK2uD,kBAAkBnC,SAAS3pB,EAAM4jB,EAAiB6F,EACvD,IAAI4C,GAAavR,GAAcC,WAAW6I,EAC1C,OAAOzmD,MAAKgvD,4BAA4B,GAAIxP,IAAM5C,GAAgBK,KAAMpa,EAAMqsB,KASlFV,EAASvvD,UAAUylD,aAAe,SAAU4H,EAAShP,OAClC,KAAXA,IAAqBA,GAAS,EAClC,IAAIzsC,GAAQ7Q,KAAK2uD,kBAAkBlC,SAASH,EAE5C,IADuBtsD,KAAK2uD,kBAAkBrD,YAAYgB,GAIrD,CACD,GAAI6C,GAAiBxR,GAAcxtC,KAUnC,OATkB,OAAdU,EAAMmkC,KAENma,EAAiBA,EAAel7C,IAAIsvB,GAAKpzB,OAAO,GAGhDsX,EAAK9a,QAAQkE,EAAMsJ,SAAU,SAAUogB,EAAY+P,GAC/C6kB,EAAiBA,EAAel7C,IAAI,GAAIsvB,IAAKhJ,GAAa+P,KAG3DtqC,KAAKgvD,4BAA4B,GAAI5R,IAAavsC,EAAMgyB,KAAMssB,EAAgB7R,IAbrF,UAuBRkR,EAASvvD,UAAUmwD,qBAAuB,SAAUvsB,EAAMksB,GACtD,MAAO/uD,MAAKgvD,4BAA4B,GAAI1P,IAAU1C,GAAgBM,OAAQra,EAAMksB,KASxFP,EAASvvD,UAAUowD,iBAAmB,SAAUxsB,EAAM4jB,GAClD,GAAIyI,GAAavR,GAAcC,WAAW6I,EAC1C,OAAOzmD,MAAKgvD,4BAA4B,GAAIxP,IAAM5C,GAAgBM,OAAQra,EAAMqsB,KAQpFV,EAASvvD,UAAUqwD,oBAAsB,SAAUzsB,GAC/C,MAAO7iC,MAAKgvD,4BAA4B,GAAI5P,IAAexC,GAAgBM,OAAQra,KAUvF2rB,EAASvvD,UAAUswD,0BAA4B,SAAU1sB,EAAMmS,EAAM7lC,GACjE,GAAIqgD,GAAWxvD,KAAKyvD,gBAAgBtgD,EACpC,IAAgB,MAAZqgD,EAAkB,CAClB,GAAIt1C,GAAIs0C,EAASkB,eAAeF,GAC5BG,EAAYz1C,EAAE2oB,KAAMka,EAAU7iC,EAAE6iC,QAChCxY,EAAehB,GAAKgB,aAAaorB,EAAW9sB,EAEhD,OAAO7iC,MAAK4vD,sBAAsBD,EADzB,GAAIrQ,IAAU1C,GAAgBO,qBAAqBJ,GAAUxY,EAAcyQ,IAKpF,UAWRwZ,EAASvvD,UAAU4wD,sBAAwB,SAAUhtB,EAAM4jB,EAAiBt3C,GACxE,GAAIqgD,GAAWxvD,KAAKyvD,gBAAgBtgD,EACpC,IAAIqgD,EAAU,CACV,GAAIt1C,GAAIs0C,EAASkB,eAAeF,GAC5BG,EAAYz1C,EAAE2oB,KAAMka,EAAU7iC,EAAE6iC,QAChCxY,EAAehB,GAAKgB,aAAaorB,EAAW9sB,GAC5CqsB,EAAavR,GAAcC,WAAW6I,EAE1C,OAAOzmD,MAAK4vD,sBAAsBD,EADzB,GAAInQ,IAAM5C,GAAgBO,qBAAqBJ,GAAUxY,EAAc2qB,IAKhF,UAURV,EAASvvD,UAAU6wD,0BAA4B,SAAUjtB,EAAM1zB,GAC3D,GAAIqgD,GAAWxvD,KAAKyvD,gBAAgBtgD,EACpC,IAAIqgD,EAAU,CACV,GAAIt1C,GAAIs0C,EAASkB,eAAeF,GAC5BG,EAAYz1C,EAAE2oB,KAAMka,EAAU7iC,EAAE6iC,QAChCxY,EAAehB,GAAKgB,aAAaorB,EAAW9sB,EAEhD,OAAO7iC,MAAK4vD,sBAAsBD,EADzB,GAAIvQ,IAAexC,GAAgBO,qBAAqBJ,GAAUxY,IAK3E,UAURiqB,EAASvvD,UAAUoqD,qBAAuB,SAAUzmB,EAAOoT,GACvD,GAAInT,GAAOD,EAAMC,KACb0iB,EAAc,KACdwK,GAA2B,CAG/B/vD,MAAK0uD,eAAe5P,cAAcjc,EAAM,SAAUmtB,EAAiBC,GAC/D,GAAI1rB,GAAehB,GAAKgB,aAAayrB,EAAiBntB,EACtD0iB,GAAcA,GAAe0K,EAAG/G,uBAAuB3kB,GACvDwrB,EACIA,GAA4BE,EAAGzF,mBAEvC,IAAI0F,GAAYlwD,KAAK0uD,eAAe9vD,IAAIikC,EACnCqtB,IAKDH,EACIA,GAA4BG,EAAU1F,kBAC1CjF,EAAcA,GAAe2K,EAAUhH,uBAAuB3lB,GAAKpzB,SANnE+/C,EAAY,GAAInG,IAChB/pD,KAAK0uD,eAAiB1uD,KAAK0uD,eAAez6C,IAAI4uB,EAAMqtB,GAOxD,IAAI9F,EACJ,IAAmB,MAAf7E,EACA6E,GAAsB,MAErB,CACDA,GAAsB,EACtB7E,EAAc7pB,GAAaC,UACb37B,MAAK0uD,eAAejR,QAAQ5a,GAClCsc,aAAa,SAAUtT,EAAWskB,GACtC,GAAInM,GAAgBmM,EAAejH,uBAAuB3lB,GAAKpzB,MAC3D6zC,KACAuB,EAAcA,EAAYppB,qBAAqB0P,EAAWmY,MAItE,GAAIoM,GAAoBF,EAAUrF,mBAAmBjoB,EACrD,KAAKwtB,IAAsBxtB,EAAMkU,iBAAiBsS,eAAgB,CAE9D,GAAIoG,GAAWhB,EAAS6B,cAAcztB,EACtCnb,GAAKmF,SAAS4iC,IAAYxvD,MAAK6uD,gBAAiB,yCAChD,IAAI1/C,GAAMq/C,EAAS8B,kBACnBtwD,MAAK6uD,eAAeW,GAAYrgD,EAEhCnP,KAAK4uD,eAAe,IAAMz/C,GAAOqgD,EAErC,GAAIzL,GAAc/jD,KAAK2uD,kBAAkBxC,YAAYtpB,GACjDklB,EAASmI,EAAU7G,qBAAqBzmB,EAAOoT,EAAmB+N,EAAawB,EAAa6E,EAChG,KAAKgG,IAAsBL,EAA0B,CAEjDhI,EAASA,EAAOhiD,OAAO/F,KAAKuwD,eAAe3tB,EADbstB,EAAUvF,aAAa/nB,KAGzD,MAAOmlB,IAaXyG,EAASvvD,UAAUqqD,wBAA0B,SAAU1mB,EAAOoT,EAAmBuT,GAC7E,GAAI7mC,GAAQ1iB,KAER6iC,EAAOD,EAAMC,KACb2tB,EAAiBxwD,KAAK0uD,eAAe9vD,IAAIikC,GACzC2mB,IAIJ,IAAIgH,IAC6B,YAA5B5tB,EAAMoY,mBACHwV,EAAe3F,mBAAmBjoB,IAAS,CAI/C,GAAI6tB,GAAmBD,EAAelH,wBAAwB1mB,EAAOoT,EAAmBuT,EACpFiH,GAAe3+B,YACf7xB,KAAK0uD,eAAiB1uD,KAAK0uD,eAAe7vB,OAAOgE,GAErD,IAAIynB,GAAUmG,EAAiBnG,OAC/Bd,GAAeiH,EAAiB1I,MAOhC,IAAI2I,IAAmB,IACnBpG,EAAQt/C,UAAU,SAAU43B,GACxB,MAAOA,GAAMkU,iBAAiBsS,iBAElCuH,EAAU3wD,KAAK0uD,eAAehQ,WAAW7b,EAAM,SAAU0B,EAAcqsB,GACvE,MAAOA,GAAgBpG,mBAE3B,IAAIkG,IAAoBC,EAAS,CAC7B,GAAIlT,GAAUz9C,KAAK0uD,eAAejR,QAAQ5a,EAG1C,KAAK4a,EAAQ5rB,UAIT,IAAK,GAFDg/B,GAAW7wD,KAAK8wD,gCAAgCrT,GAE3C1/C,EAAI,EAAGA,EAAI8yD,EAASrvD,SAAUzD,EAAG,CACtC,GAAImsD,GAAO2G,EAAS9yD,GAAIgzD,EAAW7G,EAAKjB,WACpCz/B,EAAWxpB,KAAKgxD,uBAAuB9G,EAC3ClqD,MAAKyuD,gBAAgBwC,eAAezC,EAAS0C,mBAAmBH,GAAW/wD,KAAKmxD,aAAaJ,GAAWvnC,EAAS4nC,OAAQ5nC,EAAS6f,aAU9I,IAAKsnB,GAAWrG,EAAQ9oD,OAAS,IAAM+nD,EAGnC,GAAImH,EAAiB,CAGjB1wD,KAAKyuD,gBAAgB4C,cAAc7C,EAAS0C,mBAAmBtuB,GAD9C,UAIjB0nB,GAAQ39C,QAAQ,SAAU2kD,GACtB,GAAIC,GAAc7uC,EAAMmsC,eAAeL,EAAS6B,cAAciB,GAC9D5uC,GAAM+rC,gBAAgB4C,cAAc7C,EAAS0C,mBAAmBI,GAAgBC,IAK5FvxD,MAAKwxD,YAAYlH,GAKrB,MAAOd,IAWXgF,EAASvvD,UAAU2mD,uBAAyB,SAAU/iB,EAAMsqB,GACxD,GACItB,GAAY7rD,KAAK2uD,kBACjBpJ,EAAcvlD,KAAK0uD,eAAehQ,WAAW7b,EAAM,SAAU2b,EAAW0R,GACxE,GAAI3rB,GAAehB,GAAKgB,aAAaia,EAAW3b,GAC5C0iB,EAAc2K,EAAUhH,uBAAuB3kB,EACnD,IAAIghB,EACA,MAAOA,IAGf,OAAOsG,GAAUjG,uBAAuB/iB,EAAM0iB,EAAa4H,GATnC,IAmB5BqB,EAASvvD,UAAU6xD,gCAAkC,SAAUrT,GAC3D,MAAOA,GAAQa,KAAK,SAAU/Z,EAAcktB,EAAqBC,GAC7D,GAAID,GAAuBA,EAAoBjH,kBAAmB,CAE9D,OADmBiH,EAAoB7G,mBAKvC,GAAI+G,KAOJ,OANIF,KACAE,EAAUF,EAAoB/G,iBAElCjjC,EAAK9a,QAAQ+kD,EAAU,SAAUjsD,EAAKmsD,GAClCD,EAAUA,EAAQ5rD,OAAO6rD,KAEtBD,KAQnBnD,EAASvvD,UAAUuyD,YAAc,SAAUK,GACvC,IAAK,GAAI5kD,GAAI,EAAGA,EAAI4kD,EAAQrwD,SAAUyL,EAAG,CACrC,GAAI6kD,GAAeD,EAAQ5kD,EAC3B,KAAK6kD,EAAahb,iBAAiBsS,eAAgB,CAE/C,GAAI2I,GAAkBvD,EAAS6B,cAAcyB,GACzCE,EAAkBhyD,KAAK6uD,eAAekD,SACnC/xD,MAAK6uD,eAAekD,SACpB/xD,MAAK4uD,eAAe,IAAMoD,MAU7CxD,EAAS0C,mBAAqB,SAAUtuB,GACpC,MAAIA,GAAMkU,iBAAiBsS,iBACtBxmB,EAAMkU,iBAAiBmb,YAIKrvB,EAAMkT,SAG5BlT,GAWf4rB,EAASvvD,UAAUsxD,eAAiB,SAAU3tB,EAAOsnB,GACjD,GAAIrnB,GAAOD,EAAMC,KACb1zB,EAAMnP,KAAKmxD,aAAavuB,GACxBpZ,EAAWxpB,KAAKgxD,uBAAuB9G,GACvCnC,EAAS/nD,KAAKyuD,gBAAgBwC,eAAezC,EAAS0C,mBAAmBtuB,GAAQzzB,EAAKqa,EAAS4nC,OAAQ5nC,EAAS6f,YAChHoU,EAAUz9C,KAAK0uD,eAAejR,QAAQ5a,EAG1C,IAAI1zB,EACAsY,EAAKmF,QAAQ6wB,EAAQl+C,MAAMirD,kBAAmB,yDAsB9C,KAAK,GAlBD0H,GAAgBzU,EAAQa,KAAK,SAAU/Z,EAAcktB,EAAqBC,GAC1E,IAAKntB,EAAa1S,WACd4/B,GACAA,EAAoBjH,kBACpB,OAAQiH,EAAoB7G,kBAAkB3B,WAI9C,IAAIkJ,KAOJ,OANIV,KACAU,EAAYA,EAAUpsD,OAAO0rD,EAAoB/G,gBAAgBvmC,IAAI,SAAU+lC,GAAQ,MAAOA,GAAKjB,eAEvGxhC,EAAK9a,QAAQ+kD,EAAU,SAAUjsD,EAAK2sD,GAClCD,EAAYA,EAAUpsD,OAAOqsD,KAE1BD,IAGNp0D,EAAI,EAAGA,EAAIm0D,EAAc1wD,SAAUzD,EAAG,CAC3C,GAAIs0D,GAAcH,EAAcn0D,EAChCiC,MAAKyuD,gBAAgB4C,cAAc7C,EAAS0C,mBAAmBmB,GAAcryD,KAAKmxD,aAAakB,IAGvG,MAAOtK,IAQXyG,EAASvvD,UAAU+xD,uBAAyB,SAAU9G,GAClD,GAAIxnC,GAAQ1iB,KACR4iC,EAAQsnB,EAAKjB,WACb95C,EAAMnP,KAAKmxD,aAAavuB,EAC5B,QACIwuB,OAAQ,WAEJ,OADYlH,EAAKtJ,kBAAoBllB,GAAaC,YACrC8Q,QAEjBpD,WAAY,SAAUipB,GAClB,GAAe,OAAXA,EACA,MAAInjD,GACOuT,EAAMotC,0BAA0BltB,EAAMC,KAAM1zB,GAG5CuT,EAAM4sC,oBAAoB1sB,EAAMC,KAM3C,IAAI0vB,GAAW5vB,EAAmB2vB,EAAQ1vB,EAC1C,OAAOlgB,GAAM4mC,wBAAwB1mB,EACf,KAAM2vB,MAW5C/D,EAAS6B,cAAgB,SAAUztB,GAC/B,MAAOA,GAAMC,KAAKh+B,WAAa,IAAM+9B,EAAMoY,mBAQ/CwT,EAASkB,eAAiB,SAAUF,GAChC,GAAIgD,GAAahD,EAAS75B,QAAQ,IAElC,OADAlO,GAAKmF,QAAuB,IAAhB4lC,GAAqBA,EAAahD,EAAShuD,OAAS,EAAG,kBAE/Du7C,QAASyS,EAASltB,OAAOkwB,EAAa,GACtC3vB,KAAM,GAAIU,IAAKisB,EAASltB,OAAO,EAAGkwB,MAS1ChE,EAASvvD,UAAUwwD,gBAAkB,SAAUtgD,GAC3C,MAAOnP,MAAK4uD,eAAe,IAAMz/C,IAQrCq/C,EAASvvD,UAAUkyD,aAAe,SAAUvuB,GACxC,GAAI4sB,GAAWhB,EAAS6B,cAAcztB,EACtC,OAAOnb,GAAK8J,QAAQvxB,KAAK6uD,eAAgBW,IAO7ChB,EAAS8B,iBAAmB,WACxB,MAAO9B,GAASiE,iBAUpBjE,EAASvvD,UAAU2wD,sBAAwB,SAAUD,EAAW7L,GAC5D,GAAIoM,GAAYlwD,KAAK0uD,eAAe9vD,IAAI+wD,EAGxC,OAFAloC,GAAKmF,OAAOsjC,EAAW,wDAEhBA,EAAUtM,eAAeE,EADd9jD,KAAK2uD,kBAAkBxC,YAAYwD,GAEpC,OAmBrBnB,EAASvvD,UAAU+vD,4BAA8B,SAAUlL,GACvD,MAAO9jD,MAAK0yD,sBAAsB5O,EAAW9jD,KAAK0uD,eACjC,KAAM1uD,KAAK2uD,kBAAkBxC,YAAY5oB,GAAKpzB,SAYnEq+C,EAASvvD,UAAUyzD,sBAAwB,SAAU5O,EAAW6O,EAAepN,EAAaxB,GACxF,GAAID,EAAUjhB,KAAKhR,UACf,MAAO7xB,MAAK4yD,iCAAiC9O,EAAW6O,EAAepN,EAAaxB,EAGpF,IAAImM,GAAYyC,EAAc/zD,IAAI2kC,GAAKpzB,MAEpB,OAAfo1C,GAAoC,MAAb2K,IACvB3K,EAAc2K,EAAUhH,uBAAuB3lB,GAAKpzB,OAExD,IAAI43C,MACAlc,EAAYiY,EAAUjhB,KAAKgB,WAC3BgvB,EAAiB/O,EAAUtG,kBAAkB3R,GAC7CwF,EAAYshB,EAAcx4C,SAASvb,IAAIitC,EAC3C,IAAIwF,GAAawhB,EAAgB,CAK7B9K,EAASA,EAAOhiD,OAAO/F,KAAK0yD,sBAAsBG,EAAgBxhB,EAJ3CkU,EACjBA,EAAY3Z,kBAAkBC,GAC9B,KACiBkY,EAAY3f,MAAMyH,KAM7C,MAHIqkB,KACAnI,EAASA,EAAOhiD,OAAOmqD,EAAUtM,eAAeE,EAAWC,EAAawB,KAErEwC,GAafyG,EAASvvD,UAAU2zD,iCAAmC,SAAU9O,EAAW6O,EAAepN,EAAaxB,GACnG,GAAIrhC,GAAQ1iB,KACRkwD,EAAYyC,EAAc/zD,IAAI2kC,GAAKpzB,MAEpB,OAAfo1C,GAAoC,MAAb2K,IACvB3K,EAAc2K,EAAUhH,uBAAuB3lB,GAAKpzB,OAExD,IAAI43C,KAcJ,OAbA4K,GAAcx4C,SAASo0B,iBAAiB,SAAU1C,EAAWwF,GACzD,GAAIyhB,GAAmBvN,EACjBA,EAAY3Z,kBAAkBC,GAC9B,KACFknB,EAAmBhP,EAAY3f,MAAMyH,GACrCgnB,EAAiB/O,EAAUtG,kBAAkB3R,EAC7CgnB,KACA9K,EAASA,EAAOhiD,OAAO2c,EAAMkwC,iCAAiCC,EAAgBxhB,EAAWyhB,EAAkBC,OAG/G7C,IACAnI,EAASA,EAAOhiD,OAAOmqD,EAAUtM,eAAeE,EAAWC,EAAawB,KAErEwC,GAOXyG,EAASiE,cAAgB,EAClBjE,KAuBPwE,GAAgC,WAChC,QAASA,KACLhzD,KAAKizD,UAAYv3B,GAAaC,WAQlC,MANAq3B,GAAe/zD,UAAUghD,QAAU,SAAUpd,GACzC,MAAO7iC,MAAKizD,UAAUnnB,SAASjJ,IAEnCmwB,EAAe/zD,UAAUi0D,eAAiB,SAAUrwB,EAAMswB,GACtDnzD,KAAKizD,UAAYjzD,KAAKizD,UAAU/mB,YAAYrJ,EAAMswB,IAE/CH,KAqBPI,GAAmC,WAInC,QAASA,GAAkBC,GACvBrzD,KAAKqzD,KAAOA,EAsDhB,MAhDAD,GAAkBn0D,UAAUmqB,SAAW,SAAUkqC,GAC7C,MAAOtzD,MAAKqzD,KAAL,kBAAkCC,GAAchyD,KAAK,KAE5D,SAAUixD,GAGN,MAAIA,IAA8B,+BAAlBA,EAAS/pC,MACrB0B,EAAI,kEACG,MAGAnqB,QAAQkB,OAAOsxD,MAIlCa,EAAkBn0D,UAAUs0D,uBAAyB,SAAU/pC,GAG3DxpB,KAAKqzD,KAAL,8BAA8C7pC,IAElD4pC,EAAkBn0D,UAAUu0D,0BAA4B,SAAUhqC,GAC9DxpB,KAAKqzD,KAAL,iCAAiD7pC,IAErD4pC,EAAkBn0D,UAAUw0D,sBAAwB,WAChD,GAAIC,GAAe,0DACf1zD,KAAKqzD,KAAKh1D,KACV,gFAGAq1D,IADA,cAAgB1zD,MAAKqzD,KAAKtzC,QAEtB,uJAIC,kBAAoB/f,MAAKqzD,KAAKtzC,QAE/B,2JAMA,kKAIR5c,EAAKuwD,IAEFN,KAuBPO,GAAiC,WACjC,QAASA,KACL3zD,KAAK4zD,aAWT,MATAD,GAAgB10D,UAAU40D,iBAAmB,SAAUx1D,EAAMy1D,OAC1C,KAAXA,IAAqBA,EAAS,GAC7BrsC,EAAKhB,SAASzmB,KAAK4zD,UAAWv1D,KAC/B2B,KAAK4zD,UAAUv1D,GAAQ,GAC3B2B,KAAK4zD,UAAUv1D,IAASy1D,GAE5BH,EAAgB10D,UAAUL,IAAM,WAC5B,MAAO6oB,GAAKyB,SAASlpB,KAAK4zD,YAEvBD,KAkBPI,GAA8B,WAC9B,QAASA,MAkBT,MAhBAA,GAAaC,cAAgB,SAAU/sB,GACnC,GAAIgtB,GAAahtB,EAASpiC,UAI1B,OAHK7E,MAAKk0D,aAAaD,KACnBj0D,KAAKk0D,aAAaD,GAAc,GAAIN,KAEjC3zD,KAAKk0D,aAAaD,IAE7BF,EAAaI,oBAAsB,SAAUltB,EAAUmtB,GACnD,GAAIH,GAAahtB,EAASpiC,UAI1B,OAHK7E,MAAKq0D,WAAWJ,KACjBj0D,KAAKq0D,WAAWJ,GAAcG,KAE3Bp0D,KAAKq0D,WAAWJ,IAE3BF,EAAaG,gBACbH,EAAaM,cACNN,KAwBPO,GAA+B,WAC/B,QAASA,GAAcC,GACnBv0D,KAAKu0D,YAAcA,EACnBv0D,KAAKw0D,MAAQ,KAajB,MAXAF,GAAcr1D,UAAUL,IAAM,WAC1B,GAAI61D,GAAWz0D,KAAKu0D,YAAY31D,MAC5B81D,EAAQjtC,EAAKkK,MAAM8iC,EAOvB,OANIz0D,MAAKw0D,OACL/sC,EAAK9a,QAAQ3M,KAAKw0D,MAAO,SAAUplD,EAAM7P,GACrCm1D,EAAMtlD,GAAQslD,EAAMtlD,GAAQ7P,IAGpCS,KAAKw0D,MAAQC,EACNC,GAEJJ,KAqBPK,GAAuB,IACvBC,GAAuB,IAMvBC,GAA+B,WAK/B,QAASA,GAAcC,EAAYC,GAC/B/0D,KAAK+0D,QAAUA,EACf/0D,KAAKg1D,kBACLh1D,KAAKi1D,eAAiB,GAAIX,IAAcQ,EACxC,IAAIxxB,GAAUqxB,IACTC,GAAuBD,IAAwBnxD,KAAKqC,QACzDu9B,IAAsBpjC,KAAKk1D,aAAax1D,KAAKM,MAAOwD,KAAKgF,MAAM86B,IAsBnE,MApBAuxB,GAAc51D,UAAUk2D,YAAc,SAAU/lD,GAC5CpP,KAAKg1D,eAAe5lD,IAAQ,GAEhCylD,EAAc51D,UAAUi2D,aAAe,WACnC,GAAIxyC,GAAQ1iB,KACRo1D,EAAQp1D,KAAKi1D,eAAer2D,MAC5By2D,KACAC,GAAoB,CACxB7tC,GAAK9a,QAAQyoD,EAAO,SAAUhmD,EAAM7P,GAC5BA,EAAQ,GAAKkoB,EAAKhB,SAAS/D,EAAMsyC,eAAgB5lD,KACjDimD,EAAcjmD,GAAQ7P,EACtB+1D,GAAoB,KAGxBA,GACAt1D,KAAK+0D,QAAQQ,YAAYF,GAG7BjyB,GAAsBpjC,KAAKk1D,aAAax1D,KAAKM,MAAOwD,KAAKgF,MAAsB,EAAhBhF,KAAKqC,SAnChD,OAqCjBgvD,KAgCPW,GAA4B,WAC5B,QAASA,KAKLx1D,KAAKy1D,eAMLz1D,KAAK01D,gBAAkB,EA+E3B,MA1EAF,GAAWv2D,UAAU02D,YAAc,SAAUC,GAGzC,IAAK,GADDC,GAAW,KACN93D,EAAI,EAAGA,EAAI63D,EAAcp0D,OAAQzD,IAAK,CAC3C,GAAIk5C,GAAY2e,EAAc73D,GAC1B+3D,EAAY7e,EAAUf,SACT,QAAb2f,GAAsBC,EAAU/wB,OAAO8wB,EAAS3f,aAChDl2C,KAAKy1D,YAAY90D,KAAKk1D,GACtBA,EAAW,MAEE,OAAbA,IACAA,EAAW,GAAIE,IAAUD,IAE7BD,EAASva,IAAIrE,GAEb4e,GACA71D,KAAKy1D,YAAY90D,KAAKk1D,IAY9BL,EAAWv2D,UAAU+2D,kBAAoB,SAAUnzB,EAAM+yB,GACrD51D,KAAK21D,YAAYC,GACjB51D,KAAKi2D,oCAAoC,SAAUH,GAC/C,MAAOA,GAAU/wB,OAAOlC,MAYhC2yB,EAAWv2D,UAAUi3D,0BAA4B,SAAUC,EAAaP,GACpE51D,KAAK21D,YAAYC,GACjB51D,KAAKi2D,oCAAoC,SAAUH,GAC/C,MAAOA,GAAUrvC,SAAS0vC,IAAgBA,EAAY1vC,SAASqvC,MAOvEN,EAAWv2D,UAAUg3D,oCAAsC,SAAUlY,GACjE/9C,KAAK01D,iBAEL,KAAK,GADDU,IAAU,EACLr4D,EAAI,EAAGA,EAAIiC,KAAKy1D,YAAYj0D,OAAQzD,IAAK,CAC9C,GAAIs4D,GAAYr2D,KAAKy1D,YAAY13D,EACjC,IAAIs4D,EAAW,CAEPtY,EADYsY,EAAUngB,YAEtBl2C,KAAKy1D,YAAY13D,GAAGu4D,QACpBt2D,KAAKy1D,YAAY13D,GAAK,MAGtBq4D,GAAU,GAIlBA,IACAp2D,KAAKy1D,gBAETz1D,KAAK01D,mBAEFF,KAMPO,GAA2B,WAC3B,QAASA,GAAU/tB,GACfhoC,KAAKgoC,MAAQA,EAKbhoC,KAAKu2D,WA8BT,MAzBAR,GAAU92D,UAAUq8C,IAAM,SAAUrE,GAChCj3C,KAAKu2D,QAAQ51D,KAAKs2C,IAKtB8e,EAAU92D,UAAUq3D,MAAQ,WACxB,IAAK,GAAIv4D,GAAI,EAAGA,EAAIiC,KAAKu2D,QAAQ/0D,OAAQzD,IAAK,CAC1C,GAAIk5C,GAAYj3C,KAAKu2D,QAAQx4D,EAC7B,IAAkB,OAAdk5C,EAAoB,CACpBj3C,KAAKu2D,QAAQx4D,GAAK,IAClB,IAAIy4D,GAAUvf,EAAUZ,gBACpBzW,IACA1V,EAAI,UAAY+sB,EAAUpyC,YAE9Bq+B,GAAeszB,MAO3BT,EAAU92D,UAAUi3C,QAAU,WAC1B,MAAOl2C,MAAKgoC,OAET+tB,KAsBPU,GAA8B,WAI9B,QAASA,GAAaC,GAClB12D,KAAK02D,eAAiBA,EACtB12D,KAAK22D,cACLlvC,EAAKmF,OAAOhqB,MAAMkG,QAAQ4tD,IAAmBA,EAAel1D,OAAS,EAAG,8BA6C5E,MAtCAi1D,GAAax3D,UAAU23D,QAAU,SAAUluB,GAEvC,IAAK,GADD/I,MACKzoB,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCyoB,EAASzoB,EAAK,GAAKpX,UAAUoX,EAEjC,IAAItU,MAAMkG,QAAQ9I,KAAK22D,WAAWjuB,IAG9B,IAAK,GADDmuB,GAAY72D,KAAK22D,WAAWjuB,GAAW7lC,QAClC9E,EAAI,EAAGA,EAAI84D,EAAUr1D,OAAQzD,IAClC84D,EAAU94D,GAAGsE,SAASxC,MAAMg3D,EAAU94D,GAAGwgB,QAASohB,IAI9D82B,EAAax3D,UAAUimB,GAAK,SAAUwjB,EAAWrmC,EAAUkc,GACvDve,KAAK82D,mBAAmBpuB,GACxB1oC,KAAK22D,WAAWjuB,GAAa1oC,KAAK22D,WAAWjuB,OAC7C1oC,KAAK22D,WAAWjuB,GAAW/nC,MAAO0B,SAAUA,EAAUkc,QAASA,GAC/D,IAAI04B,GAAYj3C,KAAK+2D,gBAAgBruB,EACjCuO,IACA50C,EAASxC,MAAM0e,EAAS04B,IAGhCwf,EAAax3D,UAAUw6C,IAAM,SAAU/Q,EAAWrmC,EAAUkc,GACxDve,KAAK82D,mBAAmBpuB,EAExB,KAAK,GADDmuB,GAAY72D,KAAK22D,WAAWjuB,OACvB3qC,EAAI,EAAGA,EAAI84D,EAAUr1D,OAAQzD,IAClC,GAAI84D,EAAU94D,GAAGsE,WAAaA,KACxBkc,GAAWA,IAAYs4C,EAAU94D,GAAGwgB,SAEtC,WADAs4C,GAAU74C,OAAOjgB,EAAG,IAKhC04D,EAAax3D,UAAU63D,mBAAqB,SAAUpuB,GAClDjhB,EAAKmF,OAAO5sB,KAAK02D,eAAe7rD,KAAK,SAAUmsD,GAC3C,MAAOA,KAAOtuB,IACd,kBAAoBA,IAErB+tB,KAqBPQ,GAAmC,SAAUjkC,GAE7C,QAASikC,KACL,GACIC,GACAC,EAFAz0C,EAAQsQ,EAAO/0B,KAAK+B,MAAO,aAAeA,IAqC9C,OAlCwB,mBAAbsE,eAC8B,KAA9BA,SAASsX,uBACkB,KAAvBtX,SAAA,QAEP6yD,EAAmB,mBACnBD,EAAS,cAE6B,KAA1B5yD,SAAA,WACZ6yD,EAAmB,sBACnBD,EAAS,iBAE4B,KAAzB5yD,SAAA,UACZ6yD,EAAmB,qBACnBD,EAAS,gBAEgC,KAA7B5yD,SAAA,eACZ6yD,EAAmB,yBACnBD,EAAS,iBAOjBx0C,EAAM00C,UAAW,EACbD,GACA7yD,SAASsX,iBAAiBu7C,EAAkB,WACxC,GAAI5K,IAAWjoD,SAAS4yD,EACpB3K,KAAY7pC,EAAM00C,WAClB10C,EAAM00C,SAAW7K,EACjB7pC,EAAMk0C,QAAQ,UAAWrK,MAE9B,GAEA7pC,EAaX,MApDA8J,GAAQgH,UAAUyjC,EAAmBjkC,GAyCrCikC,EAAkB35B,YAAc,WAC5B,MAAO,IAAI25B,IAMfA,EAAkBh4D,UAAU83D,gBAAkB,SAAUruB,GAEpD,MADAjhB,GAAKmF,OAAqB,YAAd8b,EAAyB,uBAAyBA,IACtD1oC,KAAKo3D,WAEVH,GACTR,IA0BEY,GAA+B,SAAUrkC,GAEzC,QAASqkC,KACL,GAAI30C,GAAQsQ,EAAO/0B,KAAK+B,MAAO,YAAcA,IAsB7C,OArBA0iB,GAAM40C,SAAU,EAKM,mBAAXj0D,aAC4B,KAA5BA,OAAOuY,kBACb6L,EAAKsI,oBACN1sB,OAAOuY,iBAAiB,SAAU,WACzB8G,EAAM40C,UACP50C,EAAM40C,SAAU,EAChB50C,EAAMk0C,QAAQ,UAAU,MAE7B,GACHvzD,OAAOuY,iBAAiB,UAAW,WAC3B8G,EAAM40C,UACN50C,EAAM40C,SAAU,EAChB50C,EAAMk0C,QAAQ,UAAU,MAE7B,IAEAl0C,EAmBX,MA3CA8J,GAAQgH,UAAU6jC,EAAerkC,GA0BjCqkC,EAAc/5B,YAAc,WACxB,MAAO,IAAI+5B,IAMfA,EAAcp4D,UAAU83D,gBAAkB,SAAUruB,GAEhD,MADAjhB,GAAKmF,OAAqB,WAAd8b,EAAwB,uBAAyBA,IACrD1oC,KAAKs3D,UAKjBD,EAAcp4D,UAAUs4D,gBAAkB,WACtC,MAAOv3D,MAAKs3D,SAETD,GACTZ,IAsBEe,GAAgC,WAIhC,QAASA,GAAeC,GACpBz3D,KAAKy3D,WAAaA,EAClBz3D,KAAK03D,oBACL13D,KAAK23D,mBAAqB,EAC1B33D,KAAK43D,oBAAsB,EAC3B53D,KAAK63D,QAAU,KAiDnB,MA/CAL,GAAev4D,UAAU64D,WAAa,SAAUC,EAAa11D,GACzDrC,KAAK43D,mBAAqBG,EAC1B/3D,KAAK63D,QAAUx1D,EACXrC,KAAK43D,mBAAqB53D,KAAK23D,qBAC/B33D,KAAK63D,UACL73D,KAAK63D,QAAU,OAUvBL,EAAev4D,UAAU+4D,eAAiB,SAAUC,EAAY5sC,GAC5D,GAAI3I,GAAQ1iB,IACZA,MAAK03D,iBAAiBO,GAAc5sC,CAwBpC,KAvBA,GAsBI6sC,GAASl4D,KACNA,KAAK03D,iBAAiB13D,KAAK23D,qBAAqB,CAEnD,GAAgB,UAzBN,WACV,GAAIQ,GAAYD,EAAOR,iBAAiBQ,EAAOP,0BACxCO,GAAOR,iBAAiBQ,EAAOP,mBAQtC,KAAK,GAAI55D,GAAI,EAAGA,EAAIo6D,EAAU32D,SAAUzD,GAP1B,SAAUA,GAChBo6D,EAAUp6D,IACVmlC,GAAe,WACXxgB,EAAM+0C,WAAWU,EAAUp6D,OAK3BA,EAEZ,IAAIm6D,EAAOP,qBAAuBO,EAAON,mBAKrC,MAJIM,GAAOL,UACPK,EAAOL,UACPK,EAAOL,QAAU,MAEd,OAEXK,GAAOP,wBAMH,QAGLH,KAqBPY,GAAoC,aACpCC,GAAiC,UAoCjCC,GAAuC,WASvC,QAASA,GAAsBC,EAAQtxB,EAAUuxB,EAAoBC,GACjEz4D,KAAKu4D,OAASA,EACdv4D,KAAKinC,SAAWA,EAChBjnC,KAAKw4D,mBAAqBA,EAC1Bx4D,KAAKy4D,cAAgBA,EACrBz4D,KAAK04D,UAAY,EACjB14D,KAAK24D,cAAgB,EACrB34D,KAAK44D,gBAAiB,EACtB54D,KAAK64D,KAAO74B,EAAWu4B,GACvBv4D,KAAK84D,OAAS/E,GAAaC,cAAc/sB,GACzCjnC,KAAK+4D,MAAQ,SAAUtmC,GACnB,MAAOwU,GAAST,cAAcd,GAAcjT,IAsOpD,MA9NA6lC,GAAsBr5D,UAAU2R,KAAO,SAAUooD,EAAWC,GACxD,GAAIv2C,GAAQ1iB,IACZA,MAAKk5D,cAAgB,EACrBl5D,KAAKm5D,cAAgBF,EACrBj5D,KAAKo5D,gBAAkB,GAAI5B,IAAewB,GAC1Ch5D,KAAKq5D,WAAY,EACjBr5D,KAAKs5D,qBAAuBp3D,WAAW,WACnCwgB,EAAMm2C,KAAK,gCAEXn2C,EAAM62C,YACN72C,EAAM42C,qBAAuB,MAC9B91D,KAAKgF,MA9CS,MAgDjBi4B,EAAoB,WAChB,IAAI/d,EAAM22C,UAAV,CAGA32C,EAAM82C,gBAAkB,GAAIC,IAA2B,WAEnD,IAAK,GADD/2D,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAEzB,IAAIwiD,GAAUh3D,EAAK,GAAIi3D,EAAOj3D,EAAK,GAAIk3D,EAAOl3D,EAAK,EAEnD,IADAggB,EAAMm3C,wBAAwBn3D,GACzBggB,EAAM82C,gBAOX,GALI92C,EAAM42C,uBACNQ,aAAap3C,EAAM42C,sBACnB52C,EAAM42C,qBAAuB,MAEjC52C,EAAMk2C,gBAAiB,EAjGH,SAkGhBc,EACAh3C,EAAM/c,GAAKg0D,EACXj3C,EAAMq3C,SAAWH,MAEhB,IArGiB,UAqGbF,EAiBL,KAAM,IAAIp2D,OAAM,kCAAoCo2D,EAfhDC,IAGAj3C,EAAM82C,gBAAgBQ,cAAe,EAGrCt3C,EAAM02C,gBAAgBtB,WAAW6B,EAAM,WACnCj3C,EAAM62C,eAIV72C,EAAM62C,cAMf,WAEC,IAAK,GADD72D,MACKwU,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCxU,EAAKwU,GAAMpX,UAAUoX,EAEzB,IAAI+iD,GAAKv3D,EAAK,GAAI2oB,EAAO3oB,EAAK,EAC9BggB,GAAMm3C,wBAAwBn3D,GAC9BggB,EAAM02C,gBAAgBpB,eAAeiC,EAAI5uC,IAC1C,WACC3I,EAAM62C,aACP72C,EAAMq2C,MAGT,IAAImB,KACJA,GAAA,MAA2C,IAC3CA,EAAA,IAA4C12D,KAAKgF,MAAsB,IAAhBhF,KAAKqC,UACxD6c,EAAM82C,gBAAgBW,2BACtBD,EAAA,GAAiDx3C,EAAM82C,gBAAgBW,0BAC3ED,EAAA,EAp6RW,IAq6RPx3C,EAAM81C,qBACN0B,EAAA,EAAqCx3C,EAAM81C,oBAE3C91C,EAAM+1C,gBACNyB,EAAA,GAAgCx3C,EAAM+1C,gBAErChxC,EAAKwI,aACc,mBAAbnL,WACPA,SAASD,OACgC,IAAzCC,SAASD,KAAK8Q,QAz6RX,oBA06RHukC,EAAA,EA36RA,IA66RJ,IAAIE,GAAa13C,EAAMq2C,MAAMmB,EAC7Bx3C,GAAMm2C,KAAK,+BAAiCuB,GAC5C13C,EAAM82C,gBAAgBa,OAAOD,EAAY,kBAQjD9B,EAAsBr5D,UAAUq7D,MAAQ,WACpCt6D,KAAKw5D,gBAAgBe,cAAcv6D,KAAK2F,GAAI3F,KAAK+5D,UACjD/5D,KAAKw6D,uBAAuBx6D,KAAK2F,GAAI3F,KAAK+5D,WAK9CzB,EAAsBmC,WAAa,WAC/BnC,EAAsBoC,aAAc,GAKxCpC,EAAsBqC,cAAgB,WAClCrC,EAAsBsC,gBAAiB,GAG3CtC,EAAsBuC,YAAc,WAGhC,MAAQvC,GAAsBoC,cACxBpC,EAAsBsC,gBACA,mBAAbt2D,WACmB,MAA1BA,SAASE,gBACR+9B,MACAC,MACA/a,EAAKwI,aAKlBqoC,EAAsBr5D,UAAU67D,sBAAwB,aAKxDxC,EAAsBr5D,UAAU87D,UAAY,WACxC/6D,KAAKq5D,WAAY,EACbr5D,KAAKw5D,kBACLx5D,KAAKw5D,gBAAgBzoD,QACrB/Q,KAAKw5D,gBAAkB,MAGvBx5D,KAAKg7D,iBACL12D,SAASyyB,KAAKzb,YAAYtb,KAAKg7D,gBAC/Bh7D,KAAKg7D,eAAiB,MAEtBh7D,KAAKs5D,uBACLQ,aAAa95D,KAAKs5D,sBAClBt5D,KAAKs5D,qBAAuB,OAOpChB,EAAsBr5D,UAAUs6D,UAAY,WACnCv5D,KAAKq5D,YACNr5D,KAAK64D,KAAK,8BACV74D,KAAK+6D,YACD/6D,KAAKm5D,gBACLn5D,KAAKm5D,cAAcn5D,KAAK44D,gBACxB54D,KAAKm5D,cAAgB,QAQjCb,EAAsBr5D,UAAU8R,MAAQ,WAC/B/Q,KAAKq5D,YACNr5D,KAAK64D,KAAK,6BACV74D,KAAK+6D,cAQbzC,EAAsBr5D,UAAUg8D,KAAO,SAAU5vC,GAC7C,GAAI6vC,GAAUzzC,EAAKpV,UAAUgZ,EAC7BrrB,MAAK04D,WAAawC,EAAQ15D,OAC1BxB,KAAK84D,OAAOjF,iBAAiB,aAAcqH,EAAQ15D,OAQnD,KAAK,GAND25D,GAAa1zC,EAAK+H,aAAa0rC,GAG/Bz5B,EAAWF,EAAkB45B,EAzOlBC,MA4ONr9D,EAAI,EAAGA,EAAI0jC,EAASjgC,OAAQzD,IACjCiC,KAAKw5D,gBAAgB6B,eAAer7D,KAAKk5D,cAAez3B,EAASjgC,OAAQigC,EAAS1jC,IAClFiC,KAAKk5D,iBAUbZ,EAAsBr5D,UAAUu7D,uBAAyB,SAAU70D,EAAI21D,GACnE,IAAI7zC,EAAKwI,YAAT,CAEAjwB,KAAKg7D,eAAiB12D,SAASE,cAAc,SAC7C,IAAI01D,KACJA,GAAA,OAA2D,IAC3DA,EAAA,GAAwCv0D,EACxCu0D,EAAA,GAAwCoB,EACxCt7D,KAAKg7D,eAAetqD,IAAM1Q,KAAK+4D,MAAMmB,GACrCl6D,KAAKg7D,eAAezqD,MAAMC,QAAU,OACpClM,SAASyyB,KAAKtmB,YAAYzQ,KAAKg7D,kBAOnC1C,EAAsBr5D,UAAU46D,wBAA0B,SAAUn3D,GAEhE,GAAIi2D,GAAgBlxC,EAAKpV,UAAU3P,GAAMlB,MACzCxB,MAAK24D,eAAiBA,EACtB34D,KAAK84D,OAAOjF,iBAAiB,iBAAkB8E,IAE5CL,KAMPmB,GAA4C,WAO5C,QAASA,GAA2B8B,EAAWC,EAAavC,EAAcF,GAoBtE,GAnBA/4D,KAAKi5D,aAAeA,EACpBj5D,KAAK+4D,MAAQA,EAMb/4D,KAAKy7D,oBAAsB,GAAIpgB,IAE/Br7C,KAAK07D,eAML17D,KAAK27D,cAAgBn4D,KAAKgF,MAAsB,IAAhBhF,KAAKqC,UAGrC7F,KAAKg6D,cAAe,EACfvyC,EAAKwI,YAkCNjwB,KAAKu7D,UAAYA,EACjBv7D,KAAKw7D,YAAcA,MAnCA,CAKnBx7D,KAAKm6D,yBAA2B56B,IAChCl8B,OAAO+0D,GAAoCp4D,KAAKm6D,0BAA4BoB,EAC5El4D,OAAOg1D,GAAiCr4D,KAAKm6D,0BAA4BqB,EAEzEx7D,KAAK47D,SAAWnC,EAA2BoC,eAE3C,IAAIC,GAAS,EAGb,IAAI97D,KAAK47D,SAASlrD,KACwC,gBAAtD1Q,KAAK47D,SAASlrD,IAAI4xB,OAAO,EAAG,cAAc9gC,QAA2B,CAErEs6D,EAAS,4BADWx3D,SAAS0hC,OAC0B,eAE3D,GAAI+1B,GAAiB,eAAiBD,EAAS,gBAC/C,KACI97D,KAAK47D,SAASI,IAAIprD,OAClB5Q,KAAK47D,SAASI,IAAInrD,MAAMkrD,GACxB/7D,KAAK47D,SAASI,IAAIjrD,QAEtB,MAAO3P,GACH8oB,EAAI,2BACA9oB,EAAEgvB,OACFlG,EAAI9oB,EAAEgvB,OAEVlG,EAAI9oB,KAsPhB,MAxOAq4D,GAA2BoC,cAAgB,WACvC,GAAIvrD,GAAShM,SAASE,cAAc,SAGpC,IAFA8L,EAAOC,MAAMC,QAAU,QAEnBlM,SAASyyB,KAuBT,KAAM,mGAtBNzyB,UAASyyB,KAAKtmB,YAAYH,EAC1B,KAIYA,EAAOK,cAAcrM,UAGzB4lB,EAAI,iCAGZ,MAAO9oB,GACH,GAAI4kC,GAAS1hC,SAAS0hC,MACtB11B,GAAOI,IACH,gEACIs1B,EACA,2BAkBhB,MATI11B,GAAO2rD,gBACP3rD,EAAO0rD,IAAM1rD,EAAO2rD,gBAEf3rD,EAAOK,cACZL,EAAO0rD,IAAM1rD,EAAOK,cAAcrM,SAE7BgM,EAAOhM,WACZgM,EAAO0rD,IAAM1rD,EAAOhM,UAEjBgM,GAKXmpD,EAA2Bx6D,UAAU8R,MAAQ,WACzC,GAAI2R,GAAQ1iB,IAeZ,IAbAA,KAAKk8D,OAAQ,EACTl8D,KAAK47D,WAIL57D,KAAK47D,SAASI,IAAIjlC,KAAKvb,UAAY,GACnCtZ,WAAW,WACgB,OAAnBwgB,EAAMk5C,WACNt3D,SAASyyB,KAAKzb,YAAYoH,EAAMk5C,UAChCl5C,EAAMk5C,SAAW,OAEtBp4D,KAAKgF,MAAM,KAEdif,EAAKwI,aAAejwB,KAAKm8D,KAAM,CAC/B,GAAIjC,KACJA,GAAA,QAAmD,IACnDA,EAAA,GAAwCl6D,KAAKm8D,KAC7CjC,EAAA,GAAwCl6D,KAAKo8D,IAE7C3C,GAA2B4C,gBADdr8D,KAAK+4D,MAAMmB,IAI5B,GAAIjB,GAAej5D,KAAKi5D,YACpBA,KACAj5D,KAAKi5D,aAAe,KACpBA,MAQRQ,EAA2Bx6D,UAAUs7D,cAAgB,SAAU50D,EAAI21D,GAK/D,IAJAt7D,KAAKm8D,KAAOx2D,EACZ3F,KAAKo8D,KAAOd,EACZt7D,KAAKk8D,OAAQ,EAENl8D,KAAKs8D,kBAShB7C,EAA2Bx6D,UAAUq9D,YAAc,WAI/C,GAAIt8D,KAAKk8D,OACLl8D,KAAKg6D,cACLh6D,KAAKy7D,oBAAoB1tD,SAAW/N,KAAK07D,YAAYl6D,OAAS,EAAI,EAAI,GAAI,CAE1ExB,KAAK27D,eACL,IAAIzB,KACJA,GAAA,GAAwCl6D,KAAKm8D,KAC7CjC,EAAA,GAAwCl6D,KAAKo8D,KAC7ClC,EAAA,IAA4Cl6D,KAAK27D,aAKjD,KAJA,GAAIY,GAASv8D,KAAK+4D,MAAMmB,GAEpBsC,EAAgB,GAChBz+D,EAAI,EACDiC,KAAK07D,YAAYl6D,OAAS,GAAG,CAGhC,KADcxB,KAAK07D,YAAY,GACnBt9D,EAAEoD,OA/cR,GA+cmCg7D,EAAch7D,QAhd/C,MAweJ,KArBA,IAAIi7D,GAASz8D,KAAK07D,YAAYp/C,OAC9BkgD,GACIA,EACI,OAEAz+D,EACA,IACA0+D,EAAOC,IACP,MAEA3+D,EACA,IACA0+D,EAAOE,GACP,KAEA5+D,EACA,IACA0+D,EAAOr+D,EACfL,IAQR,MAFAw+D,IAAkBC,EAClBx8D,KAAK48D,gBAAgBL,EAAQv8D,KAAK27D,gBAC3B,EAGP,OAAO,GASflC,EAA2Bx6D,UAAUo8D,eAAiB,SAAUwB,EAAQC,EAAWzxC,GAE/ErrB,KAAK07D,YAAY/6D,MAAO+7D,IAAKG,EAAQF,GAAIG,EAAW1+D,EAAGitB,IAGnDrrB,KAAKk8D,OACLl8D,KAAKs8D,eASb7C,EAA2Bx6D,UAAU29D,gBAAkB,SAAUv3C,EAAK03C,GAClE,GAAIr6C,GAAQ1iB,IAEZA,MAAKy7D,oBAAoBngB,IAAIyhB,EAAQ,EACrC,IAAIC,GAAe,WACft6C,EAAM+4C,oBAAoB58B,OAAOk+B,GACjCr6C,EAAM45C,eAINW,EAAmB/6D,WAAW86D,EAAcx5D,KAAKgF,MAxgB5B,MA+gBzBxI,MAAKq6D,OAAOh1C,EANO,WAEfy0C,aAAamD,GAEbD,OASRvD,EAA2Bx6D,UAAUo7D,OAAS,SAAUh1C,EAAK63C,GACzD,GAAIx6C,GAAQ1iB,IACRynB,GAAKwI,YACLjwB,KAAKm9D,eAAe93C,EAAK63C,GAGzBh7D,WAAW,WACP,IAEI,IAAKwgB,EAAMs3C,aACP,MACJ,IAAIoD,GAAc16C,EAAMk5C,SAASI,IAAIx3D,cAAc,SACnD44D,GAAYr2D,KAAO,kBACnBq2D,EAAYzxC,OAAQ,EACpByxC,EAAY1sD,IAAM2U,EAClB+3C,EAAYC,OAASD,EAAYE,mBAAqB,WAClD,GAAIC,GAASH,EAAY18B,UACpB68B,IAAqB,WAAXA,GAAkC,aAAXA,IAClCH,EAAYC,OAASD,EAAYE,mBAAqB,KAClDF,EAAY/hD,YACZ+hD,EAAY/hD,WAAWC,YAAY8hD,GAEvCF,MAGRE,EAAYI,QAAU,WAClBtzC,EAAI,oCAAsC7E,GAC1C3C,EAAMs3C,cAAe,EACrBt3C,EAAM3R,SAEV2R,EAAMk5C,SAASI,IAAIjlC,KAAKtmB,YAAY2sD,GAExC,MAAOh8D,MAGRoC,KAAKgF,MAAM,KAGfixD,KAoBPgE,GAAgB,IACQ,oBAAjBC,cACPD,GAAgBC,aAEU,mBAAdC,aACZF,GAAgBE,UAOpB,IAAIC,IAAqC,WAQrC,QAASA,GAAoBrF,EAAQtxB,EAAUuxB,EAAoBC,GAC/Dz4D,KAAKu4D,OAASA,EACdv4D,KAAK69D,eAAiB,KACtB79D,KAAK89D,OAAS,KACd99D,KAAK+9D,YAAc,EACnB/9D,KAAK04D,UAAY,EACjB14D,KAAK24D,cAAgB,EACrB34D,KAAK64D,KAAO74B,EAAWhgC,KAAKu4D,QAC5Bv4D,KAAK84D,OAAS/E,GAAaC,cAAc/sB,GACzCjnC,KAAKymC,QAAUm3B,EAAoBI,eAAe/2B,EAAUuxB,EAAoBC,GA6RpF,MAnRAmF,GAAoBI,eAAiB,SAAU/2B,EAAUuxB,EAAoBC,GACzE,GAAIyB,KAcJ,OAbAA,GAAA,EA56Se,KA66SVzyC,EAAKwI,aACc,mBAAbnL,WACPA,SAASD,OACgC,IAAzCC,SAASD,KAAK8Q,QA36SP,oBA46SPukC,EAAA,EA76SI,KA+6SJ1B,IACA0B,EAAA,EAAqC1B,GAErCC,IACAyB,EAAA,GAAgCzB,GAE7BxxB,EAAST,cAl7SR,YAk7SiC0zB,IAO7C0D,EAAoB3+D,UAAU2R,KAAO,SAAUooD,EAAWC,GACtD,GAAIv2C,GAAQ1iB,IACZA,MAAKi5D,aAAeA,EACpBj5D,KAAKg5D,UAAYA,EACjBh5D,KAAK64D,KAAK,2BAA6B74D,KAAKymC,SAC5CzmC,KAAK44D,gBAAiB,EAEtBx5B,EAAkBnrB,IAAI,8BAA8B,EACpD,KACI,GAAIwT,EAAKwI,YAAa,CAClB,GAAIguC,GAASx2C,EAAKgF,UAAUE,WAAa,YAAc,OAEnD5M,GACAm+C,SACIC,aAAc,cAAuC78C,EAAS6G,YAAc,IAAMi2C,QAAQC,SAAW,IAAMJ,IAI/GK,EAAMF,QAAA,IACN5yC,EAA0C,GAAlCxrB,KAAKymC,QAAQ9Q,QAAQ,UAC3B2oC,EAAA,aAAsBA,EAAA,YACtBA,EAAA,YAAqBA,EAAA,UACvB9yC,KACAzL,EAAA,OAAqBw+C,OAAQ/yC,IAEjCxrB,KAAKw+D,OAAS,GAAIf,IAAcz9D,KAAKymC,WAAa1mB,OAGlD/f,MAAKw+D,OAAS,GAAIf,IAAcz9D,KAAKymC,SAG7C,MAAOrlC,GACHpB,KAAK64D,KAAK,iCACV,IAAItG,GAAWnxD,EAAE0rB,SAAW1rB,EAAEiqB,IAK9B,OAJIknC,IACAvyD,KAAK64D,KAAKtG,OAEdvyD,MAAKu5D,YAGTv5D,KAAKw+D,OAAOC,OAAS,WACjB/7C,EAAMm2C,KAAK,wBACXn2C,EAAMk2C,gBAAiB,GAE3B54D,KAAKw+D,OAAOE,QAAU,WAClBh8C,EAAMm2C,KAAK,0CACXn2C,EAAM87C,OAAS,KACf97C,EAAM62C,aAEVv5D,KAAKw+D,OAAOG,UAAY,SAAUzgE,GAC9BwkB,EAAMk8C,oBAAoB1gE,IAE9B8B,KAAKw+D,OAAOhB,QAAU,SAAUp8D,GAC5BshB,EAAMm2C,KAAK,wCACX,IAAItG,GAAWnxD,EAAE0rB,SAAW1rB,EAAEiqB,IAC1BknC,IACA7vC,EAAMm2C,KAAKtG,GAEf7vC,EAAM62C,cAMdqE,EAAoB3+D,UAAUq7D,MAAQ,aACtCsD,EAAoBjD,cAAgB,WAChCiD,EAAoBhD,gBAAiB,GAEzCgD,EAAoB/C,YAAc,WAC9B,GAAIgE,IAAe,CACnB,IAAyB,mBAAd/uC,YAA6BA,UAAUgvC,UAAW,CACzD,GAAIC,GAAkB,iCAClBC,EAAkBlvC,UAAUgvC,UAAUtuC,MAAMuuC,EAC5CC,IAAmBA,EAAgBx9D,OAAS,GACxCy9D,WAAWD,EAAgB,IAAM,MACjCH,GAAe,GAI3B,OAASA,GACa,OAAlBpB,KACCG,EAAoBhD,gBAM7BgD,EAAoBsB,iBAAmB,WAGnC,MAAQ9/B,GAAkBJ,oBACkC,IAAxDI,EAAkBxgC,IAAI,+BAE9Bg/D,EAAoB3+D,UAAU67D,sBAAwB,WAClD17B,EAAkBP,OAAO,+BAE7B++B,EAAoB3+D,UAAUkgE,aAAe,SAAU9zC,GAEnD,GADArrB,KAAK89D,OAAOn9D,KAAK0qB,GACbrrB,KAAK89D,OAAOt8D,QAAUxB,KAAK+9D,YAAa,CACxC,GAAIqB,GAAWp/D,KAAK89D,OAAOt3D,KAAK,GAChCxG,MAAK89D,OAAS,IAGd99D,MAAKg5D,UAFUvxC,EAAK0D,SAASi0C,MASrCxB,EAAoB3+D,UAAUogE,qBAAuB,SAAUC,GAC3Dt/D,KAAK+9D,YAAcuB,EACnBt/D,KAAK89D,WAQTF,EAAoB3+D,UAAUsgE,mBAAqB,SAAUl0C,GAIzD,GAHA5D,EAAKmF,OAAuB,OAAhB5sB,KAAK89D,OAAiB,kCAG9BzyC,EAAK7pB,QAAU,EAAG,CAClB,GAAI89D,GAAah/B,OAAOjV,EACxB,KAAK3iB,MAAM42D,GAEP,MADAt/D,MAAKq/D,qBAAqBC,GACnB,KAIf,MADAt/D,MAAKq/D,qBAAqB,GACnBh0C,GAMXuyC,EAAoB3+D,UAAU2/D,oBAAsB,SAAUY,GAC1D,GAAoB,OAAhBx/D,KAAKw+D,OAAT,CAEA,GAAInzC,GAAOm0C,EAAA,IAIX,IAHAx/D,KAAK24D,eAAiBttC,EAAK7pB,OAC3BxB,KAAK84D,OAAOjF,iBAAiB,iBAAkBxoC,EAAK7pB,QACpDxB,KAAKy/D,iBACe,OAAhBz/D,KAAK89D,OAEL99D,KAAKm/D,aAAa9zC,OAEjB,CAED,GAAIq0C,GAAgB1/D,KAAKu/D,mBAAmBl0C,EACtB,QAAlBq0C,GACA1/D,KAAKm/D,aAAaO,MAQ9B9B,EAAoB3+D,UAAUg8D,KAAO,SAAU5vC,GAC3CrrB,KAAKy/D,gBACL,IAAIvE,GAAUzzC,EAAKpV,UAAUgZ,EAC7BrrB,MAAK04D,WAAawC,EAAQ15D,OAC1BxB,KAAK84D,OAAOjF,iBAAiB,aAAcqH,EAAQ15D,OAGnD,IAAIigC,GAAWF,EAAkB25B,EAvOV,MAyOnBz5B,GAASjgC,OAAS,GAClBxB,KAAK2/D,YAAYl5D,OAAOg7B,EAASjgC,QAGrC,KAAK,GAAIzD,GAAI,EAAGA,EAAI0jC,EAASjgC,OAAQzD,IACjCiC,KAAK2/D,YAAYl+B,EAAS1jC,KAGlC6/D,EAAoB3+D,UAAU87D,UAAY,WACtC/6D,KAAKq5D,WAAY,EACbr5D,KAAK69D,iBACL+B,cAAc5/D,KAAK69D,gBACnB79D,KAAK69D,eAAiB,MAEtB79D,KAAKw+D,SACLx+D,KAAKw+D,OAAOztD,QACZ/Q,KAAKw+D,OAAS,OAGtBZ,EAAoB3+D,UAAUs6D,UAAY,WACjCv5D,KAAKq5D,YACNr5D,KAAK64D,KAAK,+BACV74D,KAAK+6D,YAED/6D,KAAKi5D,eACLj5D,KAAKi5D,aAAaj5D,KAAK44D,gBACvB54D,KAAKi5D,aAAe,QAQhC2E,EAAoB3+D,UAAU8R,MAAQ,WAC7B/Q,KAAKq5D,YACNr5D,KAAK64D,KAAK,6BACV74D,KAAK+6D,cAOb6C,EAAoB3+D,UAAUwgE,eAAiB,WAC3C,GAAI/8C,GAAQ1iB,IACZ4/D,eAAc5/D,KAAK69D,gBACnB79D,KAAK69D,eAAiBgC,YAAY,WAE1Bn9C,EAAM87C,QACN97C,EAAMi9C,YAAY,KAEtBj9C,EAAM+8C,kBACPj8D,KAAKgF,MA7RmB,QAqS/Bo1D,EAAoB3+D,UAAU0gE,YAAc,SAAU3xD,GAIlD,IACIhO,KAAKw+D,OAAOvD,KAAKjtD,GAErB,MAAO5M,GACHpB,KAAK64D,KAAK,0CAA2Cz3D,EAAE0rB,SAAW1rB,EAAEiqB,KAAM,uBAC1EnpB,WAAWlC,KAAKu5D,UAAU75D,KAAKM,MAAO,KAO9C49D,EAAoBkC,6BAA+B,EAKnDlC,EAAoBmC,eAAiB,IAC9BnC,KA0BPoC,GAAkC,WAIlC,QAASA,GAAiB/4B,GACtBjnC,KAAKigE,gBAAgBh5B,GA6DzB,MA3DAzoC,QAAOC,eAAeuhE,EAAkB,kBAKpCphE,IAAK,WACD,OAAQ05D,GAAuBsF,KAEnCj/D,YAAY,EACZD,cAAc,IAMlBshE,EAAiB/gE,UAAUghE,gBAAkB,SAAUh5B,GACnD,GAAIi5B,GAAwBtC,IAAuBA,GAAA,cAC/CuC,EAAuBD,IAA0BtC,GAAoBsB,kBAMzE,IALIj4B,EAASnB,gBACJo6B,GACD/8D,EAAK,mFACTg9D,GAAuB,GAEvBA,EACAngE,KAAKogE,aAAexC,QAEnB,CACD,GAAIyC,GAAgBrgE,KAAKogE,cACzB1+B,GAAKs+B,EAAiBM,eAAgB,SAAUviE,EAAGwiE,GAC3CA,GAAaA,EAAA,eACbF,EAAa1/D,KAAK4/D,OASlCP,EAAiB/gE,UAAUuhE,iBAAmB,WAC1C,GAAIxgE,KAAKogE,YAAY5+D,OAAS,EAC1B,MAAOxB,MAAKogE,YAAY,EAGxB,MAAM,IAAI98D,OAAM,4BAOxB08D,EAAiB/gE,UAAUwhE,iBAAmB,WAC1C,MAAIzgE,MAAKogE,YAAY5+D,OAAS,EACnBxB,KAAKogE,YAAY,GAGjB,MAGRJ,KA4CPU,GAA4B,WAU5B,QAASA,GAAW/6D,EAAIg7D,EAAWlJ,EAAYmJ,EAAUzH,EAAe0H,EAASpI,GAC7Ez4D,KAAK2F,GAAKA,EACV3F,KAAK2gE,UAAYA,EACjB3gE,KAAKy3D,WAAaA,EAClBz3D,KAAK4gE,SAAWA,EAChB5gE,KAAKm5D,cAAgBA,EACrBn5D,KAAK6gE,QAAUA,EACf7gE,KAAKy4D,cAAgBA,EACrBz4D,KAAK8gE,gBAAkB,EACvB9gE,KAAK+gE,uBACL/gE,KAAKghE,OAAS,EACdhhE,KAAK64D,KAAO74B,EAAW,KAAOhgC,KAAK2F,GAAK,KACxC3F,KAAKihE,kBAAoB,GAAIjB,IAAiBW,GAC9C3gE,KAAK64D,KAAK,sBACV74D,KAAKkhE,SAiaT,MA3ZAR,GAAWzhE,UAAUiiE,OAAS,WAC1B,GAAIx+C,GAAQ1iB,KACRmhE,EAAOnhE,KAAKihE,kBAAkBT,kBAClCxgE,MAAKohE,MAAQ,GAAID,GAAKnhE,KAAKqhE,mBAAoBrhE,KAAK2gE,cAAWtgE,GAAWL,KAAKy4D,eAG/Ez4D,KAAKshE,0BAA4BH,EAAA,8BAAwC,CACzE,IAAII,GAAoBvhE,KAAKwhE,cAAcxhE,KAAKohE,OAC5CK,EAAmBzhE,KAAK0hE,iBAAiB1hE,KAAKohE,MAClDphE,MAAK2hE,IAAM3hE,KAAKohE,MAChBphE,KAAK4hE,IAAM5hE,KAAKohE,MAChBphE,KAAK6hE,eAAiB,KACtB7hE,KAAK8hE,YAAa,EAOlB5/D,WAAW,WAEPwgB,EAAM0+C,OAAS1+C,EAAM0+C,MAAMxwD,KAAK2wD,EAAmBE,IACpDj+D,KAAKgF,MAAM,GACd,IAAIu5D,GAAoBZ,EAAA,gBAA0B,CAC9CY,GAAoB,IACpB/hE,KAAKgiE,gBAAkB5+B,GAAsB,WACzC1gB,EAAMs/C,gBAAkB,KACnBt/C,EAAMo/C,aACHp/C,EAAM0+C,OACN1+C,EAAM0+C,MAAMzI,cA5EE,QA6Edj2C,EAAMm2C,KAAK,wDACPn2C,EAAM0+C,MAAMzI,cACZ,wCACJj2C,EAAMo/C,YAAa,EACnBp/C,EAAM0+C,MAAMtG,yBAEPp4C,EAAM0+C,OACX1+C,EAAM0+C,MAAM1I,UArFF,MAsFVh2C,EAAMm2C,KAAK,oDACPn2C,EAAM0+C,MAAM1I,UACZ,uCAKJh2C,EAAMm2C,KAAK,+CACXn2C,EAAM3R,WAGfvN,KAAKgF,MAAMu5D,MAOtBrB,EAAWzhE,UAAUoiE,iBAAmB,WACpC,MAAO,KAAOrhE,KAAK2F,GAAK,IAAM3F,KAAK8gE,mBAEvCJ,EAAWzhE,UAAUyiE,iBAAmB,SAAUP,GAC9C,GAAIz+C,GAAQ1iB,IACZ,OAAO,UAAUiiE,GACTd,IAASz+C,EAAM0+C,MACf1+C,EAAMw/C,kBAAkBD,GAEnBd,IAASz+C,EAAMm/C,gBACpBn/C,EAAMm2C,KAAK,8BACXn2C,EAAMy/C,8BAGNz/C,EAAMm2C,KAAK,+BAIvB6H,EAAWzhE,UAAUuiE,cAAgB,SAAUL,GAC3C,GAAIz+C,GAAQ1iB,IACZ,OAAO,UAAU8sB,GACO,GAAhBpK,EAAMs+C,SACFG,IAASz+C,EAAMk/C,IACfl/C,EAAM0/C,0BAA0Bt1C,GAE3Bq0C,IAASz+C,EAAMm/C,eACpBn/C,EAAM2/C,4BAA4Bv1C,GAGlCpK,EAAMm2C,KAAK,gCAS3B6H,EAAWzhE,UAAUqjE,YAAc,SAAUC,GAGzCviE,KAAKwiE,WADOvoD,EAAG,IAAK7b,EAAGmkE,KAG3B7B,EAAWzhE,UAAUwjE,qBAAuB,WACpCziE,KAAK2hE,MAAQ3hE,KAAK6hE,gBAAkB7hE,KAAK4hE,MAAQ5hE,KAAK6hE,iBACtD7hE,KAAK64D,KAAK,2CAA6C74D,KAAK6hE,eAAetJ,QAC3Ev4D,KAAKohE,MAAQphE,KAAK6hE,eAClB7hE,KAAK6hE,eAAiB,OAI9BnB,EAAWzhE,UAAUyjE,oBAAsB,SAAUC,GACjD,GA1JW,KA0JSA,GAAa,CAC7B,GAAIC,GAAMD,EAAA,CArJL,OAsJDC,EACA5iE,KAAK6iE,6BA1JD,MA4JCD,GAEL5iE,KAAK64D,KAAK,wCACV74D,KAAK6hE,eAAe9wD,QAEhB/Q,KAAK2hE,MAAQ3hE,KAAK6hE,gBAClB7hE,KAAK4hE,MAAQ5hE,KAAK6hE,gBAClB7hE,KAAK+Q,SAjKN,MAoKE6xD,IACL5iE,KAAK64D,KAAK,0BACV74D,KAAK8iE,8BACL9iE,KAAK6iE,gCAIjBnC,EAAWzhE,UAAUojE,4BAA8B,SAAUU,GACzD,GAAIC,GAAQ5hC,EAAW,IAAK2hC,GACxB13C,EAAO+V,EAAW,IAAK2hC,EAC3B,IAAa,KAATC,EACAhjE,KAAK0iE,oBAAoBr3C,OAExB,IAAa,KAAT23C,EAKL,KAAM,IAAI1/D,OAAM,2BAA6B0/D,EAH7ChjE,MAAK+gE,oBAAoBpgE,KAAK0qB,KAMtCq1C,EAAWzhE,UAAU4jE,2BAA6B,WAC1C7iE,KAAK8iE,6BAA+B,GACpC9iE,KAAK64D,KAAK,oCACV74D,KAAK8hE,YAAa,EAClB9hE,KAAK6hE,eAAe/G,wBACpB96D,KAAKijE,wBAILjjE,KAAK64D,KAAK,8BACV74D,KAAK6hE,eAAe5G,MAAOhhD,EAAG,IAAK7b,GAAK6b,EAhMzC,IAgMkD7b,UAGzDsiE,EAAWzhE,UAAUgkE,oBAAsB,WAEvCjjE,KAAK6hE,eAAevH,QAEpBt6D,KAAK64D,KAAK,mCACV74D,KAAK6hE,eAAe5G,MAAOhhD,EAAG,IAAK7b,GAAK6b,EA1M/B,IA0M8C7b,QAGvD4B,KAAK64D,KAAK,kCACV74D,KAAKohE,MAAMnG,MAAOhhD,EAAG,IAAK7b,GAAK6b,EA7MhB,IA6MqC7b,QACpD4B,KAAK2hE,IAAM3hE,KAAK6hE,eAChB7hE,KAAKyiE,wBAET/B,EAAWzhE,UAAUmjE,0BAA4B,SAAUW,GAEvD,GAAIC,GAAQ5hC,EAAW,IAAK2hC,GACxB13C,EAAO+V,EAAW,IAAK2hC,EACd,MAATC,EACAhjE,KAAKkjE,WAAW73C,GAEF,KAAT23C,GACLhjE,KAAKmjE,eAAe93C,IAG5Bq1C,EAAWzhE,UAAUkkE,eAAiB,SAAUr2C,GAC5C9sB,KAAKojE,qBAELpjE,KAAKy3D,WAAW3qC,IAEpB4zC,EAAWzhE,UAAUmkE,mBAAqB,WACjCpjE,KAAK8hE,cACN9hE,KAAKshE,2BACiC,IAClCthE,KAAK64D,KAAK,kCACV74D,KAAK8hE,YAAa,EAClB9hE,KAAKohE,MAAMtG,0BAIvB4F,EAAWzhE,UAAUikE,WAAa,SAAUP,GACxC,GAAIC,GAAMxhC,EAnPC,IAmPwBuhC,EACnC,IAnPW,KAmPSA,GAAa,CAC7B,GAAIU,GAAUV,EAAA,CACd,IA7OO,MA6OHC,EACA5iE,KAAKsjE,aAAaD,OAEjB,IAlPM,MAkPFT,EAA0B,CAC/B5iE,KAAK64D,KAAK,qCACV74D,KAAK4hE,IAAM5hE,KAAK6hE,cAChB,KAAK,GAAI9jE,GAAI,EAAGA,EAAIiC,KAAK+gE,oBAAoBv/D,SAAUzD,EACnDiC,KAAKmjE,eAAenjE,KAAK+gE,oBAAoBhjE,GAEjDiC,MAAK+gE,uBACL/gE,KAAKyiE,2BA9PE,MAgQFG,EAGL5iE,KAAKujE,sBAAsBF,GAlQvB,MAoQCT,EAEL5iE,KAAKwjE,SAASH,GArQV,MAuQCT,EACLl8C,EAAM,iBAAmB28C,GAvQtB,MAyQET,GACL5iE,KAAK64D,KAAK,wBACV74D,KAAKojE,qBACLpjE,KAAKyjE,iCAGL/8C,EAAM,mCAAqCk8C,KASvDlC,EAAWzhE,UAAUqkE,aAAe,SAAUI,GAC1C,GAAIC,GAAYD,EAAU/G,GACtB94D,EAAU6/D,EAAU1mD,EACpB4oB,EAAO89B,EAAU/mD,CACrB3c,MAAK4jE,UAAYF,EAAUtkE,EAC3BY,KAAK2gE,UAAUr6B,WAAWV,GAEP,GAAf5lC,KAAKghE,SACLhhE,KAAKohE,MAAM9G,QACXt6D,KAAK6jE,yBAAyB7jE,KAAKohE,MAAOuC,GA3lU/B,MA4lUc9/D,GACrBV,EAAK,sCAGTnD,KAAK8jE,qBAGbpD,EAAWzhE,UAAU6kE,iBAAmB,WACpC,GAAI3C,GAAOnhE,KAAKihE,kBAAkBR,kBAC9BU,IACAnhE,KAAK+jE,cAAc5C,IAG3BT,EAAWzhE,UAAU8kE,cAAgB,SAAU5C,GAC3C,GAAIz+C,GAAQ1iB,IACZA,MAAK6hE,eAAiB,GAAIV,GAAKnhE,KAAKqhE,mBAAoBrhE,KAAK2gE,UAAW3gE,KAAK4jE,WAG7E5jE,KAAK8iE,4BACD3B,EAAA,8BAAwC,EAG5CnhE,KAAK6hE,eAAejxD,KAFJ5Q,KAAKwhE,cAAcxhE,KAAK6hE,gBACrB7hE,KAAK0hE,iBAAiB1hE,KAAK6hE,iBAG9Cz+B,GAAsB,WACd1gB,EAAMm/C,iBACNn/C,EAAMm2C,KAAK,gCACXn2C,EAAMm/C,eAAe9wD,UAE1BvN,KAAKgF,MA7UM,OA+UlBk4D,EAAWzhE,UAAUukE,SAAW,SAAU59B,GACtC5lC,KAAK64D,KAAK,qCAAuCjzB,GACjD5lC,KAAK2gE,UAAUr6B,WAAWV,GAGN,IAAhB5lC,KAAKghE,OACLhhE,KAAK+Q,SAIL/Q,KAAKgkE,oBACLhkE,KAAKkhE,WAGbR,EAAWzhE,UAAU4kE,yBAA2B,SAAU1C,EAAMwC,GAC5D,GAAIjhD,GAAQ1iB,IACZA,MAAK64D,KAAK,oCACV74D,KAAKohE,MAAQD,EACbnhE,KAAKghE,OAAS,EACVhhE,KAAK4gE,WACL5gE,KAAK4gE,SAAS+C,EAAW3jE,KAAK4jE,WAC9B5jE,KAAK4gE,SAAW,MAImB,IAAnC5gE,KAAKshE,2BACLthE,KAAK64D,KAAK,kCACV74D,KAAK8hE,YAAa,GAGlB1+B,GAAsB,WAClB1gB,EAAM+gD,iCACPjgE,KAAKgF,MA5WsB,OA+WtCk4D,EAAWzhE,UAAUwkE,8BAAgC,WAE5CzjE,KAAK8hE,YAA8B,IAAhB9hE,KAAKghE,SACzBhhE,KAAK64D,KAAK,4BACV74D,KAAKwiE,WAAYvoD,EAAG,IAAK7b,GAAK6b,EArW/B,IAqWwC7b,UAG/CsiE,EAAWzhE,UAAUkjE,2BAA6B,WAC9C,GAAIhB,GAAOnhE,KAAK6hE,cAChB7hE,MAAK6hE,eAAiB,KAClB7hE,KAAK2hE,MAAQR,GAAQnhE,KAAK4hE,MAAQT,GAElCnhE,KAAK+Q,SASb2vD,EAAWzhE,UAAUijE,kBAAoB,SAAUD,GAC/CjiE,KAAKohE,MAAQ,KAGRa,GAAiC,IAAhBjiE,KAAKghE,OASF,IAAhBhhE,KAAKghE,QACVhhE,KAAK64D,KAAK,8BATV74D,KAAK64D,KAAK,+BAEN74D,KAAK2gE,UAAUv6B,oBACfhH,EAAkBP,OAAO,QAAU7+B,KAAK2gE,UAAU/6B,MAElD5lC,KAAK2gE,UAAU16B,aAAejmC,KAAK2gE,UAAU/6B,OAMrD5lC,KAAK+Q,SAOT2vD,EAAWzhE,UAAUskE,sBAAwB,SAAU1hE,GACnD7B,KAAK64D,KAAK,0DACN74D,KAAK6gE,UACL7gE,KAAK6gE,QAAQh/D,GACb7B,KAAK6gE,QAAU,MAInB7gE,KAAKm5D,cAAgB,KACrBn5D,KAAK+Q,SAET2vD,EAAWzhE,UAAUujE,UAAY,SAAUn3C,GACvC,GAAoB,IAAhBrrB,KAAKghE,OACL,KAAM,6BAGNhhE,MAAK2hE,IAAI1G,KAAK5vC,IAMtBq1C,EAAWzhE,UAAU8R,MAAQ,WACL,IAAhB/Q,KAAKghE,SACLhhE,KAAK64D,KAAK,gCACV74D,KAAKghE,OAAS,EACdhhE,KAAKgkE,oBACDhkE,KAAKm5D,gBACLn5D,KAAKm5D,gBACLn5D,KAAKm5D,cAAgB,QAQjCuH,EAAWzhE,UAAU+kE,kBAAoB,WACrChkE,KAAK64D,KAAK,iCACN74D,KAAKohE,QACLphE,KAAKohE,MAAMrwD,QACX/Q,KAAKohE,MAAQ,MAEbphE,KAAK6hE,iBACL7hE,KAAK6hE,eAAe9wD,QACpB/Q,KAAK6hE,eAAiB,MAEtB7hE,KAAKgiE,kBACLlI,aAAa95D,KAAKgiE,iBAClBhiE,KAAKgiE,gBAAkB,OAGxBtB,KAwBPuD,GAA+B,WAC/B,QAASA,MA0CT,MAlCAA,GAAchlE,UAAUilE,IAAM,aAO9BD,EAAchlE,UAAUslD,MAAQ,aAKhC0f,EAAchlE,UAAUklE,iBAAmB,aAM3CF,EAAchlE,UAAUmlE,gBAAkB,aAM1CH,EAAchlE,UAAUolE,kBAAoB,aAK5CJ,EAAchlE,UAAUqqC,mBAAqB,aAI7C26B,EAAchlE,UAAUs2D,YAAc,aAC/B0O,KAkBPK,GAAsB,IACtBC,GAA8B,IAa9BC,GAAsC,SAAUxxC,GAWhD,QAASwxC,GAAqB7D,EAAW8D,EAAeC,EAAkBC,EAAqBC,EAAoBC,GAC/G,GAAIniD,GAAQsQ,EAAO/0B,KAAK+B,OAASA,IAwCjC,IAvCA0iB,EAAMi+C,UAAYA,EAClBj+C,EAAM+hD,cAAgBA,EACtB/hD,EAAMgiD,iBAAmBA,EACzBhiD,EAAMiiD,oBAAsBA,EAC5BjiD,EAAMkiD,mBAAqBA,EAC3BliD,EAAMmiD,cAAgBA,EAEtBniD,EAAM/c,GAAK6+D,EAAqBM,8BAChCpiD,EAAMm2C,KAAO74B,EAAW,KAAOtd,EAAM/c,GAAK,KAE1C+c,EAAMqiD,qBACNriD,EAAMsiD,YACNtiD,EAAMuiD,oBACNviD,EAAMwiD,qBAAuB,EAC7BxiD,EAAMyiD,6BACNziD,EAAM0iD,YAAa,EACnB1iD,EAAM2iD,gBAAkBf,GACxB5hD,EAAM4iD,mBAAqBf,GAC3B7hD,EAAM6iD,uBAAyB,KAC/B7iD,EAAM+1C,cAAgB,KAEtB/1C,EAAM8iD,0BAA4B,KAElC9iD,EAAM00C,UAAW,EAEjB10C,EAAM+iD,kBACN/iD,EAAMgjD,eAAiB,EAKvBhjD,EAAMijD,UAAY,KAElBjjD,EAAMkjD,WAAa,KACnBljD,EAAMmjD,oBAAqB,EAC3BnjD,EAAMojD,uBAAyB,EAC/BpjD,EAAMqjD,kBAAmB,EACzBrjD,EAAMsjD,2BAA6B,KACnCtjD,EAAMujD,+BAAiC,KACnCpB,IAAkBp9C,EAAKwI,YACvB,KAAM,IAAI3sB,OAAM,iFAOpB,OALAof,GAAMwjD,iBAAiB,GACvBjP,GAAkB35B,cAAcpY,GAAG,UAAWxC,EAAMyjD,WAAYzjD,IACrB,IAAvCi+C,EAAU/6B,KAAKjQ,QAAQ,YACvB0hC,GAAc/5B,cAAcpY,GAAG,SAAUxC,EAAM0jD,UAAW1jD,GAEvDA,EAkrBX,MA7uBA8J,GAAQgH,UAAUgxC,EAAsBxxC,GAmExCwxC,EAAqBvlE,UAAUqjE,YAAc,SAAU9zB,EAAQzX,EAAMsvC,GACjE,GAAIC,KAActmE,KAAK0lE,eACnBa,GAAQrsD,EAAGosD,EAAWjiE,EAAGmqC,EAAQ3nC,EAAGkwB,EACxC/2B,MAAK64D,KAAKpxC,EAAKpV,UAAUk0D,IACzB9+C,EAAKmF,OAAO5sB,KAAKolE,WAAY,0DAC7BplE,KAAK2lE,UAAUrD,YAAYiE,GACvBF,IACArmE,KAAKylE,eAAea,GAAaD,IAMzC7B,EAAqBvlE,UAAUunE,OAAS,SAAU5jC,EAAO6jC,EAAet3D,EAAKk6B,GACzE,GAAI0T,GAAUna,EAAMoY,kBAChBzgB,EAAaqI,EAAMC,KAAKh+B,UAC5B7E,MAAK64D,KAAK,qBAAuBt+B,EAAa,IAAMwiB,GACpD/8C,KAAKglE,SAASzqC,GAAcv6B,KAAKglE,SAASzqC,OAC1C9S,EAAKmF,OAAOgW,EAAMkU,iBAAiBmb,cAC9BrvB,EAAMkU,iBAAiBsS,eAAgB,sDAC5C3hC,EAAKmF,QAAQ5sB,KAAKglE,SAASzqC,GAAYwiB,GAAU,+CACjD,IAAI2pB,IACAr9B,WAAYA,EACZ+nB,OAAQqV,EACR7jC,MAAOA,EACPzzB,IAAKA,EAETnP,MAAKglE,SAASzqC,GAAYwiB,GAAW2pB,EACjC1mE,KAAKolE,YACLplE,KAAK2mE,YAAYD,IAUzBlC,EAAqBvlE,UAAU0nE,YAAc,SAAUD,GACnD,GAAIhkD,GAAQ1iB,KACR4iC,EAAQ8jC,EAAW9jC,MACnBrI,EAAaqI,EAAMC,KAAKh+B,WACxBk4C,EAAUna,EAAMoY,iBACpBh7C,MAAK64D,KAAK,aAAet+B,EAAa,QAAUwiB,EAChD,IAAI6pB,IAAiBznE,EAAGo7B,EAGpBmsC,GAAWv3D,MACXy3D,EAAA,EAAWhkC,EAAMkY,cACjB8rB,EAAA,EAAWF,EAAWv3D,KAE1By3D,EAAA,EAAoBF,EAAWtV,SAC/BpxD,KAAKsiE,YAPQ,IAOYsE,EAAK,SAAU95C,GACpC,GAAIu2C,GAAUv2C,EAAA,EACVwlC,EAASxlC,EAAA,CAEb03C,GAAqBqC,sBAAsBxD,EAASzgC,IAC5BlgB,EAAMsiD,SAASzqC,IAAe7X,EAAMsiD,SAASzqC,GAAYwiB,MAEvD2pB,IACtBhkD,EAAMm2C,KAAK,kBAAmB/rC,GACf,OAAXwlC,GACA5vC,EAAMokD,cAAcvsC,EAAYwiB,GAEhC2pB,EAAWr9B,YACXq9B,EAAWr9B,WAAWipB,EAAQ+Q,OAU9CmB,EAAqBqC,sBAAwB,SAAUxD,EAASzgC,GAC5D,GAAIygC,GAA8B,gBAAZA,IAAwB57C,EAAKhB,SAAS48C,EAAS,KAAM,CACvE,GAAI0D,GAAWt/C,EAAK8J,QAAQ8xC,EAAS,IACrC,IAAIzgE,MAAMkG,QAAQi+D,KAAcA,EAASpxC,QAAQ,YAAa,CAC1D,GAAIqxC,GAAY,gBACZpkC,EACKkU,iBACAC,WACAlyC,WACL,IACAoiE,EAAYrkC,EAAMC,KAAKh+B,UAC3B1B,GAAK,wGAC6C6jE,EAAY,OACzDC,EAAY,sDAO7BzC,EAAqBvlE,UAAUklE,iBAAmB,SAAUzzC,GACxD1wB,KAAK4lE,WAAal1C,EAClB1wB,KAAK64D,KAAK,wBACN74D,KAAK4lE,WACL5lE,KAAKknE,UAKDlnE,KAAKolE,YACLplE,KAAKsiE,YAAY,YAAc,cAGvCtiE,KAAKmnE,uCAAuCz2C,IAMhD8zC,EAAqBvlE,UAAUkoE,uCAAyC,SAAUC,IAGvDA,GAAoC,KAAtBA,EAAW5lE,QACxBimB,EAAK6J,QAAQ81C,MACjCpnE,KAAK64D,KAAK,iEACV74D,KAAKslE,mBAzMoB,MAgNjCd,EAAqBvlE,UAAUioE,QAAU,WACrC,GAAIxkD,GAAQ1iB,IACZ,IAAIA,KAAKolE,YAAcplE,KAAK4lE,WAAY,CACpC,GAAIyB,GAAUrnE,KAAK4lE,WACf0B,EAAa7/C,EAAK2J,cAAci2C,GAAW,OAAS,QACpDE,GAAgBC,KAAMH,EACC,QAAvBrnE,KAAK6kE,cACL0C,EAAA,QAAwB,EAEW,gBAAvBvnE,MAAK6kE,gBACjB0C,EAAA,QAAyBvnE,KAAK6kE,eAElC7kE,KAAKsiE,YAAYgF,EAAYC,EAAa,SAAU/kE,GAChD,GAAI8vD,GAAS9vD,EAAA,EACT6oB,EAAO7oB,EAAA,GAAqB,OAC5BkgB,GAAMkjD,aAAeyB,IACN,OAAX/U,EACA5vC,EAAMojD,uBAAyB,EAI/BpjD,EAAM+kD,eAAenV,EAAQjnC,QASjDm5C,EAAqBvlE,UAAUyoE,SAAW,SAAU9kC,EAAOzzB,GACvD,GAAIorB,GAAaqI,EAAMC,KAAKh+B,WACxBk4C,EAAUna,EAAMoY,iBACpBh7C,MAAK64D,KAAK,uBAAyBt+B,EAAa,IAAMwiB,GACtDt1B,EAAKmF,OAAOgW,EAAMkU,iBAAiBmb,cAC9BrvB,EAAMkU,iBAAiBsS,eAAgB,wDAC/BppD,KAAK8mE,cAAcvsC,EAAYwiB,IAC9B/8C,KAAKolE,YACfplE,KAAK2nE,cAAcptC,EAAYwiB,EAASna,EAAMkY,cAAe3rC,IAGrEq1D,EAAqBvlE,UAAU0oE,cAAgB,SAAUptC,EAAYwiB,EAAS6qB,EAAUz4D,GACpFnP,KAAK64D,KAAK,eAAiBt+B,EAAa,QAAUwiB,EAClD,IAAI6pB,IAAiBznE,EAAGo7B,EAGpBprB,KACAy3D,EAAA,EAAWgB,EACXhB,EAAA,EAAWz3D,GAEfnP,KAAKsiE,YANQ,IAMYsE,IAK7BpC,EAAqBvlE,UAAUmlE,gBAAkB,SAAU7pC,EAAYlP,EAAMge,GACrErpC,KAAKolE,WACLplE,KAAK6nE,kBAAkB,IAAKttC,EAAYlP,EAAMge,GAG9CrpC,KAAKmlE,0BAA0BxkE,MAC3B45B,WAAYA,EACZiU,OAAQ,IACRnjB,KAAMA,EACNge,WAAYA,KAOxBm7B,EAAqBvlE,UAAUolE,kBAAoB,SAAU9pC,EAAYlP,EAAMge,GACvErpC,KAAKolE,WACLplE,KAAK6nE,kBAAkB,KAAMttC,EAAYlP,EAAMge,GAG/CrpC,KAAKmlE,0BAA0BxkE,MAC3B45B,WAAYA,EACZiU,OAAQ,KACRnjB,KAAMA,EACNge,WAAYA,KAOxBm7B,EAAqBvlE,UAAUqqC,mBAAqB,SAAU/O,EAAY8O,GAClErpC,KAAKolE,WACLplE,KAAK6nE,kBAAkB,KAAMttC,EAAY,KAAM8O,GAG/CrpC,KAAKmlE,0BAA0BxkE,MAC3B45B,WAAYA,EACZiU,OAAQ,KACRnjB,KAAM,KACNge,WAAYA,KAIxBm7B,EAAqBvlE,UAAU4oE,kBAAoB,SAAUr5B,EAAQjU,EAAYlP,EAAMge,GACnF,GAAIy+B,IAAqB3oE,EAAGo7B,EAAqBn8B,EAAGitB,EACpDrrB,MAAK64D,KAAK,gBAAkBrqB,EAAQs5B,GACpC9nE,KAAKsiE,YAAY9zB,EAAQs5B,EAAS,SAAUC,GACpC1+B,GACAnnC,WAAW,WACPmnC,EAAW0+B,EAAA,EAA0BA,EAAA,IACtCvkE,KAAKgF,MAAM,OAO1Bg8D,EAAqBvlE,UAAUilE,IAAM,SAAU3pC,EAAYlP,EAAMge,EAAYoD,GACzEzsC,KAAKgoE,YAAY,IAAKztC,EAAYlP,EAAMge,EAAYoD,IAKxD+3B,EAAqBvlE,UAAUslD,MAAQ,SAAUhqB,EAAYlP,EAAMge,EAAYoD,GAC3EzsC,KAAKgoE,YAAY,IAAKztC,EAAYlP,EAAMge,EAAYoD,IAExD+3B,EAAqBvlE,UAAU+oE,YAAc,SAAUx5B,EAAQjU,EAAYlP,EAAMge,EAAYoD,GACzF,GAAIq7B,IACS3oE,EAAGo7B,EACHn8B,EAAGitB,OAEHhrB,KAATosC,IACAq7B,EAAA,EAAwBr7B,GAE5BzsC,KAAKilE,iBAAiBtkE,MAClB6tC,OAAQA,EACRs5B,QAASA,EACTz+B,WAAYA,IAEhBrpC,KAAKklE,sBACL,IAAI56D,GAAQtK,KAAKilE,iBAAiBzjE,OAAS,CACvCxB,MAAKolE,WACLplE,KAAKioE,SAAS39D,GAGdtK,KAAK64D,KAAK,kBAAoBt+B,IAGtCiqC,EAAqBvlE,UAAUgpE,SAAW,SAAU39D,GAChD,GAAIoY,GAAQ1iB,KACRwuC,EAASxuC,KAAKilE,iBAAiB36D,GAAOkkC,OACtCs5B,EAAU9nE,KAAKilE,iBAAiB36D,GAAOw9D,QACvCz+B,EAAarpC,KAAKilE,iBAAiB36D,GAAO++B,UAC9CrpC,MAAKilE,iBAAiB36D,GAAO49D,OAASloE,KAAKolE,WAC3CplE,KAAKsiE,YAAY9zB,EAAQs5B,EAAS,SAAUh7C,GACxCpK,EAAMm2C,KAAKrqB,EAAS,YAAa1hB,SAC1BpK,GAAMuiD,iBAAiB36D,GAC9BoY,EAAMwiD,uBAE6B,IAA/BxiD,EAAMwiD,uBACNxiD,EAAMuiD,qBAEN57B,GACAA,EAAWvc,EAAA,EAAyBA,EAAA,MAMhD03C,EAAqBvlE,UAAUs2D,YAAc,SAAUH,GACnD,GAAI1yC,GAAQ1iB,IAEZ,IAAIA,KAAKolE,WAAY,CACjB,GAAI0C,IAAyB3pE,EAAGi3D,EAChCp1D,MAAK64D,KAAK,cAAeiP,GACzB9nE,KAAKsiE,YAAsB,IAAKwF,EAAS,SAAUv9D,GAEhC,OADFA,EAAA,GAGTmY,EAAMm2C,KAAK,cAAe,wBADRtuD,EAAA,OAUlCi6D,EAAqBvlE,UAAUkkE,eAAiB,SAAUr2C,GACtD,GAAI,KAAOA,GAAS,CAEhB9sB,KAAK64D,KAAK,gBAAkBpxC,EAAKpV,UAAUya,GAC3C,IAAIq7C,GAASr7C,EAAA,EACTu5C,EAAarmE,KAAKylE,eAAe0C,EACjC9B,WACOrmE,MAAKylE,eAAe0C,GAC3B9B,EAAWv5C,EAAA,QAGd,IAAI,SAAWA,GAChB,KAAM,qCAAuCA,EAAA,KAExC,MAAOA,IAEZ9sB,KAAKooE,YAAYt7C,EAAA,EAAcA,EAAA,KAGvC03C,EAAqBvlE,UAAUmpE,YAAc,SAAU55B,EAAQzX,GAC3D/2B,KAAK64D,KAAK,sBAAuBrqB,EAAQzX,GAC1B,MAAXyX,EACAxuC,KAAKykE,cAAc1tC,EAAA,EAAoBA,EAAA,GAC3B,EAAOA,EAAA,GACH,MAAXyX,EACLxuC,KAAKykE,cAAc1tC,EAAA,EAAoBA,EAAA,GAC1B,EAAMA,EAAA,GACH,MAAXyX,EACLxuC,KAAKqoE,iBAAiBtxC,EAAA,EAAoBA,EAAA,GAC1B,OAAXyX,EACLxuC,KAAKynE,eAAe1wC,EAAA,EAA2BA,EAAA,GAC/B,OAAXyX,EACLxuC,KAAKsoE,uBAAuBvxC,GAE5BrQ,EAAM,6CACFe,EAAKpV,UAAUm8B,GACf,uCAEZg2B,EAAqBvlE,UAAU2hE,SAAW,SAAU+C,EAAWC,GAC3D5jE,KAAK64D,KAAK,oBACV74D,KAAKolE,YAAa,EAClBplE,KAAKimE,gCAAiC,GAAIr7C,OAAOE,UACjD9qB,KAAKuoE,iBAAiB5E,GACtB3jE,KAAKy4D,cAAgBmL,EACjB5jE,KAAK+lE,kBACL/lE,KAAKwoE,oBAETxoE,KAAKyoE,gBACLzoE,KAAK+lE,kBAAmB,EACxB/lE,KAAK0kE,kBAAiB,IAE1BF,EAAqBvlE,UAAUinE,iBAAmB,SAAU5iC,GACxD,GAAI5gB,GAAQ1iB,IACZynB,GAAKmF,QAAQ5sB,KAAK2lE,UAAW,0DACzB3lE,KAAKwlE,2BACL1L,aAAa95D,KAAKwlE,2BAItBxlE,KAAKwlE,0BAA4BtjE,WAAW,WACxCwgB,EAAM8iD,0BAA4B,KAClC9iD,EAAMgmD,wBACPllE,KAAKgF,MAAM86B,KAMlBkhC,EAAqBvlE,UAAUknE,WAAa,SAAU5Z,GAE9CA,IACCvsD,KAAKo3D,UACNp3D,KAAKqlE,kBAAoBrlE,KAAKslE,qBAC9BtlE,KAAK64D,KAAK,2CACV74D,KAAKqlE,gBAAkBf,GAClBtkE,KAAK2lE,WACN3lE,KAAKkmE,iBAAiB,IAG9BlmE,KAAKo3D,SAAW7K,GAEpBiY,EAAqBvlE,UAAUmnE,UAAY,SAAUuC,GAC7CA,GACA3oE,KAAK64D,KAAK,wBACV74D,KAAKqlE,gBAAkBf,GAClBtkE,KAAK2lE,WACN3lE,KAAKkmE,iBAAiB,KAI1BlmE,KAAK64D,KAAK,8CACN74D,KAAK2lE,WACL3lE,KAAK2lE,UAAU50D,UAI3ByzD,EAAqBvlE,UAAU2pE,sBAAwB,WAQnD,GAPA5oE,KAAK64D,KAAK,4BACV74D,KAAKolE,YAAa,EAClBplE,KAAK2lE,UAAY,KAEjB3lE,KAAK6oE,0BAEL7oE,KAAKylE,kBACDzlE,KAAK8oE,mBAAoB,CACzB,GAAK9oE,KAAKo3D,UAKL,GAAIp3D,KAAKimE,+BAAgC,CAE1C,GAAI8C,IAAgC,GAAIn+C,OAAOE,UAAY9qB,KAAKimE,8BAC5D8C,GAxfgB,MAyfhB/oE,KAAKqlE,gBAAkBf,IAC3BtkE,KAAKimE,+BAAiC,UATtCjmE,MAAK64D,KAAK,8CACV74D,KAAKqlE,gBAAkBrlE,KAAKslE,mBAC5BtlE,KAAKgmE,4BAA6B,GAAIp7C,OAAOE,SASjD,IAAIk+C,IAA8B,GAAIp+C,OAAOE,UAAY9qB,KAAKgmE,2BAC1DiD,EAAiBzlE,KAAK0H,IAAI,EAAGlL,KAAKqlE,gBAAkB2D,EACxDC,GAAiBzlE,KAAKqC,SAAWojE,EACjCjpE,KAAK64D,KAAK,0BAA4BoQ,EAAiB,MACvDjpE,KAAKkmE,iBAAiB+C,GAEtBjpE,KAAKqlE,gBAAkB7hE,KAAKmF,IAAI3I,KAAKslE,mBAngBhB,IAmgBoCtlE,KAAKqlE,iBAElErlE,KAAK0kE,kBAAiB,IAE1BF,EAAqBvlE,UAAUypE,qBAAuB,WAClD,GAAI1oE,KAAK8oE,mBAAoB,CACzB9oE,KAAK64D,KAAK,+BACV74D,KAAKgmE,4BAA6B,GAAIp7C,OAAOE,UAC7C9qB,KAAKimE,+BAAiC,IACtC,IAAIiD,GAAkBlpE,KAAKmjE,eAAezjE,KAAKM,MAC3CmpE,EAAYnpE,KAAK4gE,SAASlhE,KAAKM,MAC/BopE,EAAiBppE,KAAK4oE,sBAAsBlpE,KAAKM,MACjDqpE,EAAWrpE,KAAK2F,GAAK,IAAM6+D,EAAqB8E,oBAChD1tB,EAAS57C,KACTupE,EAAkBvpE,KAAKy4D,cACvB+Q,GAAa,EACbC,EAAe,KACfC,EAAY,WACRD,EACAA,EAAa14D,SAGby4D,GAAa,EACbJ,KAORppE,MAAK2lE,WACD50D,MAAO24D,EACPpH,YANgB,SAAUiE,GAC1B9+C,EAAKmF,OAAO68C,EAAc,0DAC1BA,EAAanH,YAAYiE,IAM7B,IAAIjT,GAAetzD,KAAK6lE,kBACxB7lE,MAAK6lE,oBAAqB,EAE1B7lE,KAAK4kE,mBACAx7C,SAASkqC,GACThyD,KAAK,SAAUiJ,GACXi/D,EAUDt/C,EAAI,0CATJA,EAAI,8CACJ0xB,EAAOgqB,WAAar7D,GAAUA,EAAOo/D,YACrCF,EAAe,GAAI/I,IAAW2I,EAAUztB,EAAO+kB,UAAWuI,EAAiBC,EAAWC,EACxE,SAAUvnE,GACpBsB,EAAKtB,EAAS,KAAO+5C,EAAO+kB,UAAU97D,WAAa,KACnD+2C,EAAOguB,UA/iBI,gBAgjBZL,MAMNjoE,KAAK,KAAM,SAAUixD,GACtB3W,EAAOid,KAAK,wBAA0BtG,GACjCiX,IACG/hD,EAAKgF,UAAUE,YAIfxpB,EAAKovD,GAETmX,SAQhBlF,EAAqBvlE,UAAU2qE,UAAY,SAAU/nE,GACjDqoB,EAAI,uCAAyCroB,GAC7C7B,KAAK+kE,kBAAkBljE,IAAU,EAC7B7B,KAAK2lE,UACL3lE,KAAK2lE,UAAU50D,SAGX/Q,KAAKwlE,4BACL1L,aAAa95D,KAAKwlE,2BAClBxlE,KAAKwlE,0BAA4B,MAEjCxlE,KAAKolE,YACLplE,KAAK4oE,0BAOjBpE,EAAqBvlE,UAAU+4B,OAAS,SAAUn2B,GAC9CqoB,EAAI,mCAAqCroB,SAClC7B,MAAK+kE,kBAAkBljE,GAC1B4lB,EAAKoK,QAAQ7xB,KAAK+kE,qBAClB/kE,KAAKqlE,gBAAkBf,GAClBtkE,KAAK2lE,WACN3lE,KAAKkmE,iBAAiB,KAIlC1B,EAAqBvlE,UAAUspE,iBAAmB,SAAU5E,GAExD3jE,KAAK2kE,qBAAsBkF,iBADflG,GAAY,GAAI/4C,OAAOE,aAGvC05C,EAAqBvlE,UAAU4pE,wBAA0B,WACrD,IAAK,GAAI9qE,GAAI,EAAGA,EAAIiC,KAAKilE,iBAAiBzjE,OAAQzD,IAAK,CACnD,GAAImmE,GAAMlkE,KAAKilE,iBAAiBlnE,EAC5BmmE,IAAgB,KAAOA,GAAI4D,SAAW5D,EAAIgE,SACtChE,EAAI76B,YACJ66B,EAAI76B,WAAW,oBACZrpC,MAAKilE,iBAAiBlnE,GAC7BiC,KAAKklE,wBAIqB,IAA9BllE,KAAKklE,uBACLllE,KAAKilE,sBAObT,EAAqBvlE,UAAUopE,iBAAmB,SAAU9tC,EAAYqI,GAEpE,GAAIma,EAKAA,GAJCna,EAISA,EAAMze,IAAI,SAAU4T,GAAK,MAAOsJ,GAAkBtJ,KAAOvxB,KAAK,KAH9D,SAKd,IAAIggE,GAASxmE,KAAK8mE,cAAcvsC,EAAYwiB,EACxCypB,IAAUA,EAAOn9B,YACjBm9B,EAAOn9B,WAAW,sBAQ1Bm7B,EAAqBvlE,UAAU6nE,cAAgB,SAAUvsC,EAAYwiB,GACjE,GACIypB,GADAsD,EAAuB,GAAIvmC,IAAKhJ,GAAY11B,UAahD,YAX4CxE,KAAxCL,KAAKglE,SAAS8E,IACdtD,EAASxmE,KAAKglE,SAAS8E,GAAsB/sB,SACtC/8C,MAAKglE,SAAS8E,GAAsB/sB,GACgB,IAAvDt1B,EAAKqK,SAAS9xB,KAAKglE,SAAS8E,WACrB9pE,MAAKglE,SAAS8E,IAKzBtD,MAASnmE,GAENmmE,GAEXhC,EAAqBvlE,UAAUwoE,eAAiB,SAAUsC,EAAYC,GAClE9/C,EAAI,uBAAyB6/C,EAAa,IAAMC,GAChDhqE,KAAK4lE,WAAa,KAClB5lE,KAAK6lE,oBAAqB,EAC1B7lE,KAAK2lE,UAAU50D,QACI,kBAAfg5D,GAAiD,sBAAfA,KAIlC/pE,KAAK8lE,wBArqBkB,IAwqBnB9lE,KAAKqlE,gBA7qBgB,IAgrBrBrlE,KAAK4kE,mBAAmBnR,0BAIpC+Q,EAAqBvlE,UAAUqpE,uBAAyB,SAAUvxC,GAC1D/2B,KAAKulE,uBACLvlE,KAAKulE,uBAAuBxuC,GAGxB,OAASA,IACT7zB,QAAQgnB,IAAI,aAAe6M,EAAA,IAAYrb,QAAQ,KAAM,kBAIjE8oD,EAAqBvlE,UAAUwpE,cAAgB,WAC3C,GAAI/lD,GAAQ1iB,IAEZA,MAAKknE,UAGLz/C,EAAK9a,QAAQ3M,KAAKglE,SAAU,SAAUzqC,EAAYs3B,GAC9CpqC,EAAK9a,QAAQklD,EAAS,SAAUpsD,EAAKihE,GACjChkD,EAAMikD,YAAYD,MAG1B,KAAK,GAAI3oE,GAAI,EAAGA,EAAIiC,KAAKilE,iBAAiBzjE,OAAQzD,IAC1CiC,KAAKilE,iBAAiBlnE,IACtBiC,KAAKioE,SAASlqE,EAEtB,MAAOiC,KAAKmlE,0BAA0B3jE,QAAQ,CAC1C,GAAIsmE,GAAU9nE,KAAKmlE,0BAA0B7oD,OAC7Ctc,MAAK6nE,kBAAkBC,EAAQt5B,OAAQs5B,EAAQvtC,WAAYutC,EAAQz8C,KAAMy8C,EAAQz+B,cAOzFm7B,EAAqBvlE,UAAUupE,kBAAoB,WAC/C,GAAIpT,MACA6U,EAAa,IACbxiD,GAAKgF,UAAUE,WACfs9C,EAAa,aAERxiD,EAAKgF,UAAUC,cACpBu9C,EAAa,QAEjB7U,EAAM,OAAS6U,EAAa,IAAM3oD,EAAS6G,YAAYzM,QAAQ,MAAO,MAAQ,EAC1E+L,EAAKsI,kBACLqlC,EAAM,qBAAuB,EAExB3tC,EAAKuI,kBACVolC,EAAM,yBAA2B,GAErCp1D,KAAKu1D,YAAYH,IAMrBoP,EAAqBvlE,UAAU6pE,iBAAmB,WAC9C,GAAIH,GAAStR,GAAc/5B,cAAci6B,iBACzC,OAAO9vC,GAAKoK,QAAQ7xB,KAAK+kE,oBAAsB4D,GAKnDnE,EAAqBM,4BAA8B,EAMnDN,EAAqB8E,kBAAoB,EAClC9E,GACTP,IAsBEiG,GAAoC,SAAUl3C,GAQ9C,QAASk3C,GAAmBvJ,EAAW8D,EAAeG,GAClD,GAAIliD,GAAQsQ,EAAO/0B,KAAK+B,OAASA,IAajC,OAZA0iB,GAAMi+C,UAAYA,EAClBj+C,EAAM+hD,cAAgBA,EACtB/hD,EAAMkiD,mBAAqBA,EAE3BliD,EAAMm2C,KAAO74B,EAAW,WAOxBtd,EAAMsiD,YACCtiD,EA+HX,MApJA8J,GAAQgH,UAAU02C,EAAoBl3C,GAuBtCk3C,EAAmBjrE,UAAUs2D,YAAc,WACvC,KAAM,IAAIjyD,OAAM,4BAQpB4mE,EAAmBC,aAAe,SAAUvnC,EAAOzzB,GAC/C,WAAY9O,KAAR8O,EACO,OAASA,GAGhBsY,EAAKmF,OAAOgW,EAAMkU,iBAAiBmb,YAAa,kDACzCrvB,EAAMC,KAAKh+B,aAI1BqlE,EAAmBjrE,UAAUunE,OAAS,SAAU5jC,EAAO6jC,EAAet3D,EAAKk6B,GACvE,GAAI3mB,GAAQ1iB,KACRu6B,EAAaqI,EAAMC,KAAKh+B,UAC5B7E,MAAK64D,KAAK,qBAAuBt+B,EAAa,IAAMqI,EAAMoY,kBAE1D,IAAIovB,GAAWF,EAAmBC,aAAavnC,EAAOzzB,GAClDk7D,IACJrqE,MAAKglE,SAASoF,GAAYC,CAC1B,IAAIC,GAAwB1nC,EACvBkU,iBACAyzB,6BACLvqE,MAAKwqE,aAAajwC,EAAa,QAAS+vC,EAAuB,SAAU/X,EAAUhoD,GAC/E,GAAI8gB,GAAO9gB,CAQX,IAPiB,MAAbgoD,IACAlnC,EAAO,KACPknC,EAAW,MAEE,OAAbA,GACA7vC,EAAM+hD,cAAclqC,EAAYlP,GAAmB,EAAOlc,GAE1DsY,EAAK8J,QAAQ7O,EAAMsiD,SAAUoF,KAAcC,EAAY,CACvD,GAAII,EAKAA,GAJClY,EAGgB,KAAZA,EACM,oBAGA,cAAgBA,EANhB,KAQflpB,EAAWohC,EAAU,UAKjCP,EAAmBjrE,UAAUyoE,SAAW,SAAU9kC,EAAOzzB,SAE9CnP,MAAKglE,SADGkF,EAAmBC,aAAavnC,EAAOzzB,KAI1D+6D,EAAmBjrE,UAAUklE,iBAAmB,aAYhD+F,EAAmBjrE,UAAUurE,aAAe,SAAUjwC,EAAY+vC,EAAuBjoE,GACrF,GAAIqgB,GAAQ1iB,SACkB,KAA1BsqE,IAAoCA,MACxCA,EAAA,OAAkC,SAClCtqE,KAAK4kE,mBACAx7C,UAA2B,GAC3B9nB,KAAK,SAAUopE,GAChB,GAAIC,GAAYD,GAAiBA,EAAcf,WAC3CgB,KACAL,EAAA,KAAgCK,EAEpC,IAAItlD,IAAO3C,EAAMi+C,UAAU96B,OAAS,WAAa,WAC7CnjB,EAAMi+C,UAAU/6B,KAChBrL,EACA,OAEA7X,EAAMi+C,UAAU75C,UAChBW,EAAK8K,YAAY+3C,EACrB5nD,GAAMm2C,KAAK,4BAA8BxzC,EACzC,IAAIulD,GAAM,GAAIC,eACdD,GAAItN,mBAAqB,WACrB,GAAIj7D,GAA+B,IAAnBuoE,EAAIlqC,WAAkB,CAClChe,EAAMm2C,KAAK,qBAAuBxzC,EAAM,qBAAsBulD,EAAItY,OAAQ,YAAasY,EAAIE,aAC3F,IAAItoE,GAAM,IACV,IAAIooE,EAAItY,QAAU,KAAOsY,EAAItY,OAAS,IAAK,CACvC,IACI9vD,EAAMilB,EAAK0D,SAASy/C,EAAIE,cAE5B,MAAO1pE,GACH+B,EAAK,qCACDkiB,EACA,KACAulD,EAAIE,cAEZzoE,EAAS,KAAMG,OAII,OAAfooE,EAAItY,QAAiC,MAAfsY,EAAItY,QAC1BnvD,EAAK,sCACDkiB,EACA,YACAulD,EAAItY,QAEZjwD,EAASuoE,EAAItY,OAEjBjwD,GAAW,OAGnBuoE,EAAIh6D,KAAK,MAAOyU,GAAuB,GACvCulD,EAAI3P,UAGLiP,GACTjG,IAqBE8G,GAAsB,WAMtB,QAASA,GAAKpK,EAAWqK,EAAiBzkD,GACtC,GAAI7D,GAAQ1iB,IACZA,MAAK2gE,UAAYA,EACjB3gE,KAAKumB,IAAMA,EACXvmB,KAAKirE,gBAAkB,EACvBjrE,KAAKi1D,eAAiB,KACtBj1D,KAAKkrE,YAAc,GAAI1V,IACvBx1D,KAAKmrE,aAAe,EACpBnrE,KAAKorE,6BAA+B,KAEpCprE,KAAKm5D,cAAgB,GAAI3d,IAKzBx7C,KAAKqrE,sBAAwB,IAE7B,IAAIC,GAAoB,GAAIlY,IAAkB7sC,EAE9C,IADAvmB,KAAK84D,OAAS/E,GAAaC,cAAc2M,GACrCqK,GAAmB7nC,KACnBnjC,KAAK+0D,QAAU,GAAImV,IAAmBlqE,KAAK2gE,UAAW3gE,KAAKykE,cAAc/kE,KAAKM,MAAOsrE,GAErFppE,WAAWlC,KAAK0kE,iBAAiBhlE,KAAKM,MAAM,GAAO,OAElD,CACD,GAAIurE,GAAehlD,EAAIxG,QAAJ,4BAEnB,QAA4B,KAAjBwrD,GAAiD,OAAjBA,EAAuB,CAC9D,GAA4B,gBAAjBA,GACP,KAAM,IAAIjoE,OAAM,qEAEpB,KACImkB,EAAKpV,UAAUk5D,GAEnB,MAAOnqE,GACH,KAAM,IAAIkC,OAAM,kCAAoClC,IAG5DpB,KAAKqrE,sBAAwB,GAAI7G,IAAqBxkE,KAAK2gE,UAAW3gE,KAAKykE,cAAc/kE,KAAKM,MAAOA,KAAK0kE,iBAAiBhlE,KAAKM,MAAOA,KAAK2kE,oBAAoBjlE,KAAKM,MAAOsrE,EAAmBC,GAC/LvrE,KAAK+0D,QAAU/0D,KAAKqrE,sBAExBC,EAAkB/X,uBAAuB,SAAU7iC,GAC/ChO,EAAMqyC,QAAQoP,iBAAiBzzC,KAInC1wB,KAAKwrE,eAAiBzX,GAAaI,oBAAoBwM,EAAW,WAAc,MAAO,IAAI9L,IAAcnyC,EAAMo2C,OAAQp2C,EAAMqyC,WAC7H/0D,KAAKyrE,qBAELzrE,KAAK0rE,UAAY,GAAI1Y,IACrBhzD,KAAK2rE,cAAgB,GAAInd,KACrByC,eAAgB,SAAUruB,EAAOzzB,EAAKs3D,EAAep9B,GACjD,GAAIuiC,MACAthC,EAAO5nB,EAAMgpD,UAAUzrB,QAAQrd,EAAMC,KASzC,OANKyH,GAAKzY,YACN+5C,EAAalpD,EAAMipD,cAAcvc,qBAAqBxsB,EAAMC,KAAMyH,GAClEpoC,WAAW,WACPmnC,EAAW,OACZ,IAEAuiC,GAEXva,cAAe,eAEnBrxD,KAAK6rE,YAAY,aAAa,GAC9B7rE,KAAK8rE,gBAAkB,GAAItd,KACvByC,eAAgB,SAAUruB,EAAOzzB,EAAKs3D,EAAep9B,GAMjD,MALA3mB,GAAMqyC,QAAQyR,OAAO5jC,EAAO6jC,EAAet3D,EAAK,SAAUmjD,EAAQjnC,GAC9D,GAAI08B,GAAS1e,EAAWipB,EAAQjnC,EAChC3I,GAAMwoD,YAAYhV,0BAA0BtzB,EAAMC,KAAMklB,SAKhEsJ,cAAe,SAAUzuB,EAAOzzB,GAC5BuT,EAAMqyC,QAAQ2S,SAAS9kC,EAAOzzB,MAkZ1C,MA3YA47D,GAAK9rE,UAAU4F,SAAW,WACtB,OAAS7E,KAAK2gE,UAAU96B,OAAS,WAAa,WAAa7lC,KAAK2gE,UAAU/6B,MAK9EmlC,EAAK9rE,UAAUZ,KAAO,WAClB,MAAO2B,MAAK2gE,UAAU75C,WAK1BikD,EAAK9rE,UAAU8sE,WAAa,WACxB,GAAIC,GAAahsE,KAAK0rE,UAAUzrB,QAAQ,GAAI1c,IAAK,2BAC7C0oC,EAASD,EAAWvpE,OAAS,CACjC,QAAO,GAAImoB,OAAOE,UAAYmhD,GAMlClB,EAAK9rE,UAAUitE,qBAAuB,WAClC,MAAOjwB,KACH0nB,UAAW3jE,KAAK+rE,gBAYxBhB,EAAK9rE,UAAUwlE,cAAgB,SAAUlqC,EAAYlP,EAAM8gD,EAASh9D,GAEhEnP,KAAKirE,iBACL,IAAIpoC,GAAO,GAAIU,IAAKhJ,EACpBlP,GAAOrrB,KAAKorE,6BACNprE,KAAKorE,6BAA6B7wC,EAAYlP,GAC9CA,CACN,IAAI08B,KACJ,IAAI54C,EACA,GAAIg9D,EAAS,CACT,GAAIC,GAAiB3kD,EAAKtD,IAAIkH,EAAM,SAAUmN,GAC1C,MAAO+C,GAAe/C,IAE1BuvB,GAAS/nD,KAAK8rE,gBAAgBjc,sBAAsBhtB,EAAMupC,EAAgBj9D,OAEzE,CACD,GAAIk9D,GAAa9wC,EAAelQ,EAChC08B,GAAS/nD,KAAK8rE,gBAAgBvc,0BAA0B1sB,EAAMwpC,EAAYl9D,OAG7E,IAAIg9D,EAAS,CACd,GAAI1lB,GAAkBh/B,EAAKtD,IAAIkH,EAAM,SAAUmN,GAC3C,MAAO+C,GAAe/C,IAE1BuvB,GAAS/nD,KAAK8rE,gBAAgBzc,iBAAiBxsB,EAAM4jB,OAEpD,CACD,GAAIzR,GAAOzZ,EAAelQ,EAC1B08B,GAAS/nD,KAAK8rE,gBAAgB1c,qBAAqBvsB,EAAMmS,GAE7D,GAAI6M,GAAehf,CACfklB,GAAOvmD,OAAS,IAGhBqgD,EAAe7hD,KAAKssE,mBAAmBzpC,IAE3C7iC,KAAKkrE,YAAYhV,0BAA0BrU,EAAckG,IAO7DgjB,EAAK9rE,UAAUstE,qBAAuB,SAAUlqE,GAC5CrC,KAAKorE,6BAA+B/oE,GAMxC0oE,EAAK9rE,UAAUylE,iBAAmB,SAAU8H,GACxCxsE,KAAK6rE,YAAY,YAAaW,IACR,IAAlBA,GACAxsE,KAAKysE,0BAOb1B,EAAK9rE,UAAU0lE,oBAAsB,SAAUvZ,GAC3C,GAAI1oC,GAAQ1iB,IACZ0hC,GAAK0pB,EAAS,SAAU7rD,EAAOkG,GAC3Bid,EAAMmpD,YAAYpmE,EAAKlG,MAS/BwrE,EAAK9rE,UAAU4sE,YAAc,SAAUtxC,EAAYh7B,GAC/C,GAAIsjC,GAAO,GAAIU,IAAK,UAAYhJ,GAC5BqQ,EAAUrP,EAAeh8B,EAC7BS,MAAK0rE,UAAUxY,eAAerwB,EAAM+H,GAEpC5qC,KAAKkrE,YAAYhV,0BAA0BrzB,EAD9B7iC,KAAK2rE,cAAcvc,qBAAqBvsB,EAAM+H,KAO/DmgC,EAAK9rE,UAAUytE,gBAAkB,WAC7B,MAAO1sE,MAAKmrE,gBAQhBJ,EAAK9rE,UAAUuqC,gBAAkB,SAAU3G,EAAM8pC,EAAQ35B,EAAa3J,GAClE,GAAI3mB,GAAQ1iB,IACZA,MAAK64D,KAAK,OACNh2B,KAAMA,EAAKh+B,WACXtF,MAAOotE,EACPlxC,SAAUuX,GAId,IAAImJ,GAAen8C,KAAKksE,uBACpBU,EAAoBrxC,EAAeoxC,EAAQ35B,GAC3CpI,EAAU0R,GAA6BswB,EAAmBzwB,GAC1DmQ,EAAUtsD,KAAK0sE,iBAEnB1sE,MAAKkrE,YAAYvV,YADJ31D,KAAK8rE,gBAAgBhd,mBAAmBjsB,EAAM+H,EAAS0hB,GAAS,IAE7EtsD,KAAK+0D,QAAQmP,IAAIrhC,EAAKh+B,WAAY+nE,EAAkBnqE,KAAgB,GAAO,SAAU6vD,EAAQua,GACzF,GAAIC,GAAqB,OAAXxa,CACTwa,IACD3pE,EAAK,UAAY0/B,EAAO,YAAcyvB,EAE1C,IAAIya,GAAcrqD,EAAMopD,gBAAgBpnB,aAAa4H,GAAUwgB,EAC/DpqD,GAAMwoD,YAAYhV,0BAA0BrzB,EAAMkqC,GAClDrqD,EAAMsqD,uBAAuB3jC,EAAYipB,EAAQua,IAErD,IAAIhrB,GAAe7hD,KAAKitE,mBAAmBpqC,EAC3C7iC,MAAKssE,mBAAmBzqB,GAExB7hD,KAAKkrE,YAAYhV,0BAA0BrU,OAO/CkpB,EAAK9rE,UAAU20B,OAAS,SAAUiP,EAAMqqC,EAAiB7jC,GACrD,GAAI3mB,GAAQ1iB,IACZA,MAAK64D,KAAK,UAAYh2B,KAAMA,EAAKh+B,WAAYtF,MAAO2tE,GAEpD,IAAIC,IAAQ,EACRhxB,EAAen8C,KAAKksE,uBACpBzlB,IAMJ,IALAh/B,EAAK9a,QAAQugE,EAAiB,SAAUE,EAAYC,GAChDF,GAAQ,CACR,IAAIP,GAAoBrxC,EAAe8xC,EACvC5mB,GAAgB2mB,GAAc9wB,GAA6BswB,EAAmBzwB,KAE7EgxB,EAsBDjjD,EAAI,wDACJlqB,KAAKgtE,uBAAuB3jC,EAAY,UAvBhC,CACR,GAAIikC,GAAYttE,KAAK0sE,iBAErB1sE,MAAKkrE,YAAYvV,YADJ31D,KAAK8rE,gBAAgB7c,eAAepsB,EAAM4jB,EAAiB6mB,IAExEttE,KAAK+0D,QAAQxQ,MAAM1hB,EAAKh+B,WAAYqoE,EAAiB,SAAU5a,EAAQua,GACnE,GAAIC,GAAqB,OAAXxa,CACTwa,IACD3pE,EAAK,aAAe0/B,EAAO,YAAcyvB,EAE7C,IAAIya,GAAcrqD,EAAMopD,gBAAgBpnB,aAAa4oB,GAAYR,GAC7DjrB,EAAekrB,EAAYvrE,OAAS,EAAIkhB,EAAM4pD,mBAAmBzpC,GAAQA,CAC7EngB,GAAMwoD,YAAYhV,0BAA0BrU,EAAckrB,GAC1DrqD,EAAMsqD,uBAAuB3jC,EAAYipB,EAAQua,KAErDplD,EAAK9a,QAAQugE,EAAiB,SAAU/W,GACpC,GAAItU,GAAen/B,EAAMuqD,mBAAmBpqC,EAAKuB,MAAM+xB,GACvDzzC,GAAM4pD,mBAAmBzqB,KAG7B7hD,KAAKkrE,YAAYhV,0BAA0BrzB,QAWnDkoC,EAAK9rE,UAAUwtE,uBAAyB,WACpC,GAAI/pD,GAAQ1iB,IACZA,MAAK64D,KAAK,qBACV,IAAI1c,GAAen8C,KAAKksE,uBACpBqB,EAA2BnxB,GAAyBp8C,KAAKm5D,cAAehd,GACxE4L,IACJwlB,GAAyBzxB,YAAYvY,GAAKpzB,MAAO,SAAU0yB,EAAMmS,GAC7D+S,EAASA,EAAOhiD,OAAO2c,EAAMopD,gBAAgB1c,qBAAqBvsB,EAAMmS,GACxE,IAAI6M,GAAen/B,EAAMuqD,mBAAmBpqC,EAC5CngB,GAAM4pD,mBAAmBzqB,KAE7B7hD,KAAKm5D,cAAgB,GAAI3d,IACzBx7C,KAAKkrE,YAAYhV,0BAA0B3yB,GAAKpzB,MAAO43C,IAM3DgjB,EAAK9rE,UAAUqqC,mBAAqB,SAAUzG,EAAMwG,GAChD,GAAI3mB,GAAQ1iB,IACZA,MAAK+0D,QAAQzrB,mBAAmBzG,EAAKh+B,WAAY,SAAUytD,EAAQua,GAChD,OAAXva,GACA5vC,EAAMy2C,cAAcxd,OAAO9Y,GAE/BngB,EAAMsqD,uBAAuB3jC,EAAYipB,EAAQua,MAQzD9B,EAAK9rE,UAAUsqC,gBAAkB,SAAU1G,EAAMtjC,EAAO8pC,GACpD,GAAI3mB,GAAQ1iB,KACR4qC,EAAUrP,EAAeh8B,EAC7BS,MAAK+0D,QAAQqP,gBAAgBvhC,EAAKh+B,WAAY+lC,EAAQnoC,KAAgB,GAAO,SAAU6vD,EAAQua,GAC5E,OAAXva,GACA5vC,EAAMy2C,cAAczd,SAAS7Y,EAAM+H,GAEvCloB,EAAMsqD,uBAAuB3jC,EAAYipB,EAAQua,MASzD9B,EAAK9rE,UAAUwqC,4BAA8B,SAAU5G,EAAMtjC,EAAOk8B,EAAU4N,GAC1E,GAAI3mB,GAAQ1iB,KACR4qC,EAAUrP,EAAeh8B,EAAOk8B,EACpCz7B,MAAK+0D,QAAQqP,gBAAgBvhC,EAAKh+B,WAAY+lC,EAAQnoC,KAAgB,GAAO,SAAU6vD,EAAQua,GAC5E,OAAXva,GACA5vC,EAAMy2C,cAAczd,SAAS7Y,EAAM+H,GAEvCloB,EAAMsqD,uBAAuB3jC,EAAYipB,EAAQua,MAQzD9B,EAAK9rE,UAAU2qC,mBAAqB,SAAU/G,EAAMqqC,EAAiB7jC,GACjE,GAAI3mB,GAAQ1iB,IACZ,IAAIynB,EAAKoK,QAAQq7C,GAGb,MAFAhjD,GAAI,2EACJlqB,MAAKgtE,uBAAuB3jC,EAAY,KAG5CrpC,MAAK+0D,QAAQsP,kBAAkBxhC,EAAKh+B,WAAYqoE,EAAiB,SAAU5a,EAAQua,GAChE,OAAXva,GACA7qC,EAAK9a,QAAQugE,EAAiB,SAAUrhC,EAAW5P,GAC/C,GAAIgQ,GAAe1Q,EAAeU,EAClCvZ,GAAMy2C,cAAczd,SAAS7Y,EAAKuB,MAAMyH,GAAYI,KAG5DvpB,EAAMsqD,uBAAuB3jC,EAAYipB,EAAQua,MAOzD9B,EAAK9rE,UAAUu6C,yBAA2B,SAAU5W,EAAOoT,GACvD,GAAI+R,EAEAA,GAD0B,UAA1BnlB,EAAMC,KAAKgB,WACF7jC,KAAK2rE,cAActiB,qBAAqBzmB,EAAOoT,GAG/Ch2C,KAAK8rE,gBAAgBziB,qBAAqBzmB,EAAOoT,GAE9Dh2C,KAAKkrE,YAAYlV,kBAAkBpzB,EAAMC,KAAMklB,IAMnDgjB,EAAK9rE,UAAU06C,4BAA8B,SAAU/W,EAAOoT,GAG1D,GAAI+R,EAEAA,GAD0B,UAA1BnlB,EAAMC,KAAKgB,WACF7jC,KAAK2rE,cAAcriB,wBAAwB1mB,EAAOoT,GAGlDh2C,KAAK8rE,gBAAgBxiB,wBAAwB1mB,EAAOoT,GAEjEh2C,KAAKkrE,YAAYlV,kBAAkBpzB,EAAMC,KAAMklB,IAEnDgjB,EAAK9rE,UAAU2qE,UAAY,WACnB5pE,KAAKqrE,uBACLrrE,KAAKqrE,sBAAsBzB,UAzZhB,mBA4ZnBmB,EAAK9rE,UAAU+4B,OAAS,WAChBh4B,KAAKqrE,uBACLrrE,KAAKqrE,sBAAsBrzC,OA9ZhB,mBAianB+yC,EAAK9rE,UAAUm2D,MAAQ,SAAUoY,GAE7B,OADkB,KAAdA,IAAwBA,GAAY,GACjB,mBAAZtqE,SAAX,CAEA,GAAIkyD,EACAoY,IACKxtE,KAAKi1D,iBACNj1D,KAAKi1D,eAAiB,GAAIX,IAAct0D,KAAK84D,SACjD1D,EAAQp1D,KAAKi1D,eAAer2D,OAG5Bw2D,EAAQp1D,KAAK84D,OAAOl6D,KAExB,IAAI6uE,GAAcjvE,OAAOwN,KAAKopD,GAAOsY,OAAO,SAAUC,EAAeC,GACjE,MAAOpqE,MAAK0H,IAAI0iE,EAAapsE,OAAQmsE,IACtC,EACHlmD,GAAK9a,QAAQyoD,EAAO,SAAUhmD,EAAM7P,GAEhC,IAAK,GAAIxB,GAAIqR,EAAK5N,OAAQzD,EAAI0vE,EAAc,EAAG1vE,IAC3CqR,GAAQ,GACZlM,SAAQgnB,IAAI9a,EAAO7P,OAG3BwrE,EAAK9rE,UAAU4uE,sBAAwB,SAAUC,GAC7C9tE,KAAK84D,OAAOjF,iBAAiBia,GAC7B9tE,KAAKwrE,eAAerW,YAAY2Y,IAMpC/C,EAAK9rE,UAAU45D,KAAO,WAElB,IAAK,GADDl5B,MACKzoB,EAAK,EAAGA,EAAKpX,UAAU0B,OAAQ0V,IACpCyoB,EAASzoB,GAAMpX,UAAUoX,EAE7B,IAAI+oB,GAAS,EACTjgC,MAAKqrE,wBACLprC,EAASjgC,KAAKqrE,sBAAsB1lE,GAAK,KAE7CukB,EAAIrqB,UAAM,IAASogC,GAAQl6B,OAAO45B,KAOtCorC,EAAK9rE,UAAU+tE,uBAAyB,SAAU3qE,EAAUiwD,EAAQua,GAC5DxqE,GACA6gC,GAAe,WACX,GAAc,MAAVovB,EACAjwD,EAAS,UAER,CACD,GAAImmB,IAAQ8pC,GAAU,SAASxvB,cAC3BhW,EAAUtE,CACVqkD,KACA//C,GAAW,KAAO+/C,EACtB,IAAIta,GAAW,GAAIjvD,OAAMwpB,EACzBylC,GAAS/pC,KAAOA,EAChBnmB,EAASkwD,OAKzB/zD,OAAOC,eAAessE,EAAK9rE,UAAW,YAClCL,IAAK,WACD,MAAOoB,MAAK+tE,aAAe/tE,KAAK+tE,WAAa,GAAIrwC,IAAS19B,QAE9DrB,YAAY,EACZD,cAAc,IAEXqsE,KAwBPiD,GAA8B,WAI9B,QAASA,GAAav7C,GAClBzyB,KAAKiuE,eAAiB,GAAIrsB,IAAcnvB,EAAOskB,YAC/C/2C,KAAKs1C,OAAS7iB,EAAOskB,WACrB/2C,KAAKkuE,WAAaF,EAAaG,cAAc17C,GAC7CzyB,KAAKouE,SAAWJ,EAAaK,YAAY57C,GAuG7C,MAlGAu7C,GAAa/uE,UAAUqvE,aAAe,WAClC,MAAOtuE,MAAKkuE,YAKhBF,EAAa/uE,UAAUsvE,WAAa,WAChC,MAAOvuE,MAAKouE,UAMhBJ,EAAa/uE,UAAUq4C,QAAU,SAAUhN,GACvC,MAAQtqC,MAAKs1C,OAAO7K,QAAQzqC,KAAKsuE,eAAgBhkC,IAAS,GACtDtqC,KAAKs1C,OAAO7K,QAAQH,EAAMtqC,KAAKuuE,eAAiB,GAKxDP,EAAa/uE,UAAUitC,YAAc,SAAU8I,EAAMvvC,EAAK04C,EAAU0D,EAAc76C,EAAQ86C,GAItF,MAHK9hD,MAAKs3C,QAAQ,GAAI7a,IAAUh3B,EAAK04C,MACjCA,EAAWziB,GAAaC,YAErB37B,KAAKiuE,eAAe/hC,YAAY8I,EAAMvvC,EAAK04C,EAAU0D,EAAc76C,EAAQ86C,IAKtFksB,EAAa/uE,UAAUgjD,eAAiB,SAAUlB,EAASmB,EAASJ,GAC5DI,EAAQhmB,eAERgmB,EAAUxmB,GAAaC,WAE3B,IAAI4kB,GAAW2B,EAAQ/U,UAAUntC,KAAKs1C,OAEtCiL,GAAWA,EAASnkB,eAAeV,GAAaC,WAChD,IAAIl7B,GAAOT,IAMX,OALAkiD,GAAQ7V,aAAavP,GAAgB,SAAUr3B,EAAKw2B,GAC3Cx7B,EAAK62C,QAAQ,GAAI7a,IAAUh3B,EAAKw2B,MACjCskB,EAAWA,EAASpkB,qBAAqB12B,EAAKi2B,GAAaC,eAG5D37B,KAAKiuE,eAAehsB,eAAelB,EAASR,EAAUuB,IAKjEksB,EAAa/uE,UAAUm9B,eAAiB,SAAU2kB,GAE9C,MAAOA,IAKXitB,EAAa/uE,UAAUkjD,aAAe,WAClC,OAAO,GAKX6rB,EAAa/uE,UAAUmjD,iBAAmB,WACtC,MAAOpiD,MAAKiuE,gBAKhBD,EAAa/uE,UAAU83C,SAAW,WAC9B,MAAO/2C,MAAKs1C,QAOhB04B,EAAaG,cAAgB,SAAU17C,GACnC,GAAIA,EAAO6lB,WAAY,CACnB,GAAIk2B,GAAY/7C,EAAOmmB,mBACvB,OAAOnmB,GAAOskB,WAAW7L,SAASzY,EAAO8lB,qBAAsBi2B,GAG/D,MAAO/7C,GAAOskB,WAAWlM,WAQjCmjC,EAAaK,YAAc,SAAU57C,GACjC,GAAIA,EAAO+lB,SAAU,CACjB,GAAIi2B,GAAUh8C,EAAOomB,iBACrB,OAAOpmB,GAAOskB,WAAW7L,SAASzY,EAAOgmB,mBAAoBg2B,GAG7D,MAAOh8C,GAAOskB,WAAW9L,WAG1B+iC,KAwBPU,GAA+B,WAI/B,QAASA,GAAcj8C,GACnBzyB,KAAK2uE,cAAgB,GAAIX,IAAav7C,GACtCzyB,KAAKs1C,OAAS7iB,EAAOskB,WACrB/2C,KAAK4uE,OAASn8C,EAAOo8C,WACrB7uE,KAAK8uE,UAAYr8C,EAAOs8C,iBA0N5B,MArNAL,GAAczvE,UAAUitC,YAAc,SAAU8I,EAAMvvC,EAAK04C,EAAU0D,EAAc76C,EAAQ86C,GAIvF,MAHK9hD,MAAK2uE,cAAcr3B,QAAQ,GAAI7a,IAAUh3B,EAAK04C,MAC/CA,EAAWziB,GAAaC,YAExBqZ,EAAKpJ,kBAAkBnmC,GAAKs/B,OAAOoZ,GAE5BnJ,EAEFA,EAAK5I,cAAgBpsC,KAAK4uE,OACxB5uE,KAAK2uE,cACPvsB,mBACAlW,YAAY8I,EAAMvvC,EAAK04C,EAAU0D,EAAc76C,EAAQ86C,GAGrD9hD,KAAKgvE,sBAAsBh6B,EAAMvvC,EAAK04C,EAAUn3C,EAAQ86C,IAMvE4sB,EAAczvE,UAAUgjD,eAAiB,SAAUlB,EAASmB,EAASJ,GACjE,GAAIvB,EACJ,IAAI2B,EAAQhmB,cAAgBgmB,EAAQrwB,UAEhC0uB,EAAW7kB,GAAaC,WAAWwR,UAAUntC,KAAKs1C,YAGlD,IAAkB,EAAdt1C,KAAK4uE,OAAa1sB,EAAQ9V,eAC1B8V,EAAQ9U,UAAUptC,KAAKs1C,QAAS,CAEhCiL,EAAW7kB,GAAaC,WAAWwR,UAAUntC,KAAKs1C,OAElD,IAAI/hC,OAAW,EAEXA,GADAvT,KAAK8uE,SACM5sB,EAAQ/R,uBAAuBnwC,KAAK2uE,cAAcJ,aAAcvuE,KAAKs1C,QAGrE4M,EAAQhS,gBAAgBlwC,KAAK2uE,cAAcL,eAAgBtuE,KAAKs1C,OAG/E,KADA,GAAIvnC,GAAQ,EACLwF,EAASy6B,WAAajgC,EAAQ/N,KAAK4uE,QAAQ,CAC9C,GAAIx5D,GAAO7B,EAASw6B,UAChBkhC,MAAU,EASd,MAPIA,EADAjvE,KAAK8uE,SAED9uE,KAAKs1C,OAAO7K,QAAQzqC,KAAK2uE,cAAcL,eAAgBl5D,IAAS,EAIhEpV,KAAKs1C,OAAO7K,QAAQr1B,EAAMpV,KAAK2uE,cAAcJ,eAAiB,GAQlE,KALAhuB,GAAWA,EAASpkB,qBAAqB/mB,EAAK/W,KAAM+W,EAAKk1B,MACzDv8B,SAQP,CAEDwyC,EAAW2B,EAAQ/U,UAAUntC,KAAKs1C,QAElCiL,EAAWA,EAASnkB,eAAeV,GAAaC,WAChD,IAAImY,OAAY,GACZC,MAAU,GACVjP,MAAM,GACNvxB,MAAW,EACf,IAAIvT,KAAK8uE,SAAU,CACfv7D,EAAWgtC,EAASnQ,mBAAmBpwC,KAAKs1C,QAC5CxB,EAAY9zC,KAAK2uE,cAAcJ,aAC/Bx6B,EAAU/zC,KAAK2uE,cAAcL,cAC7B,IAAIY,GAAiBlvE,KAAKs1C,OAAOvY,YACjC+H,GAAM,SAAUzgC,EAAGwC,GAAK,MAAOqoE,GAAeroE,EAAGxC,QAGjDkP,GAAWgtC,EAASvQ,YAAYhwC,KAAKs1C,QACrCxB,EAAY9zC,KAAK2uE,cAAcL,eAC/Bv6B,EAAU/zC,KAAK2uE,cAAcJ,aAC7BzpC,EAAM9kC,KAAKs1C,OAAOvY,YAItB,KAFA,GAAIhvB,GAAQ,EACRohE,GAAiB,EACd57D,EAASy6B,WAAW,CACvB,GAAI54B,GAAO7B,EAASw6B,WACfohC,GAAkBrqC,EAAIgP,EAAW1+B,IAAS,IAE3C+5D,GAAiB,EAErB,IAAIF,GAAUE,GAAkBphE,EAAQ/N,KAAK4uE,QAAU9pC,EAAI1vB,EAAM2+B,IAAY,CACzEk7B,GACAlhE,IAGAwyC,EAAWA,EAASpkB,qBAAqB/mB,EAAK/W,KAAMq9B,GAAaC,aAKjF,MAAO37B,MAAK2uE,cACPvsB,mBACAH,eAAelB,EAASR,EAAUuB,IAK3C4sB,EAAczvE,UAAUm9B,eAAiB,SAAU2kB,GAE/C,MAAOA,IAKX2tB,EAAczvE,UAAUkjD,aAAe,WACnC,OAAO,GAKXusB,EAAczvE,UAAUmjD,iBAAmB,WACvC,MAAOpiD,MAAK2uE,cAAcvsB,oBAK9BssB,EAAczvE,UAAU83C,SAAW,WAC/B,MAAO/2C,MAAKs1C,QAWhBo5B,EAAczvE,UAAU+vE,sBAAwB,SAAUh6B,EAAMyG,EAAUoC,EAAW72C,EAAQooE,GAEzF,GAAItqC,EACJ,IAAI9kC,KAAK8uE,SAAU,CACf,GAAIO,GAAarvE,KAAKs1C,OAAOvY,YAC7B+H,GAAM,SAAUzgC,EAAGwC,GAAK,MAAOwoE,GAAWxoE,EAAGxC,QAG7CygC,GAAM9kC,KAAKs1C,OAAOvY,YAEtB,IAAIyqB,GAAgBxS,CACpBvtB,GAAKmF,OAAO46B,EAAcpb,eAAiBpsC,KAAK4uE,OAAQ,GACxD,IAAIU,GAAoB,GAAI7yC,IAAUgf,EAAUoC,GAC5C0xB,EAAiBvvE,KAAK8uE,SACpBtnB,EAAc9T,cAAc1zC,KAAKs1C,QACjCkS,EAAc5T,aAAa5zC,KAAKs1C,QAClC25B,EAAUjvE,KAAK2uE,cAAcr3B,QAAQg4B,EACzC,IAAI9nB,EAAczb,SAAS0P,GAAW,CAGlC,IAFA,GAAI+zB,GAAehoB,EAAc5b,kBAAkB6P,GAC/CoD,EAAY73C,EAAO47C,mBAAmB5iD,KAAKs1C,OAAQi6B,EAAgBvvE,KAAK8uE,UACxD,MAAbjwB,IACFA,EAAUxgD,MAAQo9C,GAAY+L,EAAczb,SAAS8S,EAAUxgD,QAIhEwgD,EAAY73C,EAAO47C,mBAAmB5iD,KAAKs1C,OAAQuJ,EAAW7+C,KAAK8uE,SAEvE,IAAIW,GAA2B,MAAb5wB,EAAoB,EAAI/Z,EAAI+Z,EAAWywB,EAEzD,IADsBL,IAAYpxB,EAAUhsB,WAAa49C,GAAe,EAKpE,MAHyB,OAArBL,GACAA,EAAkBptB,iBAAiBlB,GAAOQ,mBAAmB7F,EAAUoC,EAAW2xB,IAE/EhoB,EAAcrrB,qBAAqBsf,EAAUoC,EAG3B,OAArBuxB,GACAA,EAAkBptB,iBAAiBlB,GAAOM,mBAAmB3F,EAAU+zB,GAE3E,IAAInqB,GAAgBmC,EAAcrrB,qBAAqBsf,EAAU/f,GAAaC,WAE9E,OADoC,OAAbkjB,GAAqB7+C,KAAK2uE,cAAcr3B,QAAQuH,IAE1C,MAArBuwB,GACAA,EAAkBptB,iBAAiBlB,GAAOI,iBAAiBrC,EAAUxgD,KAAMwgD,EAAUvU,OAElF+a,EAAclpB,qBAAqB0iB,EAAUxgD,KAAMwgD,EAAUvU,OAG7D+a,EAId,MAAIxH,GAAUhsB,UAERmjB,EAEFi6B,GACDnqC,EAAIyqC,EAAgBD,IAAsB,GACjB,MAArBF,IACAA,EAAkBptB,iBAAiBlB,GAAOM,mBAAmBmuB,EAAelxE,KAAMkxE,EAAejlC,OACjG8kC,EAAkBptB,iBAAiBlB,GAAOI,iBAAiBzF,EAAUoC,KAElE2J,EACFrrB,qBAAqBsf,EAAUoC,GAC/B1hB,qBAAqBozC,EAAelxE,KAAMq9B,GAAaC,aAOzDqZ,GAGR05B,KAwBPgB,GAA6B,WAC7B,QAASA,KACL1vE,KAAK2vE,WAAY,EACjB3vE,KAAK4vE,WAAY,EACjB5vE,KAAK6vE,eAAgB,EACrB7vE,KAAK8vE,SAAU,EACf9vE,KAAK+vE,aAAc,EACnB/vE,KAAK4uE,OAAS,EACd5uE,KAAKgwE,UAAY,GACjBhwE,KAAKiwE,iBAAmB,KACxBjwE,KAAKkwE,gBAAkB,GACvBlwE,KAAKmwE,eAAiB,KACtBnwE,KAAKowE,cAAgB,GACrBpwE,KAAKs1C,OAASxY,GAmWlB,MA9VA4yC,GAAYzwE,UAAUq5C,SAAW,WAC7B,MAAOt4C,MAAK4vE,WAKhBF,EAAYzwE,UAAU8vE,eAAiB,WACnC,MAAuB,KAAnB/uE,KAAKgwE,UAKEhwE,KAAK4vE,UAGJ5vE,KAAKgwE,YAAcN,EAAYW,yBAAyBC,gBAOxEZ,EAAYzwE,UAAUs5C,mBAAqB,WAEvC,MADA9wB,GAAKmF,OAAO5sB,KAAK4vE,UAAW,oCACrB5vE,KAAKiwE,kBAOhBP,EAAYzwE,UAAU25C,kBAAoB,WAEtC,MADAnxB,GAAKmF,OAAO5sB,KAAK4vE,UAAW,oCACxB5vE,KAAK6vE,cACE7vE,KAAKkwE,gBAGLpvC,GAMf4uC,EAAYzwE,UAAUu5C,OAAS,WAC3B,MAAOx4C,MAAK8vE,SAMhBJ,EAAYzwE,UAAUw5C,iBAAmB,WAErC,MADAhxB,GAAKmF,OAAO5sB,KAAK8vE,QAAS,kCACnB9vE,KAAKmwE,gBAOhBT,EAAYzwE,UAAU45C,gBAAkB,WAEpC,MADApxB,GAAKmF,OAAO5sB,KAAK8vE,QAAS,kCACtB9vE,KAAK+vE,YACE/vE,KAAKowE,cAGLrvC,GAMf2uC,EAAYzwE,UAAU85C,SAAW,WAC7B,MAAO/4C,MAAK2vE,WAKhBD,EAAYzwE,UAAU+5C,iBAAmB,WACrC,MAAOh5C,MAAK2vE,WAAgC,KAAnB3vE,KAAKgwE,WAMlCN,EAAYzwE,UAAU4vE,SAAW,WAE7B,MADApnD,GAAKmF,OAAO5sB,KAAK2vE,UAAW,oCACrB3vE,KAAK4uE,QAKhBc,EAAYzwE,UAAU83C,SAAW,WAC7B,MAAO/2C,MAAKs1C,QAMhBo6B,EAAYzwE,UAAUsxE,MAAQ,WAC1B,GAAIjiC,GAAO,GAAIohC,EAaf,OAZAphC,GAAKqhC,UAAY3vE,KAAK2vE,UACtBrhC,EAAKsgC,OAAS5uE,KAAK4uE,OACnBtgC,EAAKshC,UAAY5vE,KAAK4vE,UACtBthC,EAAK2hC,iBAAmBjwE,KAAKiwE,iBAC7B3hC,EAAKuhC,cAAgB7vE,KAAK6vE,cAC1BvhC,EAAK4hC,gBAAkBlwE,KAAKkwE,gBAC5B5hC,EAAKwhC,QAAU9vE,KAAK8vE,QACpBxhC,EAAK6hC,eAAiBnwE,KAAKmwE,eAC3B7hC,EAAKyhC,YAAc/vE,KAAK+vE,YACxBzhC,EAAK8hC,cAAgBpwE,KAAKowE,cAC1B9hC,EAAKgH,OAASt1C,KAAKs1C,OACnBhH,EAAK0hC,UAAYhwE,KAAKgwE,UACf1hC,GAMXohC,EAAYzwE,UAAUi7C,MAAQ,SAAUs2B,GACpC,GAAIl2B,GAAYt6C,KAAKuwE,OAIrB,OAHAj2B,GAAUq1B,WAAY,EACtBr1B,EAAUs0B,OAAS4B,EACnBl2B,EAAU01B,UAAY,GACf11B,GAMXo1B,EAAYzwE,UAAUg7C,aAAe,SAAUu2B,GAC3C,GAAIl2B,GAAYt6C,KAAKuwE,OAIrB,OAHAj2B,GAAUq1B,WAAY,EACtBr1B,EAAUs0B,OAAS4B,EACnBl2B,EAAU01B,UAAYN,EAAYW,yBAAyBC,eACpDh2B,GAMXo1B,EAAYzwE,UAAUk7C,YAAc,SAAUq2B,GAC1C,GAAIl2B,GAAYt6C,KAAKuwE,OAIrB,OAHAj2B,GAAUq1B,WAAY,EACtBr1B,EAAUs0B,OAAS4B,EACnBl2B,EAAU01B,UAAYN,EAAYW,yBAAyBI,gBACpDn2B,GAOXo1B,EAAYzwE,UAAU07C,QAAU,SAAUxP,EAAY1lC,GAClD,GAAI60C,GAAYt6C,KAAKuwE,OAcrB,OAbAj2B,GAAUs1B,WAAY,MACDvvE,KAAf8qC,IACFA,EAAa,MAEjBmP,EAAU21B,iBAAmB9kC,EAClB,MAAP1lC,GACA60C,EAAUu1B,eAAgB,EAC1Bv1B,EAAU41B,gBAAkBzqE,IAG5B60C,EAAUu1B,eAAgB,EAC1Bv1B,EAAU41B,gBAAkB,IAEzB51B,GAOXo1B,EAAYzwE,UAAU27C,MAAQ,SAAUzP,EAAY1lC,GAChD,GAAI60C,GAAYt6C,KAAKuwE,OAcrB,OAbAj2B,GAAUw1B,SAAU,MACCzvE,KAAf8qC,IACFA,EAAa,MAEjBmP,EAAU61B,eAAiBhlC,MACf9qC,KAARoF,GACA60C,EAAUy1B,aAAc,EACxBz1B,EAAU81B,cAAgB3qE,IAG1B60C,EAAUy1B,aAAc,EACxBz1B,EAAU81B,cAAgB,IAEvB91B,GAMXo1B,EAAYzwE,UAAUs7C,QAAU,SAAUjwC,GACtC,GAAIgwC,GAAYt6C,KAAKuwE,OAErB,OADAj2B,GAAUhF,OAAShrC,EACZgwC,GAKXo1B,EAAYzwE,UAAU87C,eAAiB,WACnC,GAAI21B,GAA0BhB,EAAYW,yBACtCvsD,IAaJ,IAZI9jB,KAAK4vE,YACL9rD,EAAI4sD,EAAwBC,mBAAqB3wE,KAAKiwE,iBAClDjwE,KAAK6vE,gBACL/rD,EAAI4sD,EAAwBE,kBAAoB5wE,KAAKkwE,kBAGzDlwE,KAAK8vE,UACLhsD,EAAI4sD,EAAwBG,iBAAmB7wE,KAAKmwE,eAChDnwE,KAAK+vE,cACLjsD,EAAI4sD,EAAwBI,gBAAkB9wE,KAAKowE,gBAGvDpwE,KAAK2vE,UAAW,CAChB7rD,EAAI4sD,EAAwBK,OAAS/wE,KAAK4uE,MAC1C,IAAIoC,GAAWhxE,KAAKgwE,SACH,MAAbgB,IAEIA,EADAhxE,KAAK+uE,iBACM2B,EAAwBJ,eAGxBI,EAAwBD,iBAG3C3sD,EAAI4sD,EAAwBO,WAAaD,EAM7C,MAHIhxE,MAAKs1C,SAAWxY,KAChBhZ,EAAI4sD,EAAwBQ,OAASlxE,KAAKs1C,OAAOzwC,YAE9Cif,GAKX4rD,EAAYzwE,UAAUmqD,aAAe,WACjC,QAASppD,KAAK4vE,WAAa5vE,KAAK8vE,SAAW9vE,KAAK2vE,YAKpDD,EAAYzwE,UAAUgzD,UAAY,WAC9B,MAAOjyD,MAAKopD,gBAAkBppD,KAAKs1C,QAAUxY,IAKjD4yC,EAAYzwE,UAAU2pD,cAAgB,WAClC,MAAI5oD,MAAKopD,eACE,GAAIxH,IAAc5hD,KAAK+2C,YAEzB/2C,KAAK+4C,WACH,GAAI21B,IAAc1uE,MAGlB,GAAIguE,IAAahuE,OAQhC0vE,EAAYzwE,UAAUsrE,4BAA8B,WAChD,GAAI4G,GAAiBzB,EAAY0B,sBAC7BC,IACJ,IAAIrxE,KAAKiyD,YACL,MAAOof,EAEX,IAAI92B,EAmCJ,OAlCIv6C,MAAKs1C,SAAWxY,GAChByd,EAAU42B,EAAer0C,eAEpB98B,KAAKs1C,SAAWV,GACrB2F,EAAU42B,EAAev8B,YAEpB50C,KAAKs1C,SAAWlK,GACrBmP,EAAU42B,EAAe/lC,WAGzB3jB,EAAKmF,OAAO5sB,KAAKs1C,iBAAkBT,IAAW,4BAC9C0F,EAAUv6C,KAAKs1C,OAAOzwC,YAE1BwsE,EAAGF,EAAeG,UAAY7pD,EAAKpV,UAAUkoC,GACzCv6C,KAAK4vE,YACLyB,EAAGF,EAAeI,UAAY9pD,EAAKpV,UAAUrS,KAAKiwE,kBAC9CjwE,KAAK6vE,gBACLwB,EAAGF,EAAeI,WAAa,IAAM9pD,EAAKpV,UAAUrS,KAAKkwE,mBAG7DlwE,KAAK8vE,UACLuB,EAAGF,EAAeK,QAAU/pD,EAAKpV,UAAUrS,KAAKmwE,gBAC5CnwE,KAAK+vE,cACLsB,EAAGF,EAAeK,SAAW,IAAM/pD,EAAKpV,UAAUrS,KAAKowE,iBAG3DpwE,KAAK2vE,YACD3vE,KAAK+uE,iBACLsC,EAAGF,EAAeM,gBAAkBzxE,KAAK4uE,OAGzCyC,EAAGF,EAAeO,eAAiB1xE,KAAK4uE,QAGzCyC,GAQX3B,EAAYW,0BACRM,kBAAmB,KACnBC,iBAAkB,KAClBC,gBAAiB,KACjBC,eAAgB,KAChBC,MAAO,IACPE,UAAW,KACXX,eAAgB,IAChBG,gBAAiB,IACjBS,MAAO,KAQXxB,EAAY0B,uBACRE,SAAU,UACVx0C,eAAgB,YAChB8X,YAAa,SACbxJ,UAAW,OACXmmC,SAAU,UACVC,OAAQ,QACRC,eAAgB,eAChBC,cAAe,eAOnBhC,EAAY55D,QAAU,GAAI45D,GACnBA,KAkBPlyC,GAA2B,SAAUxK,GAarC,QAASwK,GAAUwa,EAAMnV,GAErB,KAAMmV,YAAgB+yB,KAClB,KAAM,IAAIznE,OAAM,4DAIpB,OADQ0vB,GAAO/0B,KAAK+B,KAAMg4C,EAAMnV,EAAM6sC,GAAY55D,SAAS,IAAU9V,KA6OzE,MA/PAwsB,GAAQgH,UAAUgK,EAAWxK,GAsB7BwK,EAAUv+B,UAAU42C,OAAS,WAEzB,MADApuB,GAAKsN,iBAAiB,gBAAiB,EAAG,EAAGj1B,UAAU0B,QACnDxB,KAAK6iC,KAAKhR,UACH,KAEA7xB,KAAK6iC,KAAKmB,WAMzBxG,EAAUv+B,UAAUmlC,MAAQ,SAAU7J,GAWlC,MAVA9S,GAAKsN,iBAAiB,kBAAmB,EAAG,EAAGj1B,UAAU0B,QAC/B,gBAAf+4B,GACPA,EAAa9zB,OAAO8zB,GAEbA,YAAsBgJ,MACA,OAAzBvjC,KAAK6iC,KAAKgB,WACVgF,GAAuB,kBAAmB,EAAGtO,GAAY,GAEzDqO,GAAmB,kBAAmB,EAAGrO,GAAY,IAEtD,GAAIiD,GAAUx9B,KAAKg4C,KAAMh4C,KAAK6iC,KAAKuB,MAAM7J,KAGpDiD,EAAUv+B,UAAUk3C,UAAY,WAC5B1uB,EAAKsN,iBAAiB,mBAAoB,EAAG,EAAGj1B,UAAU0B,OAC1D,IAAImwE,GAAa3xE,KAAK6iC,KAAKsB,QAC3B,OAAsB,QAAfwtC,EAAsB,KAAO,GAAIn0C,GAAUx9B,KAAKg4C,KAAM25B,IAGjEn0C,EAAUv+B,UAAU2yE,QAAU,WAC1BnqD,EAAKsN,iBAAiB,iBAAkB,EAAG,EAAGj1B,UAAU0B,OAExD,KADA,GAAImc,GAAM3d,KACiB,OAApB2d,EAAIw4B,aACPx4B,EAAMA,EAAIw4B,WAEd,OAAOx4B,IAGX6f,EAAUv+B,UAAU4yE,aAAe,WAC/B,MAAO7xE,MAAKg4C,KAAKh0B,UAOrBwZ,EAAUv+B,UAAUgV,IAAM,SAAU04D,EAAQtjC,GACxC5hB,EAAKsN,iBAAiB,gBAAiB,EAAG,EAAGj1B,UAAU0B,QACvDsnC,GAAqB,gBAAiB9oC,KAAK6iC,MAC3CiF,GAAwB,gBAAiB,EAAG6kC,EAAQ3sE,KAAK6iC,MAAM,GAC/Dpb,EAAK6E,iBAAiB,gBAAiB,EAAG+c,GAAY,EACtD,IAAI3oC,GAAW,GAAI+mB,GAAKkI,QAGxB,OAFA3vB,MAAKg4C,KAAKxO,gBAAgBxpC,KAAK6iC,KAAM8pC,EACvB,KAAMjsE,EAASkvB,aAAayZ,IACnC3oC,EAASQ,SAOpBs8B,EAAUv+B,UAAU20B,OAAS,SAAU8V,EAAeL,GAGlD,GAFA5hB,EAAKsN,iBAAiB,mBAAoB,EAAG,EAAGj1B,UAAU0B,QAC1DsnC,GAAqB,mBAAoB9oC,KAAK6iC,MAC1CjgC,MAAMkG,QAAQ4gC,GAAgB,CAE9B,IAAK,GADDC,MACK5rC,EAAI,EAAGA,EAAI2rC,EAAcloC,SAAUzD,EACxC4rC,EAAiB,GAAK5rC,GAAK2rC,EAAc3rC,EAE7C2rC,GAAgBC,EAChBxmC,EAAK,wMAKTolC,GAA6B,mBAAoB,EAAGmB,EAAe1pC,KAAK6iC,MAAM,GAC9Epb,EAAK6E,iBAAiB,mBAAoB,EAAG+c,GAAY,EACzD,IAAI3oC,GAAW,GAAI+mB,GAAKkI,QAExB,OADA3vB,MAAKg4C,KAAKpkB,OAAO5zB,KAAK6iC,KAAM6G,EAAehpC,EAASkvB,aAAayZ,IAC1D3oC,EAASQ,SAQpBs8B,EAAUv+B,UAAUuqC,gBAAkB,SAAUmjC,EAAQ35B,EAAa3J,GAMjE,GALA5hB,EAAKsN,iBAAiB,4BAA6B,EAAG,EAAGj1B,UAAU0B,QACnEsnC,GAAqB,4BAA6B9oC,KAAK6iC,MACvDiF,GAAwB,4BAA6B,EAAG6kC,EAAQ3sE,KAAK6iC,MAAM,GAC3E2F,GAAiB,4BAA6B,EAAGwK,GAAa,GAC9DvrB,EAAK6E,iBAAiB,4BAA6B,EAAG+c,GAAY,GAC5C,YAAlBrpC,KAAK61C,UAA4C,UAAlB71C,KAAK61C,SACpC,KAAM,qCACF71C,KAAK61C,SACL,yBACR,IAAIn1C,GAAW,GAAI+mB,GAAKkI,QAExB,OADA3vB,MAAKg4C,KAAKxO,gBAAgBxpC,KAAK6iC,KAAM8pC,EAAQ35B,EAAatyC,EAASkvB,aAAayZ,IACzE3oC,EAASQ,SAMpBs8B,EAAUv+B,UAAU4/B,OAAS,SAAUwK,GAInC,MAHA5hB,GAAKsN,iBAAiB,mBAAoB,EAAG,EAAGj1B,UAAU0B,QAC1DsnC,GAAqB,mBAAoB9oC,KAAK6iC,MAC9Cpb,EAAK6E,iBAAiB,mBAAoB,EAAG+c,GAAY,GAClDrpC,KAAKiU,IAAI,KAAMo1B,IAQ1B7L,EAAUv+B,UAAU6yE,YAAc,SAAUC,EAAmB1oC,EAAY2oC,GAQvE,GAPAvqD,EAAKsN,iBAAiB,wBAAyB,EAAG,EAAGj1B,UAAU0B,QAC/DsnC,GAAqB,wBAAyB9oC,KAAK6iC,MACnDpb,EAAK6E,iBAAiB,wBAAyB,EAAGylD,GAAmB,GACrEtqD,EAAK6E,iBAAiB,wBAAyB,EAAG+c,GAAY,GAG9DL,GAAgB,wBAAyB,EAAGgpC,GAAc,GACpC,YAAlBhyE,KAAK61C,UAA4C,UAAlB71C,KAAK61C,SACpC,KAAM,iCACF71C,KAAK61C,SACL,8BACax1C,KAAjB2xE,IACAA,GAAe,EACnB,IAAItxE,GAAW,GAAI+mB,GAAKkI,QAgBxB,OAf0B,kBAAf0Z,IACP3oC,EAASQ,QAAQ2qB,MAAM,cAa3B7rB,KAAKg4C,KAAKi6B,iBAAiBjyE,KAAK6iC,KAAMkvC,EAXhB,SAAUxf,EAAUzoB,EAAW3kB,GAC7CotC,EACA7xD,EAASO,OAAOsxD,GAGhB7xD,EAASM,QAAQ,GAAI6oC,IAAkBC,EAAW3kB,IAE5B,kBAAfkkB,IACPA,EAAWkpB,EAAUzoB,EAAW3kB,IAGkC6sD,GACnEtxE,EAASQ,SAOpBs8B,EAAUv+B,UAAUizE,YAAc,SAAUz2C,EAAU4N,GAClD5hB,EAAKsN,iBAAiB,wBAAyB,EAAG,EAAGj1B,UAAU0B,QAC/DsnC,GAAqB,wBAAyB9oC,KAAK6iC,MACnD2F,GAAiB,wBAAyB,EAAG/M,GAAU,GACvDhU,EAAK6E,iBAAiB,wBAAyB,EAAG+c,GAAY,EAC9D,IAAI3oC,GAAW,GAAI+mB,GAAKkI,QAExB,OADA3vB,MAAKg4C,KAAKxO,gBAAgBxpC,KAAK6iC,KAAKuB,MAAM,aAAc3I,EAAU,KAAM/6B,EAASkvB,aAAayZ,IACvF3oC,EAASQ,SAOpBs8B,EAAUv+B,UAAU0B,KAAO,SAAUpB,EAAO8pC,GACxC5hB,EAAKsN,iBAAiB,iBAAkB,EAAG,EAAGj1B,UAAU0B,QACxDsnC,GAAqB,iBAAkB9oC,KAAK6iC,MAC5CiF,GAAwB,iBAAkB,EAAGvoC,EAAOS,KAAK6iC,MAAM,GAC/Dpb,EAAK6E,iBAAiB,iBAAkB,EAAG+c,GAAY,EACvD,IASInoC,GATAgwB,EAAMlxB,KAAKg4C,KAAK+zB,aAChB1tE,EAAO2rC,GAAW9Y,GAMlBihD,EAAmBnyE,KAAKokC,MAAM/lC,GAC9B+zE,EAAUpyE,KAAKokC,MAAM/lC,EAazB,OAVI6C,GADS,MAAT3B,EACU4yE,EAAiBl+D,IAAI1U,EAAO8pC,GAAY/nC,KAAK,WAAc,MAAO8wE,KAGlEryE,QAAQiB,QAAQoxE,GAE9BD,EAAiB7wE,KAAOJ,EAAQI,KAAK5B,KAAKwB,GAC1CixE,EAAiBtmD,MAAQ3qB,EAAQI,KAAK5B,KAAKwB,MAASb,IAC1B,kBAAfgpC,IACPnoC,EAAQ2qB,MAAM,cAEXsmD,GAKX30C,EAAUv+B,UAAUg6D,aAAe,WAE/B,MADAnwB,IAAqB,yBAA0B9oC,KAAK6iC,MAC7C,GAAIqG,IAAalpC,KAAKg4C,KAAMh4C,KAAK6iC,OAE5CrkC,OAAOC,eAAe++B,EAAUv+B,UAAW,YACvCL,IAAK,WACD,MAAOoB,MAAK6xE,gBAEhBlzE,YAAY,EACZD,cAAc,IAElBF,OAAOC,eAAe++B,EAAUv+B,UAAW,OACvCL,IAAK,WACD,MAAOoB,MAAK61C,UAEhBl3C,YAAY,EACZD,cAAc,IAElBF,OAAOC,eAAe++B,EAAUv+B,UAAW,UACvCL,IAAK,WACD,MAAOoB,MAAKm2C,aAEhBx3C,YAAY,EACZD,cAAc,IAElBF,OAAOC,eAAe++B,EAAUv+B,UAAW,QACvCL,IAAK,WACD,MAAOoB,MAAK4xE,WAEhBjzE,YAAY,EACZD,cAAc,IAEX8+B,GACTC,GAOFA,IAAM+W,uBAAyBhX,GAC/BusB,GAAUvV,uBAAyBhX,EAoBnC,IA+NI60C,IA/NAC,GAA0B,WAC1B,QAASA,KAGLtyE,KAAKma,YACLna,KAAKuyE,WAAa,EAClBvyE,KAAKT,MAAQ,KAEjB,MAAO+yE,MAOPE,GAAsB,WAOtB,QAASA,GAAK1pD,EAAO2pD,EAASr9B,OACZ,KAAVtsB,IAAoBA,EAAQ,QAChB,KAAZ2pD,IAAsBA,EAAU,UACtB,KAAVr9B,IAAoBA,EAAQ,GAAIk9B,KACpCtyE,KAAK8oB,MAAQA,EACb9oB,KAAKyyE,QAAUA,EACfzyE,KAAKo1C,MAAQA,EA0KjB,MAlKAo9B,GAAKvzE,UAAUyzE,QAAU,SAAUC,GAI/B,IAFA,GACkBv9D,GADdytB,EAAO8vC,YAAmBpvC,IAAOovC,EAAU,GAAIpvC,IAAKovC,GACpDvuC,EAAQpkC,KACwB,QAA5BoV,EAAOytB,EAAKgB,aAAsB,CAEtCO,EAAQ,GAAIouC,GAAKp9D,EAAMgvB,EADP3c,EAAK8J,QAAQ6S,EAAMgR,MAAMj7B,SAAU/E,IAAS,GAAIk9D,KAEhEzvC,EAAOA,EAAKkB,WAEhB,MAAOK,IAOXouC,EAAKvzE,UAAUutC,SAAW,WACtB,MAAOxsC,MAAKo1C,MAAM71C,OAOtBizE,EAAKvzE,UAAU2zE,SAAW,SAAUrzE,GAChCkoB,EAAKmF,WAAwB,KAAVrtB,EAAuB,iCAC1CS,KAAKo1C,MAAM71C,MAAQA,EACnBS,KAAK6yE,kBAKTL,EAAKvzE,UAAUs8C,MAAQ,WACnBv7C,KAAKo1C,MAAM71C,MAAQ,KACnBS,KAAKo1C,MAAMj7B,YACXna,KAAKo1C,MAAMm9B,WAAa,EACxBvyE,KAAK6yE,kBAKTL,EAAKvzE,UAAU22C,YAAc,WACzB,MAAO51C,MAAKo1C,MAAMm9B,WAAa,GAKnCC,EAAKvzE,UAAU4yB,QAAU,WACrB,MAA2B,QAApB7xB,KAAKwsC,aAAwBxsC,KAAK41C,eAO7C48B,EAAKvzE,UAAUotC,aAAe,SAAUmC,GACpC,GAAI9rB,GAAQ1iB,IACZynB,GAAK9a,QAAQ3M,KAAKo1C,MAAMj7B,SAAU,SAAUiqB,EAAOiN,GAC/C7C,EAAO,GAAIgkC,GAAKpuC,EAAO1hB,EAAO2uB,OAYtCmhC,EAAKvzE,UAAU6zE,kBAAoB,SAAUtkC,EAAQukC,EAAaC,GAC1DD,IAAgBC,GAChBxkC,EAAOxuC,MACXA,KAAKqsC,aAAa,SAAUjI,GACxBA,EAAM0uC,kBAAkBtkC,GAAyB,EAAMwkC,KAEvDD,GAAeC,GACfxkC,EAAOxuC,OAUfwyE,EAAKvzE,UAAUg0E,gBAAkB,SAAUzkC,EAAQukC,GAE/C,IADA,GAAIzoC,GAAOyoC,EAAc/yE,KAAOA,KAAKmkC,SACrB,OAATmG,GAAe,CAClB,GAAIkE,EAAOlE,GACP,OAAO,CAEXA,GAAOA,EAAKnG,SAEhB,OAAO,GASXquC,EAAKvzE,UAAUi0E,oCAAsC,SAAU1kC,GAC3DxuC,KAAKqsC,aAAa,SAAUjI,GACC,OAArBA,EAAMoI,WACNgC,EAAOpK,GAEPA,EAAM8uC,oCAAoC1kC,MAMtDgkC,EAAKvzE,UAAU4jC,KAAO,WAClB,MAAO,IAAIU,IAAsB,OAAjBvjC,KAAKyyE,QACfzyE,KAAK8oB,MACL9oB,KAAKyyE,QAAQ5vC,OAAS,IAAM7iC,KAAK8oB,QAK3C0pD,EAAKvzE,UAAUZ,KAAO,WAClB,MAAO2B,MAAK8oB,OAKhB0pD,EAAKvzE,UAAUklC,OAAS,WACpB,MAAOnkC,MAAKyyE,SAOhBD,EAAKvzE,UAAU4zE,eAAiB,WACP,OAAjB7yE,KAAKyyE,SACLzyE,KAAKyyE,QAAQU,aAAanzE,KAAK8oB,MAAO9oB,OAS9CwyE,EAAKvzE,UAAUk0E,aAAe,SAAUtnC,EAAWzH,GAC/C,GAAIgvC,GAAahvC,EAAMvS,UACnBwhD,EAAc5rD,EAAKhB,SAASzmB,KAAKo1C,MAAMj7B,SAAU0xB,EACjDunC,IAAcC,SACPrzE,MAAKo1C,MAAMj7B,SAAS0xB,GAC3B7rC,KAAKo1C,MAAMm9B,aACXvyE,KAAK6yE,kBAECO,GAAeC,IACrBrzE,KAAKo1C,MAAMj7B,SAAS0xB,GAAazH,EAAMgR,MACvCp1C,KAAKo1C,MAAMm9B,aACXvyE,KAAK6yE,mBAGNL,MA0BX,SAAWH,GAIPA,EAAkBA,EAAA,IAA2B,GAAK,MAGlDA,EAAkBA,EAAA,KAA4B,GAAK,OAGnDA,EAAkBA,EAAA,UAAiC,GAAK,YAGxDA,EAAkBA,EAAA,iBAAwC,GAAK,mBAE/DA,EAAkBA,EAAA,YAAmC,GAAK,eAC3DA,KAAsBA,QAQzBtH,GAAKuI,yBAA2B,GAKhCvI,GAAK9rE,UAAUwsE,mBAAqB,WAOhCzrE,KAAKuzE,sBAAwB,GAAIf,KAUrCzH,GAAK9rE,UAAUgzE,iBAAmB,SAAUpvC,EAAMkvC,EAAmB1oC,EAAY2oC,GAC7EhyE,KAAK64D,KAAK,kBAAoBh2B,EAE9B,IAAI2wC,GAAgB,aAChBC,EAAW,GAAIj2C,IAAUx9B,KAAM6iC,EACnC4wC,GAASvuD,GAAG,QAASsuD,EACrB,IAAIE,GAAY,WACZD,EAASh6B,IAAI,QAAS+5B,IAGtB1B,GACAjvC,KAAMA,EACNjP,OAAQm+C,EACR1oC,WAAYA,EAEZipB,OAAQ,KAERqhB,MAAOp0C,IAEPyyC,aAAcA,EAEd4B,WAAY,EAEZF,UAAWA,EAEXG,YAAa,KACbC,eAAgB,KAChBC,qBAAsB,KACtBC,yBAA0B,KAC1BC,8BAA+B,MAG/BC,EAAel0E,KAAKm0E,gBAAgBtxC,EACxCivC,GAAYiC,qBAAuBG,CACnC,IAAIvH,GAASmF,EAAYl+C,OAAOsgD,EAAazxE,MAC7C,QAAepC,KAAXssE,GAKA,GAHAmF,EAAY4B,YACZ5B,EAAYkC,yBAA2B,KACvClC,EAAYmC,8BAAgC,KACxCnC,EAAYzoC,WAAY,CAExB,GAAIlkB,GAAW,GAAIgwB,IAAa28B,EAAYiC,qBAAsB,GAAIv2C,IAAUx9B,KAAM8xE,EAAYjvC,MAAO/F,GACzGg1C,GAAYzoC,WAAW,MAAM,EAAOlkB,QAGvC,CACD4iB,GAAqB,qCAAsC4kC,EAAQmF,EAAYjvC,MAE/EivC,EAAYxf,OAAS+f,GAAkB+B,GACvC,IAAIC,GAAYr0E,KAAKuzE,sBAAsBb,QAAQ7vC,GAC/CyxC,EAAYD,EAAU7nC,cAC1B8nC,GAAU3zE,KAAKmxE,GACfuC,EAAUzB,SAAS0B,EAInB,IAAIC,OAAkB,EACtB,IAAsB,gBAAX5H,IACI,OAAXA,GACAllD,EAAKhB,SAASkmD,EAAQ,aACtB4H,EAAkB9sD,EAAK8J,QAAQo7C,EAAQ,aACvCllD,EAAKmF,OAAOib,GAAgB0sC,GAAkB,wHAG7C,CAGDA,GAFkBv0E,KAAK8rE,gBAAgBlmB,uBAAuB/iB,IAC1DnH,GAAaC,YACaa,cAAc/5B,MAEhD8xE,EAAoDA,CACpD,IAAIp4B,GAAen8C,KAAKksE,uBACpBU,EAAoBrxC,EAAeoxC,EAAQ4H,GAC3C3pC,EAAU0R,GAA6BswB,EAAmBzwB,EAC9D21B,GAAYkC,yBAA2BpH,EACvCkF,EAAYmC,8BAAgCrpC,EAC5CknC,EAAYgC,eAAiB9zE,KAAK0sE,iBAElC1sE,MAAKkrE,YAAYhV,0BAA0BrzB,EAD9B7iC,KAAK8rE,gBAAgBhd,mBAAmBjsB,EAAM+H,EAASknC,EAAYgC,eAAgBhC,EAAYE,eAE5GhyE,KAAKw0E,2BASbzJ,GAAK9rE,UAAUk1E,gBAAkB,SAAUtxC,EAAM4xC,GAC7C,MAAQz0E,MAAK8rE,gBAAgBlmB,uBAAuB/iB,EAAM4xC,IACtD/4C,GAAaC,YAYrBovC,GAAK9rE,UAAUu1E,uBAAyB,SAAUlqC,GAC9C,GAAI5nB,GAAQ1iB,IAMZ,QALa,KAATsqC,IAAmBA,EAAOtqC,KAAKuzE,uBAE9BjpC,GACDtqC,KAAK00E,qCAAqCpqC,GAEtB,OAApBA,EAAKkC,WAAqB,CAC1B,GAAImoC,GAAQ30E,KAAK40E,uBAAuBtqC,EACxC7iB,GAAKmF,OAAO+nD,EAAMnzE,OAAS,EAAG,wCACjBmzE,GAAMriD,MAAM,SAAUw/C,GAAe,MAAOA,GAAYxf,SAAW+f,GAAkB+B,OAG9Fp0E,KAAK60E,sBAAsBvqC,EAAKzH,OAAQ8xC,OAGvCrqC,GAAKsL,eACVtL,EAAK+B,aAAa,SAAUpQ,GACxBvZ,EAAM8xD,uBAAuBv4C,MAWzC8uC,GAAK9rE,UAAU41E,sBAAwB,SAAUhyC,EAAM8xC,GASnD,IAAK,GARDjyD,GAAQ1iB,KAER80E,EAAeH,EAAMxwD,IAAI,SAAU4wD,GACnC,MAAOA,GAAIjB,iBAEXkB,EAAch1E,KAAKm0E,gBAAgBtxC,EAAMiyC,GACzCG,EAAaD,EACbE,EAAaF,EAAYvoC,OACpB1uC,EAAI,EAAGA,EAAI42E,EAAMnzE,OAAQzD,IAAK,CACnC,GAAIg3E,GAAMJ,EAAM52E,EAChB0pB,GAAKmF,OAAOmoD,EAAIziB,SAAW+f,GAAkB+B,IAAK,iEAClDW,EAAIziB,OAAS+f,GAAkB8C,KAC/BJ,EAAInB,YAGJqB,GAAaA,EAAW/oC,YAFL3I,GAAKgB,aAAa1B,EAAMkyC,EAAIlyC,MAEuBkyC,EAAIf,0BAE9E,GAAIoB,GAAaH,EAAWxyE,KAAI,GAC5B4yE,EAAaxyC,CAEjB7iC,MAAK+0D,QAAQmP,IAAImR,EAAWxwE,WAAYuwE,EAAY,SAAU9iB,GAC1D5vC,EAAMm2C,KAAK,4BACPh2B,KAAMwyC,EAAWxwE,WACjBytD,OAAQA,GAEZ,IAAIvK,KACJ,IAAe,OAAXuK,EAAiB,CAIjB,IAAK,GADDjZ,MACKt7C,EAAI,EAAGA,EAAI42E,EAAMnzE,OAAQzD,IAAK,CAGnC,GAFA42E,EAAM52E,GAAGu0D,OAAS+f,GAAkBiD,UACpCvtB,EAASA,EAAOhiD,OAAO2c,EAAMopD,gBAAgBpnB,aAAaiwB,EAAM52E,GAAG+1E,iBAC/Da,EAAM52E,GAAGsrC,WAAY,CAErB,GAAIiB,GAAOqqC,EAAM52E,GAAGk2E,8BAChBt2D,EAAM,GAAI6f,IAAU9a,EAAOiyD,EAAM52E,GAAG8kC,MACpC1d,EAAW,GAAIgwB,IAAa7K,EAAM3sB,EAAKmf,GAC3Cuc,GAAU14C,KAAKg0E,EAAM52E,GAAGsrC,WAAW3pC,KAAK,KAAM,MAAM,EAAMylB,IAE9DwvD,EAAM52E,GAAG21E,YAGbhxD,EAAMgyD,qCAAqChyD,EAAM6wD,sBAAsBb,QAAQ7vC,IAE/EngB,EAAM8xD,yBACN9xD,EAAMwoD,YAAYhV,0BAA0BrzB,EAAMklB,EAElD,KAAK,GAAIhqD,GAAI,EAAGA,EAAIs7C,EAAU73C,OAAQzD,IAClCmlC,GAAemW,EAAUt7C,QAG5B,CAED,GAAe,cAAXu0D,EACA,IAAK,GAAIv0D,GAAI,EAAGA,EAAI42E,EAAMnzE,OAAQzD,IAE1B42E,EAAM52E,GAAGu0D,OADTqiB,EAAM52E,GAAGu0D,SAAW+f,GAAkBkD,iBACpBlD,GAAkBmD,YAElBnD,GAAkB+B,QAG3C,CACDjxE,EAAK,kBAAoBkyE,EAAWxwE,WAAa,YAAcytD,EAC/D,KAAK,GAAIv0D,GAAI,EAAGA,EAAI42E,EAAMnzE,OAAQzD,IAC9B42E,EAAM52E,GAAGu0D,OAAS+f,GAAkBmD,YACpCb,EAAM52E,GAAG81E,YAAcvhB,EAG/B5vC,EAAM4pD,mBAAmBzpC,KAE9BqyC,IAcPnK,GAAK9rE,UAAUqtE,mBAAqB,SAAUnW,GAC1C,GAAIsf,GAA0Bz1E,KAAK01E,4BAA4Bvf,GAC3DtzB,EAAO4yC,EAAwB5yC,MAGnC,OADA7iC,MAAK21E,uBADO31E,KAAK40E,uBAAuBa,GACL5yC,GAC5BA,GASXkoC,GAAK9rE,UAAU02E,uBAAyB,SAAUhB,EAAO9xC,GACrD,GAAqB,IAAjB8xC,EAAMnzE,OAAV,CAcA,IAAK,GATD63C,MACA0O,KAEA6tB,EAAcjB,EAAMprD,OAAO,SAAUwO,GACrC,MAAOA,GAAEu6B,SAAW+f,GAAkB+B,MAEtCU,EAAec,EAAYzxD,IAAI,SAAU4T,GACzC,MAAOA,GAAE+7C,iBAEJ/1E,EAAI,EAAGA,EAAI42E,EAAMnzE,OAAQzD,IAAK,CACnC,GAAI+zE,GAAc6C,EAAM52E,GACpBwmC,EAAehB,GAAKgB,aAAa1B,EAAMivC,EAAYjvC,MACnDgzC,GAAmB,EAAOhC,MAAc,EAE5C,IADApsD,EAAKmF,OAAwB,OAAjB2X,EAAuB,iEAC/ButC,EAAYxf,SAAW+f,GAAkBmD,YACzCK,GAAmB,EACnBhC,EAAc/B,EAAY+B,YAC1B9rB,EAASA,EAAOhiD,OAAO/F,KAAK8rE,gBAAgBpnB,aAAaotB,EAAYgC,gBAAgB,QAEpF,IAAIhC,EAAYxf,SAAW+f,GAAkB+B,IAC9C,GAAItC,EAAY8B,YAAc7I,GAAKuI,yBAC/BuC,GAAmB,EACnBhC,EAAc,WACd9rB,EAASA,EAAOhiD,OAAO/F,KAAK8rE,gBAAgBpnB,aAAaotB,EAAYgC,gBAAgB,QAEpF,CAED,GAAIgC,GAAc91E,KAAKm0E,gBAAgBrC,EAAYjvC,KAAMiyC,EACzDhD,GAAYiC,qBAAuB+B,CACnC,IAAI/mB,GAAU4lB,EAAM52E,GAAG61B,OAAOkiD,EAAYrzE,MAC1C,QAAgBpC,KAAZ0uD,EAAuB,CACvBhnB,GAAqB,qCAAsCgnB,EAAS+iB,EAAYjvC,KAChF,IAAIkzC,GAAcx6C,EAAewzB,GAC7BinB,EAAyC,gBAAZjnB,IAClB,MAAXA,GACAtnC,EAAKhB,SAASsoC,EAAS,YACtBinB,KAEDD,EAAcA,EAAY35C,eAAe05C,EAAYt5C,eAEzD,IAAIy5C,GAAanE,EAAYgC,eACzB33B,EAAen8C,KAAKksE,uBACpBgK,EAAkB55B,GAA6By5B,EAAa55B,EAChE21B,GAAYkC,yBAA2B+B,EACvCjE,EAAYmC,8BAAgCiC,EAC5CpE,EAAYgC,eAAiB9zE,KAAK0sE,kBAElCoI,EAAa92D,OAAO82D,EAAan/C,QAAQsgD,GAAa,GACtDluB,EAASA,EAAOhiD,OAAO/F,KAAK8rE,gBAAgBhd,mBAAmBgjB,EAAYjvC,KAAMqzC,EAAiBpE,EAAYgC,eAAgBhC,EAAYE,eAC1IjqB,EAASA,EAAOhiD,OAAO/F,KAAK8rE,gBAAgBpnB,aAAauxB,GAAY,QAGrEJ,IAAmB,EACnBhC,EAAc,SACd9rB,EAASA,EAAOhiD,OAAO/F,KAAK8rE,gBAAgBpnB,aAAaotB,EAAYgC,gBAAgB,IAMjG,GAFA9zE,KAAKkrE,YAAYhV,0BAA0BrzB,EAAMklB,GACjDA,KACI8tB,IAEAlB,EAAM52E,GAAGu0D,OAAS+f,GAAkBiD,UAGpC,SAAW5B,GACPxxE,WAAWwxE,EAAWlwE,KAAKgF,MAAM,KAClCmsE,EAAM52E,GAAG21E,WACRiB,EAAM52E,GAAGsrC,YACT,GAAoB,WAAhBwqC,EAA0B,CAC1B,GAAIl2D,GAAM,GAAI6f,IAAUx9B,KAAM20E,EAAM52E,GAAG8kC,MAEnCszC,EAAiCxB,EAAM52E,GAAGg2E,qBAC1C5uD,EAAW,GAAIgwB,IAAaghC,EAAWx4D,EAAKmf,GAChDuc,GAAU14C,KAAKg0E,EAAM52E,GAAGsrC,WAAW3pC,KAAK,KAAM,MAAM,EAAOylB,QAG3Dk0B,GAAU14C,KAAKg0E,EAAM52E,GAAGsrC,WAAW3pC,KAAK,KAAM,GAAI4D,OAAMuwE,IAAc,EAAO,OAM7F7zE,KAAK00E,qCAAqC10E,KAAKuzE,sBAE/C,KAAK,GAAIx1E,GAAI,EAAGA,EAAIs7C,EAAU73C,OAAQzD,IAClCmlC,GAAemW,EAAUt7C,GAG7BiC,MAAKw0E,2BAUTzJ,GAAK9rE,UAAUy2E,4BAA8B,SAAU7yC,GAInD,IAHA,GAAIsJ,GAEAiqC,EAAkBp2E,KAAKuzE,sBACU,QAA7BpnC,EAAQtJ,EAAKgB,aACc,OAA/BuyC,EAAgB5pC,YAChB4pC,EAAkBA,EAAgB1D,QAAQvmC,GAC1CtJ,EAAOA,EAAKkB,UAEhB,OAAOqyC,IASXrL,GAAK9rE,UAAU21E,uBAAyB,SAAUwB,GAE9C,GAAIC,KAMJ,OALAr2E,MAAKs2E,mCAAmCF,EAAiBC,GAEzDA,EAAiB/0C,KAAK,SAAUj9B,EAAGwC,GAC/B,MAAOxC,GAAEsvE,MAAQ9sE,EAAE8sE,QAEhB0C,GAOXtL,GAAK9rE,UAAUq3E,mCAAqC,SAAUhsC,EAAMqqC,GAChE,GAAIjyD,GAAQ1iB,KACRs0E,EAAYhqC,EAAKkC,UACrB,IAAkB,OAAd8nC,EACA,IAAK,GAAIv2E,GAAI,EAAGA,EAAIu2E,EAAU9yE,OAAQzD,IAClC42E,EAAMh0E,KAAK2zE,EAAUv2E,GAG7BusC,GAAK+B,aAAa,SAAUjI,GACxB1hB,EAAM4zD,mCAAmClyC,EAAOuwC,MASxD5J,GAAK9rE,UAAUy1E,qCAAuC,SAAUpqC,GAC5D,GAAI5nB,GAAQ1iB,KACR20E,EAAQrqC,EAAKkC,UACjB,IAAImoC,EAAO,CAEP,IAAK,GADD4B,GAAK,EACAC,EAAO,EAAGA,EAAO7B,EAAMnzE,OAAQg1E,IAChC7B,EAAM6B,GAAMlkB,SAAW+f,GAAkBiD,YACzCX,EAAM4B,GAAM5B,EAAM6B,GAClBD,IAGR5B,GAAMnzE,OAAS+0E,EACfjsC,EAAKsoC,SAAS+B,EAAMnzE,OAAS,EAAImzE,EAAQ,MAE7CrqC,EAAK+B,aAAa,SAAUpQ,GACxBvZ,EAAMgyD,qCAAqCz4C,MAWnD8uC,GAAK9rE,UAAUguE,mBAAqB,SAAUpqC,GAC1C,GAAIngB,GAAQ1iB,KACR6hD,EAAe7hD,KAAK01E,4BAA4B7yC,GAAMA,OACtDuzC,EAAkBp2E,KAAKuzE,sBAAsBb,QAAQ7vC,EAQzD,OAPAuzC,GAAgBnD,gBAAgB,SAAU3oC,GACtC5nB,EAAM+zD,yBAAyBnsC,KAEnCtqC,KAAKy2E,yBAAyBL,GAC9BA,EAAgBtD,kBAAkB,SAAUxoC,GACxC5nB,EAAM+zD,yBAAyBnsC,KAE5BuX,GAQXkpB,GAAK9rE,UAAUw3E,yBAA2B,SAAUnsC,GAChD,GAAIqqC,GAAQrqC,EAAKkC,UACjB,IAAc,OAAVmoC,EAAgB,CAQhB,IAAK,GALDt7B,MAGA0O,KACA2uB,GAAY,EACP34E,EAAI,EAAGA,EAAI42E,EAAMnzE,OAAQzD,IAC9B,GAAI42E,EAAM52E,GAAGu0D,SAAW+f,GAAkBkD,sBAGrC,IAAIZ,EAAM52E,GAAGu0D,SAAW+f,GAAkB8C,KAC3C1tD,EAAKmF,OAAO8pD,IAAa34E,EAAI,EAAG,mDAChC24E,EAAW34E,EAEX42E,EAAM52E,GAAGu0D,OAAS+f,GAAkBkD,iBACpCZ,EAAM52E,GAAG81E,YAAc,UAOvB,IAJApsD,EAAKmF,OAAO+nD,EAAM52E,GAAGu0D,SAAW+f,GAAkB+B,IAAK,0CAEvDO,EAAM52E,GAAG21E,YACT3rB,EAASA,EAAOhiD,OAAO/F,KAAK8rE,gBAAgBpnB,aAAaiwB,EAAM52E,GAAG+1E,gBAAgB,IAC9Ea,EAAM52E,GAAGsrC,WAAY,CAErBgQ,EAAU14C,KAAKg0E,EAAM52E,GAAGsrC,WAAW3pC,KAAK,KAAM,GAAI4D,OAAM,QAAQ,EADjD,QAKT,IAAdozE,EAEApsC,EAAKsoC,SAAS,MAId+B,EAAMnzE,OAASk1E,EAAW,EAG9B12E,KAAKkrE,YAAYhV,0BAA0B5rB,EAAKzH,OAAQklB,EACxD,KAAK,GAAIhqD,GAAI,EAAGA,EAAIs7C,EAAU73C,OAAQzD,IAClCmlC,GAAemW,EAAUt7C,KAqBrC,IACI44E,IAIAt5C,GAA6B,WAC7B,QAASA,KAILr9B,KAAK42E,UAKL52E,KAAK62E,gBAAiB,EAyF1B,MAvFAx5C,GAAYC,YAAc,WAItB,MAHKq5C,MACDA,GAAkB,GAAIt5C,IAEnBs5C,IAGXt5C,EAAYp+B,UAAU2qE,UAAY,WAC9B,IAAK,GAAIkN,KAAW92E,MAAK42E,OACrB,IAAK,GAAIG,KAAS/2E,MAAK42E,OAAOE,GAC1B92E,KAAK42E,OAAOE,GAASC,GAAOnN,aAIxCvsC,EAAYp+B,UAAU+4B,OAAS,WAC3B,IAAK,GAAI8+C,KAAW92E,MAAK42E,OACrB,IAAK,GAAIG,KAAS/2E,MAAK42E,OAAOE,GAC1B92E,KAAK42E,OAAOE,GAASC,GAAO/+C,UAUxCqF,EAAYp+B,UAAUs+B,gBAAkB,SAAUhX,EAAKlB,GACnD,GAAI0xD,GAAQ1xD,GAAOkB,EAAIxG,QAAJ,gBACL1f,KAAV02E,GACA72C,EAAM,uHAIV,IAAI4G,GAAYF,GAAcmwC,GAC1B9vC,EAAWH,EAAUG,QAOzB,OANA8B,IAAY,gCAAiC,EAAGjC,GAC3CA,EAAUjE,KAAKhR,WAChBqO,EAAM,4FAGClgC,KAAKg3E,WAAW/vC,EAAU1gB,GACzBvC,UAOhBqZ,EAAYp+B,UAAUg4E,WAAa,SAAUj/B,GACzC,GAAIk/B,GAAWzvD,EAAK8J,QAAQvxB,KAAK42E,OAAQ5+B,EAAKzxB,IAAIloB,KAE7C64E,IAAYzvD,EAAK8J,QAAQ2lD,EAAUl/B,EAAK2oB,UAAUh6B,iBAAmBqR,GACtE9X,EAAM,YAAc8X,EAAKzxB,IAAIloB,KAAO,IAAM25C,EAAK2oB,UAAY,+BAE/D3oB,EAAK4xB,kBACEsN,GAASl/B,EAAK2oB,UAAUh6B,gBAUnCtJ,EAAYp+B,UAAU+3E,WAAa,SAAU/vC,EAAU1gB,GACnD,GAAI2wD,GAAWzvD,EAAK8J,QAAQvxB,KAAK42E,OAAQrwD,EAAIloB,KACxC64E,KACDA,KACAl3E,KAAK42E,OAAOrwD,EAAIloB,MAAQ64E,EAE5B,IAAIl/B,GAAOvwB,EAAK8J,QAAQ2lD,EAAUjwC,EAASN,cAM3C,OALIqR,IACA9X,EAAM,2HAEV8X,EAAO,GAAI+yB,IAAK9jC,EAAUjnC,KAAK62E,eAAgBtwD,GAC/C2wD,EAASjwC,EAASN,eAAiBqR,EAC5BA,GAMX3a,EAAYp+B,UAAU+rE,gBAAkB,SAAUA,GAC9ChrE,KAAK62E,eAAiB7L,GAEnB3tC,KAsBPK,GAA0B,WAK1B,QAASA,GAASyL,GACdnpC,KAAKmpC,MAAQA,EACPA,YAAiB4hC,KACnB7qC,EAAM,wEAGVlgC,KAAK6vC,MAAQ,GAAIrS,IAAU2L,EAAO5F,GAAKpzB,OACvCnQ,KAAKooB,SAAW,GAAI+uD,IAAkBn3E,MAmE1C,MAjEAxB,QAAOC,eAAei/B,EAASz+B,UAAW,OACtCL,IAAK,WACD,MAAOoB,MAAKmpC,MAAM5iB,KAEtB5nB,YAAY,EACZD,cAAc,IAElBg/B,EAASz+B,UAAU0e,IAAM,SAAUklB,GAG/B,MAFA7iC,MAAKo3E,cAAc,OACnB3vD,EAAKsN,iBAAiB,eAAgB,EAAG,EAAGj1B,UAAU0B,QAClDqhC,YAAgBrF,IACTx9B,KAAKq3E,WAAWx0C,EAAKh+B,gBAEhBxE,KAATwiC,EAAqB7iC,KAAK6vC,MAAMzL,MAAMvB,GAAQ7iC,KAAK6vC,OAS9DnS,EAASz+B,UAAUo4E,WAAa,SAAUhyD,GAEtC,GAAIiyD,GAAU,qBACdt3E,MAAKo3E,cAAcE,GACnB7vD,EAAKsN,iBAAiBuiD,EAAS,EAAG,EAAGx3E,UAAU0B,OAC/C,IAAI+1E,GAAY3wC,GAAcvhB,EAC9B0jB,IAAYuuC,EAAS,EAAGC,EACxB,IAAItwC,GAAWswC,EAAUtwC,QAUzB,OATIA,GAASrB,OAAS5lC,KAAKmpC,MAAMw3B,UAAU/6B,MACvC1F,EAAMo3C,EACF,2DAEArwC,EAASrB,KACT,iBACA5lC,KAAKmpC,MAAMw3B,UAAU/6B,KACrB,KAED5lC,KAAK2d,IAAI45D,EAAU10C,KAAKh+B,aAKnC64B,EAASz+B,UAAUm4E,cAAgB,SAAUE,GACtB,OAAft3E,KAAKmpC,OACLjJ,EAAM,eAAiBo3C,EAAU,4BAIzC55C,EAASz+B,UAAUu4E,UAAY,WAC3B/vD,EAAKsN,iBAAiB,qBAAsB,EAAG,EAAGj1B,UAAU0B,QAC5DxB,KAAKo3E,cAAc,aACnBp3E,KAAKmpC,MAAMygC,aAEflsC,EAASz+B,UAAUw4E,SAAW,WAC1BhwD,EAAKsN,iBAAiB,oBAAqB,EAAG,EAAGj1B,UAAU0B,QAC3DxB,KAAKo3E,cAAc,YACnBp3E,KAAKmpC,MAAMnR,UAEf0F,EAASE,aACL85C,WACIC,MAAO,cAGRj6C,KAEPy5C,GAAmC,WAEnC,QAASA,GAAkBnzD,GACvBhkB,KAAKgkB,SAAWA,EAgBpB,MAbAmzD,GAAkBl4E,UAAUyqB,OAAS,WACjC,MAAO8C,GAAQgK,UAAUx2B,SAAM,OAAQ,GAAQ,WAC3C,MAAOwsB,GAAQsK,YAAY92B,KAAM,WAO7B,MANAA,MAAKgkB,SAASozD,cAAc,UAC5B/5C,GAAYC,cAAc25C,WAAWj3E,KAAKgkB,SAASmlB,OACnDnpC,KAAKgkB,SAASmlB,MAAQ,KACtBnpC,KAAKgkB,SAAS6rB,MAAQ,KACtB7vC,KAAKgkB,SAASoE,SAAW,KACzBpoB,KAAKgkB,SAAW,MACR,QAIbmzD,KAyBPS,GAAmB,WACnBha,GAAoBjD,gBACpBrC,GAAsBmC,cAEtBod,GAAkB,WAClBvf,GAAsBqC,iBAGtBuF,GAAwB,WACxB,MAAOtC,IAAA,eAEPka,GAA2B,SAAUn6D,EAAKtb,GAC1Csb,EAAIq6B,KAAKqzB,sBAAsB9F,uBAAyBljE,GAExD+yD,GAAQ,SAAUz3C,EAAK6vD,GACvB7vD,EAAIq6B,KAAKod,MAAMoY,IAEfK,GAAwB,SAAUlwD,EAAKmwD,GACvCnwD,EAAIq6B,KAAK61B,sBAAsBC,IAE/B7C,GAAkB,SAAUttD,GAC5B,MAAOA,GAAIq6B,KAAKizB,iBAEhB8M,GAAsB,SAAUp6D,EAAKtb,GACrC,MAAOsb,GAAIq6B,KAAKu0B,qBAAqBlqE,IAGrC+lB,GAAwB5pB,OAAOw5E,QACjCJ,iBAAkBA,GAClBC,gBAAiBA,GACjB3X,sBAAuBA,GACvB4X,yBAA0BA,GAC1B1iB,MAAOA,GACPyY,sBAAuBA,GACvB5C,gBAAiBA,GACjB8M,oBAAqBA,KAkBnBE,GAAiBzT,EAKrBA,IAAqBvlE,UAAUi5E,aAAe,SAAU39C,EAAY8O,GAChErpC,KAAKsiE,YAAY,KAAOnjE,EAAGo7B,GAAc8O,IAM7Cm7B,GAAqBvlE,UAAUk5E,KAAO,SAAU9sD,EAAM+sD,GAClDp4E,KAAKsiE,YAAY,QAAUlkE,EAAGitB,GAAQ+sD,GAG1C,IAAIC,IAAqB3X,GAKrB4X,GAAa,SAAUC,GACvB,GAAIC,GAAShU,GAAqBvlE,UAAUilE,GAO5C,OANAM,IAAqBvlE,UAAUilE,IAAM,SAAU3pC,EAAYlP,EAAMotD,EAAgBC,OAC5Dr4E,KAAbq4E,IACAA,EAAWH,KAEfC,EAAOv6E,KAAK+B,KAAMu6B,EAAYlP,EAAMotD,EAAgBC,IAEjD,WACHlU,GAAqBvlE,UAAUilE,IAAMsU,IAMzCG,GAAmBhzC,GAKnBqV,GAAkB,SAAUpY,GAC5B,MAAOA,GAAMoY,mBAMb49B,GAAU,SAAUC,GACpB,MAAOA,GAAY7gC,KAAKqzB,sBAAsBrG,UAO9CgG,GAAkB,SAAUA,GAC5B3tC,GAAYC,cAAc0tC,gBAAgBA,IAG1CntC,GAA2Br/B,OAAOw5E,QACpCC,eAAgBA,GAChBI,mBAAoBA,GACpBC,WAAYA,GACZK,iBAAkBA,GAClB39B,gBAAiBA,GACjB49B,QAASA,GACT5N,gBAAiBA,KAkBfptC,GAAcF,GAASE,WAkB3BT,GAAiB7b,GAEjBzjB,EAAQs/B,iBAAmBA,EAC3Bt/B,EAAQ6/B,SAAWA,GACnB7/B,EAAQ4/B,MAAQA,GAChB5/B,EAAQ2/B,UAAYA,GACpB3/B,EAAQ8/B,cAAgBA,EACxB9/B,EAAQ+/B,YAAcA,GACtB//B,EAAQs3C,aAAeA,GACvBt3C,EAAQqrC,aAAeA,Ibh5KjB4vC,KACA,Yc1mTN,SAAUr4E,GACR,YA2CA,SAASs4E,GAAc16E,GAIrB,GAHoB,gBAATA,KACTA,EAAOoI,OAAOpI,IAEZ,6BAA6B0W,KAAK1W,GACpC,KAAM,IAAI4B,WAAU,yCAEtB,OAAO5B,GAAK4c,cAGd,QAAS+9D,GAAez5E,GAItB,MAHqB,gBAAVA,KACTA,EAAQkH,OAAOlH,IAEVA,EAIT,QAAS05E,GAAYC,GACnB,GAAI3lE,IACF6B,KAAM,WACJ,GAAI7V,GAAQ25E,EAAM58D,OAClB,QAAQ1a,SAAgBvB,KAAVd,EAAqBA,MAAOA,IAU9C,OANI45E,GAAQC,WACV7lE,EAASpK,OAAOoK,UAAY,WAC1B,MAAOA,KAIJA,EAGT,QAAS8lE,GAAQnb,GACfl+D,KAAKmkB,OAED+5C,YAAmBmb,GACrBnb,EAAQvxD,QAAQ,SAASpN,EAAOlB,GAC9B2B,KAAKs5E,OAAOj7E,EAAMkB,IACjBS,MACM4C,MAAMkG,QAAQo1D,GACvBA,EAAQvxD,QAAQ,SAASgkB,GACvB3wB,KAAKs5E,OAAO3oD,EAAO,GAAIA,EAAO,KAC7B3wB,MACMk+D,GACT1/D,OAAO2S,oBAAoB+sD,GAASvxD,QAAQ,SAAStO,GACnD2B,KAAKs5E,OAAOj7E,EAAM6/D,EAAQ7/D,KACzB2B,MA0DP,QAASu5E,GAASxiD,GAChB,GAAIA,EAAKyiD,SACP,MAAOz5E,SAAQkB,OAAO,GAAIhB,WAAU,gBAEtC82B,GAAKyiD,UAAW,EAGlB,QAASC,GAAgBC,GACvB,MAAO,IAAI35E,SAAQ,SAASiB,EAASC,GACnCy4E,EAAOrc,OAAS,WACdr8D,EAAQ04E,EAAOnvE,SAEjBmvE,EAAOlc,QAAU,WACfv8D,EAAOy4E,EAAOhzD,UAKpB,QAASizD,GAAsBC,GAC7B,GAAIF,GAAS,GAAIG,YACb34E,EAAUu4E,EAAgBC,EAE9B,OADAA,GAAOI,kBAAkBF,GAClB14E,EAGT,QAAS64E,GAAeH,GACtB,GAAIF,GAAS,GAAIG,YACb34E,EAAUu4E,EAAgBC,EAE9B,OADAA,GAAOM,WAAWJ,GACX14E,EAGT,QAAS+4E,GAAsBvmD,GAI7B,IAAK,GAHDw2B,GAAO,GAAIgwB,YAAWxmD,GACtBymD,EAAQ,GAAIv3E,OAAMsnD,EAAK1oD,QAElBzD,EAAI,EAAGA,EAAImsD,EAAK1oD,OAAQzD,IAC/Bo8E,EAAMp8E,GAAK0I,OAAO2mB,aAAa88B,EAAKnsD,GAEtC,OAAOo8E,GAAM3zE,KAAK,IAGpB,QAAS4zE,GAAY1mD,GACnB,GAAIA,EAAI7wB,MACN,MAAO6wB,GAAI7wB,MAAM,EAEjB,IAAIqnD,GAAO,GAAIgwB,YAAWxmD,EAAI2mD,WAE9B,OADAnwB,GAAKj2C,IAAI,GAAIimE,YAAWxmD,IACjBw2B,EAAKowB,OAIhB,QAASC,KA0FP,MAzFAv6E,MAAKw5E,UAAW,EAEhBx5E,KAAKw6E,UAAY,SAASzjD,GAExB,GADA/2B,KAAKy6E,UAAY1jD,EACZA,EAEE,GAAoB,gBAATA,GAChB/2B,KAAK06E,UAAY3jD,MACZ,IAAIoiD,EAAQS,MAAQe,KAAK17E,UAAU27E,cAAc7jD,GACtD/2B,KAAK66E,UAAY9jD,MACZ,IAAIoiD,EAAQ2B,UAAYC,SAAS97E,UAAU27E,cAAc7jD,GAC9D/2B,KAAKg7E,cAAgBjkD,MAChB,IAAIoiD,EAAQ3zD,cAAgBy1D,gBAAgBh8E,UAAU27E,cAAc7jD,GACzE/2B,KAAK06E,UAAY3jD,EAAKlyB,eACjB,IAAIs0E,EAAQ+B,aAAe/B,EAAQS,MAAQuB,EAAWpkD,GAC3D/2B,KAAKo7E,iBAAmBhB,EAAYrjD,EAAKujD,QAEzCt6E,KAAKy6E,UAAY,GAAIE,OAAM36E,KAAKo7E,uBAC3B,KAAIjC,EAAQ+B,cAAgBG,YAAYp8E,UAAU27E,cAAc7jD,KAASukD,EAAkBvkD,GAGhG,KAAM,IAAIzzB,OAAM,4BAFhBtD,MAAKo7E,iBAAmBhB,EAAYrjD,OAdpC/2B,MAAK06E,UAAY,EAmBd16E,MAAKk+D,QAAQt/D,IAAI,kBACA,gBAATm4B,GACT/2B,KAAKk+D,QAAQjqD,IAAI,eAAgB,4BACxBjU,KAAK66E,WAAa76E,KAAK66E,UAAU9zE,KAC1C/G,KAAKk+D,QAAQjqD,IAAI,eAAgBjU,KAAK66E,UAAU9zE,MACvCoyE,EAAQ3zD,cAAgBy1D,gBAAgBh8E,UAAU27E,cAAc7jD,IACzE/2B,KAAKk+D,QAAQjqD,IAAI,eAAgB,qDAKnCklE,EAAQS,OACV55E,KAAK45E,KAAO,WACV,GAAI/iD,GAAW0iD,EAASv5E,KACxB,IAAI62B,EACF,MAAOA,EAGT,IAAI72B,KAAK66E,UACP,MAAO96E,SAAQiB,QAAQhB,KAAK66E,UACvB,IAAI76E,KAAKo7E,iBACd,MAAOr7E,SAAQiB,QAAQ,GAAI25E,OAAM36E,KAAKo7E,mBACjC,IAAIp7E,KAAKg7E,cACd,KAAM,IAAI13E,OAAM,uCAEhB,OAAOvD,SAAQiB,QAAQ,GAAI25E,OAAM36E,KAAK06E,cAI1C16E,KAAKk7E,YAAc,WACjB,MAAIl7E,MAAKo7E,iBACA7B,EAASv5E,OAASD,QAAQiB,QAAQhB,KAAKo7E,kBAEvCp7E,KAAK45E,OAAOt4E,KAAKq4E,KAK9B35E,KAAKu7E,KAAO,WACV,GAAI1kD,GAAW0iD,EAASv5E,KACxB,IAAI62B,EACF,MAAOA,EAGT,IAAI72B,KAAK66E,UACP,MAAOd,GAAe/5E,KAAK66E,UACtB,IAAI76E,KAAKo7E,iBACd,MAAOr7E,SAAQiB,QAAQi5E,EAAsBj6E,KAAKo7E,kBAC7C,IAAIp7E,KAAKg7E,cACd,KAAM,IAAI13E,OAAM,uCAEhB,OAAOvD,SAAQiB,QAAQhB,KAAK06E,YAI5BvB,EAAQ2B,WACV96E,KAAK86E,SAAW,WACd,MAAO96E,MAAKu7E,OAAOj6E,KAAKmvB,KAI5BzwB,KAAKw7B,KAAO,WACV,MAAOx7B,MAAKu7E,OAAOj6E,KAAK6Q,KAAKiZ,QAGxBprB,KAMT,QAASw7E,GAAgB52D,GACvB,GAAI62D,GAAU72D,EAAOke,aACrB,OAAQ7sB,GAAQ0f,QAAQ8lD,IAAY,EAAKA,EAAU72D,EAGrD,QAAS82D,GAAQvtD,EAAOpO,GACtBA,EAAUA,KACV,IAAIgX,GAAOhX,EAAQgX,IAEnB,IAAI5I,YAAiButD,GAAS,CAC5B,GAAIvtD,EAAMqrD,SACR,KAAM,IAAIv5E,WAAU,eAEtBD,MAAKqlB,IAAM8I,EAAM9I,IACjBrlB,KAAK27E,YAAcxtD,EAAMwtD,YACpB57D,EAAQm+C,UACXl+D,KAAKk+D,QAAU,GAAImb,GAAQlrD,EAAM+vC,UAEnCl+D,KAAK4kB,OAASuJ,EAAMvJ,OACpB5kB,KAAK47E,KAAOztD,EAAMytD,KACb7kD,GAA2B,MAAnB5I,EAAMssD,YACjB1jD,EAAO5I,EAAMssD,UACbtsD,EAAMqrD,UAAW,OAGnBx5E,MAAKqlB,IAAM5e,OAAO0nB,EAWpB,IARAnuB,KAAK27E,YAAc57D,EAAQ47D,aAAe37E,KAAK27E,aAAe,QAC1D57D,EAAQm+C,SAAYl+D,KAAKk+D,UAC3Bl+D,KAAKk+D,QAAU,GAAImb,GAAQt5D,EAAQm+C,UAErCl+D,KAAK4kB,OAAS42D,EAAgBz7D,EAAQ6E,QAAU5kB,KAAK4kB,QAAU,OAC/D5kB,KAAK47E,KAAO77D,EAAQ67D,MAAQ57E,KAAK47E,MAAQ,KACzC57E,KAAK67E,SAAW,MAEK,QAAhB77E,KAAK4kB,QAAoC,SAAhB5kB,KAAK4kB,SAAsBmS,EACvD,KAAM,IAAI92B,WAAU,4CAEtBD,MAAKw6E,UAAUzjD,GAOjB,QAAStG,GAAOsG,GACd,GAAI+kD,GAAO,GAAIf,SASf,OARAhkD,GAAKtZ,OAAOrX,MAAM,KAAKuG,QAAQ,SAASugB,GACtC,GAAIA,EAAO,CACT,GAAI9mB,GAAQ8mB,EAAM9mB,MAAM,KACpB/H,EAAO+H,EAAMkW,QAAQZ,QAAQ,MAAO,KACpCnc,EAAQ6G,EAAMI,KAAK,KAAKkV,QAAQ,MAAO,IAC3CogE,GAAKxC,OAAO3+C,mBAAmBt8B,GAAOs8B,mBAAmBp7B,OAGtDu8E,EAGT,QAASC,GAAaC,GACpB,GAAI9d,GAAU,GAAImb,EAYlB,OAT0B2C,GAAWtgE,QAAQ,eAAgB,KACzCtV,MAAM,SAASuG,QAAQ,SAASsvE,GAClD,GAAInrD,GAAQmrD,EAAK71E,MAAM,KACnBX,EAAMqrB,EAAMxU,QAAQmB,MACxB,IAAIhY,EAAK,CACP,GAAIlG,GAAQuxB,EAAMtqB,KAAK,KAAKiX,MAC5BygD,GAAQob,OAAO7zE,EAAKlG,MAGjB2+D,EAKT,QAASge,GAASC,EAAUp8D,GACrBA,IACHA,MAGF/f,KAAK+G,KAAO,UACZ/G,KAAKsyD,WAA4BjyD,KAAnB0f,EAAQuyC,OAAuB,IAAMvyC,EAAQuyC,OAC3DtyD,KAAKo8E,GAAKp8E,KAAKsyD,QAAU,KAAOtyD,KAAKsyD,OAAS,IAC9CtyD,KAAKq8E,WAAa,cAAgBt8D,GAAUA,EAAQs8D,WAAa,KACjEr8E,KAAKk+D,QAAU,GAAImb,GAAQt5D,EAAQm+C,SACnCl+D,KAAKqlB,IAAMtF,EAAQsF,KAAO,GAC1BrlB,KAAKw6E,UAAU2B,GAhYjB,IAAI17E,EAAK67E,MAAT,CAIA,GAAInD,IACF3zD,aAAc,mBAAqB/kB,GACnC24E,SAAU,UAAY34E,IAAQ,YAAc0I,QAC5CywE,KAAM,cAAgBn5E,IAAQ,QAAUA,IAAS,WAC/C,IAEE,MADA,IAAIk6E,OACG,EACP,MAAMv5E,GACN,OAAO,MAGX05E,SAAU,YAAcr6E,GACxBy6E,YAAa,eAAiBz6E,GAGhC,IAAI04E,EAAQ+B,YACV,GAAIqB,IACF,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGEpB,EAAa,SAASr3D,GACxB,MAAOA,IAAO04D,SAASv9E,UAAU27E,cAAc92D,IAG7Cw3D,EAAoBD,YAAYoB,QAAU,SAAS34D,GACrD,MAAOA,IAAOy4D,EAAY5mD,QAAQn3B,OAAOS,UAAU4F,SAAS5G,KAAK6lB,KAAS,EAyD9Eu1D,GAAQp6E,UAAUq6E,OAAS,SAASj7E,EAAMkB,GACxClB,EAAO06E,EAAc16E,GACrBkB,EAAQy5E,EAAez5E,EACvB,IAAIm9E,GAAW18E,KAAKmkB,IAAI9lB,EACxB2B,MAAKmkB,IAAI9lB,GAAQq+E,EAAWA,EAAS,IAAIn9E,EAAQA,GAGnD85E,EAAQp6E,UAAR,OAA8B,SAASZ,SAC9B2B,MAAKmkB,IAAI40D,EAAc16E,KAGhCg7E,EAAQp6E,UAAUL,IAAM,SAASP,GAE/B,MADAA,GAAO06E,EAAc16E,GACd2B,KAAK28E,IAAIt+E,GAAQ2B,KAAKmkB,IAAI9lB,GAAQ,MAG3Cg7E,EAAQp6E,UAAU09E,IAAM,SAASt+E,GAC/B,MAAO2B,MAAKmkB,IAAIjlB,eAAe65E,EAAc16E,KAG/Cg7E,EAAQp6E,UAAUgV,IAAM,SAAS5V,EAAMkB,GACrCS,KAAKmkB,IAAI40D,EAAc16E,IAAS26E,EAAez5E,IAGjD85E,EAAQp6E,UAAU0N,QAAU,SAAStK,EAAUzC,GAC7C,IAAK,GAAIvB,KAAQ2B,MAAKmkB,IAChBnkB,KAAKmkB,IAAIjlB,eAAeb,IAC1BgE,EAASpE,KAAK2B,EAASI,KAAKmkB,IAAI9lB,GAAOA,EAAM2B,OAKnDq5E,EAAQp6E,UAAU+M,KAAO,WACvB,GAAIktE,KAEJ,OADAl5E,MAAK2M,QAAQ,SAASpN,EAAOlB,GAAQ66E,EAAMv4E,KAAKtC,KACzC46E,EAAYC,IAGrBG,EAAQp6E,UAAU8D,OAAS,WACzB,GAAIm2E,KAEJ,OADAl5E,MAAK2M,QAAQ,SAASpN,GAAS25E,EAAMv4E,KAAKpB,KACnC05E,EAAYC,IAGrBG,EAAQp6E,UAAU0X,QAAU,WAC1B,GAAIuiE,KAEJ,OADAl5E,MAAK2M,QAAQ,SAASpN,EAAOlB,GAAQ66E,EAAMv4E,MAAMtC,EAAMkB,MAChD05E,EAAYC,IAGjBC,EAAQC,WACVC,EAAQp6E,UAAUkK,OAAOoK,UAAY8lE,EAAQp6E,UAAU0X,QAqJzD,IAAIV,IAAW,SAAU,MAAO,OAAQ,UAAW,OAAQ,MA4C3DylE,GAAQz8E,UAAU0yB,MAAQ,WACxB,MAAO,IAAI+pD,GAAQ17E,MAAQ+2B,KAAM/2B,KAAKy6E,aAgCxCF,EAAKt8E,KAAKy9E,EAAQz8E,WAgBlBs7E,EAAKt8E,KAAKi+E,EAASj9E,WAEnBi9E,EAASj9E,UAAU0yB,MAAQ,WACzB,MAAO,IAAIuqD,GAASl8E,KAAKy6E,WACvBnoB,OAAQtyD,KAAKsyD,OACb+pB,WAAYr8E,KAAKq8E,WACjBne,QAAS,GAAImb,GAAQr5E,KAAKk+D,SAC1B74C,IAAKrlB,KAAKqlB,OAId62D,EAASx1D,MAAQ,WACf,GAAIqhD,GAAW,GAAImU,GAAS,MAAO5pB,OAAQ,EAAG+pB,WAAY,IAE1D,OADAtU,GAAShhE,KAAO,QACTghE,EAGT,IAAI6U,IAAoB,IAAK,IAAK,IAAK,IAAK,IAE5CV,GAASW,SAAW,SAASx3D,EAAKitC,GAChC,IAA0C,IAAtCsqB,EAAiBjnD,QAAQ28B,GAC3B,KAAM,IAAIpkD,YAAW,sBAGvB,OAAO,IAAIguE,GAAS,MAAO5pB,OAAQA,EAAQ4L,SAAUp5C,SAAUO,MAGjE5kB,EAAK44E,QAAUA,EACf54E,EAAKi7E,QAAUA,EACfj7E,EAAKy7E,SAAWA,EAEhBz7E,EAAK67E,MAAQ,SAASnuD,EAAO2uD,GAC3B,MAAO,IAAI/8E,SAAQ,SAASiB,EAASC,GACnC,GAAI6mE,GAAU,GAAI4T,GAAQvtD,EAAO2uD,GAC7BlS,EAAM,GAAIC,eAEdD,GAAIvN,OAAS,WACX,GAAIt9C,IACFuyC,OAAQsY,EAAItY,OACZ+pB,WAAYzR,EAAIyR,WAChBne,QAAS6d,EAAanR,EAAImS,yBAA2B,IAEvDh9D,GAAQsF,IAAM,eAAiBulD,GAAMA,EAAIoS,YAAcj9D,EAAQm+C,QAAQt/D,IAAI,iBAE3EoC,EAAQ,GAAIk7E,GADD,YAActR,GAAMA,EAAI7C,SAAW6C,EAAIE,aACvB/qD,KAG7B6qD,EAAIpN,QAAU,WACZv8D,EAAO,GAAIhB,WAAU,4BAGvB2qE,EAAIqS,UAAY,WACdh8E,EAAO,GAAIhB,WAAU,4BAGvB2qE,EAAIh6D,KAAKk3D,EAAQljD,OAAQkjD,EAAQziD,KAAK,GAEV,YAAxByiD,EAAQ6T,YACV/Q,EAAIsS,iBAAkB,EACW,SAAxBpV,EAAQ6T,cACjB/Q,EAAIsS,iBAAkB,GAGpB,gBAAkBtS,IAAOuO,EAAQS,OACnChP,EAAIuS,aAAe,QAGrBrV,EAAQ5J,QAAQvxD,QAAQ,SAASpN,EAAOlB,GACtCusE,EAAIwS,iBAAiB/+E,EAAMkB,KAG7BqrE,EAAI3P,SAAkC,KAAtB6M,EAAQ2S,UAA4B,KAAO3S,EAAQ2S,cAGvEh6E,EAAK67E,MAAMe,UAAW,IACL,mBAAT58E,MAAuBA,KAAOT,Od4mTlCs9E,KACA,SAAUx/E,EAAQD,EAASH,GAEjC,Ye9jUA,IAAI6/E,GAAUv7D,EAAQ,OAIW,kBAAmB8N,YAAmC,WAAtBhL,SAASsb,UACzEtQ,UAAU0tD,cAAcC,SAASC,IAA0B,QAG5D,IAAMC,GAAiB,SAAAz/E,GAAA,MAAKA,IAAKA,EAAEuiB,QAAUviB,EAAEuiB,QAAUviB,EAIzD,IAAmB,kBAFTy/E,GAAe37D,EAAQ,SAEF,CAC9B,GAAIkvB,GAAO5sC,SAASyyB,KAAK6mD,kBAErBd,EAAO,WACV,GAAIv2D,GAAMo3D,EAAe37D,EAAQ,QACjCkvB,IAAO,EAAIqsC,EAAQz/D,SAAQ,EAAIy/D,EAAQ5gE,GAAG4J,GAAMjiB,SAASyyB,KAAMma,GAKhE4rC,OfwkUKe,KACA,SAAU//E,EAAQD,EAASH,GAEjC,YgB/lUAskB,GAAQ,QAmBRlkB,EAAOD,QArBP,SAA0BiE,GAAM,MAAQA,IAAqB,gBAAPA,IAAoB,WAAaA,GAAMA,EAAA,QAAgBA,GAG9EkgB,EAAQ","file":"bundle.efcb0.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"uXl7\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"DFDv\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__ = __webpack_require__(\"rplX\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_whatwg_fetch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__);\n\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function () {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function () {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n    if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function () {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(function (value) {\n      if (done) return;\n      done = true;\n      resolve(self, value);\n    }, function (reason) {\n      if (done) return;\n      done = true;\n      reject(self, reason);\n    });\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function (callback) {\n  var constructor = this.constructor;\n  return this.then(function (value) {\n    return constructor.resolve(callback()).then(function () {\n      return value;\n    });\n  }, function (reason) {\n    return constructor.resolve(callback()).then(function () {\n      return constructor.reject(reason);\n    });\n  });\n};\n\nPromise.all = function (arr) {\n  return new Promise(function (resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(val, function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function (value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function (resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn = typeof setImmediate === 'function' && function (fn) {\n  setImmediate(fn);\n} || function (fn) {\n  setTimeoutFunc(fn, 0);\n};\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = function () {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n}();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\n  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\n  var core = module.exports = { version: '2.5.5' };\n  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function _isObject(it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function _anObject(it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function _fails(exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function get() {\n      return 7;\n    } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function _domCreate(it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function get() {\n      return 7;\n    } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function _toPrimitive(it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) {/* empty */}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n  f: f\n};\n\nvar _propertyDesc = function _propertyDesc(bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function _has(it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function _uid(key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\n  var SRC = _uid('src');\n  var TO_STRING = 'toString';\n  var $toString = Function[TO_STRING];\n  var TPL = ('' + $toString).split(TO_STRING);\n\n  _core.inspectSource = function (it) {\n    return $toString.call(it);\n  };\n\n  (module.exports = function (O, key, val, safe) {\n    var isFunction = typeof val == 'function';\n    if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n    if (O[key] === val) return;\n    if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n    if (O === _global) {\n      O[key] = val;\n    } else if (!safe) {\n      delete O[key];\n      _hide(O, key, val);\n    } else if (O[key]) {\n      O[key] = val;\n    } else {\n      _hide(O, key, val);\n    }\n    // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n  })(Function.prototype, TO_STRING, function toString() {\n    return typeof this == 'function' && this[SRC] || $toString.call(this);\n  });\n});\n\nvar _aFunction = function _aFunction(it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function _ctx(fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () /* ...args */{\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1; // forced\n$export.G = 2; // global\n$export.S = 4; // static\n$export.P = 8; // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\n$export.U = 64; // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function _cof(it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function _defined(it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function _toObject(it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function _toInteger(it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function _toLength(it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function _shared(key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\n  var store = _shared('wks');\n\n  var Symbol = _global.Symbol;\n  var USE_SYMBOL = typeof Symbol == 'function';\n\n  var $exports = module.exports = function (name) {\n    return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n  };\n\n  $exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function _arraySpeciesConstructor(original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function _arraySpeciesCreate(original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\nvar _arrayMethods = function _arrayMethods(TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res; // map\n          else if (res) switch (TYPE) {\n              case 3:\n                return true; // some\n              case 5:\n                return val; // find\n              case 6:\n                return index; // findIndex\n              case 2:\n                result.push(val); // filter\n            } else if (IS_EVERY) return false; // every\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function _addToUnscopables(key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () {\n  forced = false;\n});\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () {\n  forced$1 = false;\n});\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function _toIobject(it) {\n  return _iobject(_defined(it));\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function _toAbsoluteIndex(index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\nvar _arrayIncludes = function _arrayIncludes(IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n      // Array#indexOf ignores holes, Array#includes - not\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function _sharedKey(key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function _objectKeysInternal(object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) _has(O, key) && result.push(key);\n  } // Don't enum bug & hidden keys\n  while (names.length > i) {\n    if (_has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n  f: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n  f: f$2\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function _isRegexp(it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\nvar _stringContext = function _stringContext(that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function _failsIsRegexp(KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) {/* empty */}\n  }return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (; n > 0; (n >>>= 1) && (str += str)) {\n    if (n & 1) res += str;\n  }return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\nvar _meta = createCommonjsModule(function (module) {\n  var META = _uid('meta');\n\n  var setDesc = _objectDp.f;\n  var id = 0;\n  var isExtensible = Object.isExtensible || function () {\n    return true;\n  };\n  var FREEZE = !_fails(function () {\n    return isExtensible(Object.preventExtensions({}));\n  });\n  var setMeta = function setMeta(it) {\n    setDesc(it, META, { value: {\n        i: 'O' + ++id, // object ID\n        w: {} // weak collections IDs\n      } });\n  };\n  var fastKey = function fastKey(it, create) {\n    // return primitive with prefix\n    if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n    if (!_has(it, META)) {\n      // can't set metadata to uncaught frozen object\n      if (!isExtensible(it)) return 'F';\n      // not necessary to add metadata\n      if (!create) return 'E';\n      // add missing metadata\n      setMeta(it);\n      // return object ID\n    }return it[META].i;\n  };\n  var getWeak = function getWeak(it, create) {\n    if (!_has(it, META)) {\n      // can't set metadata to uncaught frozen object\n      if (!isExtensible(it)) return true;\n      // not necessary to add metadata\n      if (!create) return false;\n      // add missing metadata\n      setMeta(it);\n      // return hash weak collections IDs\n    }return it[META].w;\n  };\n  // add metadata on freeze-family methods calling\n  var onFreeze = function onFreeze(it) {\n    if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n    return it;\n  };\n  var meta = module.exports = {\n    KEY: META,\n    NEED: false,\n    fastKey: fastKey,\n    getWeak: getWeak,\n    onFreeze: onFreeze\n  };\n});\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function _setToStringTag(it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar f$3 = _wks;\n\nvar _wksExt = {\n  f: f$3\n};\n\nvar _library = false;\n\nvar defineProperty = _objectDp.f;\nvar _wksDefine = function _wksDefine(name) {\n  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: _wksExt.f(name) });\n};\n\n// all enumerable object keys, includes symbols\n\n\nvar _enumKeys = function _enumKeys(it) {\n  var result = _objectKeys(it);\n  var getSymbols = _objectGops.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = _objectPie.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) {\n      if (isEnum.call(it, key = symbols[i++])) result.push(key);\n    }\n  }return result;\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    _objectDp.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\nvar document$1 = _global.document;\nvar _html = document$1 && document$1.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function Empty() {/* empty */};\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar _createDict = function createDict() {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  }return _createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\nvar hiddenKeys = _enumBugKeys.concat('length', 'prototype');\n\nvar f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return _objectKeysInternal(O, hiddenKeys);\n};\n\nvar _objectGopn = {\n  f: f$4\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\nvar gOPN = _objectGopn.f;\nvar toString$1 = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function getWindowNames(it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nvar f$5 = function getOwnPropertyNames(it) {\n  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));\n};\n\nvar _objectGopnExt = {\n  f: f$5\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) {/* empty */}\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n  f: f$6\n};\n\n// ECMAScript 6 symbols shim\n\n\nvar META = _meta.KEY;\n\nvar gOPD$1 = _objectGopd.f;\nvar dP$1 = _objectDp.f;\nvar gOPN$1 = _objectGopnExt.f;\nvar $Symbol = _global.Symbol;\nvar $JSON = _global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE$2 = 'prototype';\nvar HIDDEN = _wks('_hidden');\nvar TO_PRIMITIVE = _wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = _shared('symbol-registry');\nvar AllSymbols = _shared('symbols');\nvar OPSymbols = _shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE$2];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = _global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = _descriptors && _fails(function () {\n  return _objectCreate(dP$1({}, 'a', {\n    get: function get() {\n      return dP$1(this, 'a', { value: 7 }).a;\n    }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD$1(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP$1(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP$1(ObjectProto, key, protoDesc);\n} : dP$1;\n\nvar wrap = function wrap(tag) {\n  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  _anObject(it);\n  key = _toPrimitive(key, true);\n  _anObject(D);\n  if (_has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });\n    }return setSymbolDesc(it, key, D);\n  }return dP$1(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  _anObject(it);\n  var keys = _enumKeys(P = _toIobject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) {\n    $defineProperty(it, key = keys[i++], P[key]);\n  }return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = _toPrimitive(key, true));\n  if (this === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;\n  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = _toIobject(it);\n  key = _toPrimitive(key, true);\n  if (it === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;\n  var D = gOPD$1(it, key);\n  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN$1(_toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  }return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  }return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function $set(value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, _propertyDesc(1, value));\n    };\n    if (_descriptors && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {\n    return this._k;\n  });\n\n  _objectGopd.f = $getOwnPropertyDescriptor;\n  _objectDp.f = $defineProperty;\n  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;\n  _objectPie.f = $propertyIsEnumerable;\n  _objectGops.f = $getOwnPropertySymbols;\n\n  if (_descriptors && !_library) {\n    _redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  _wksExt.f = function (name) {\n    return wrap(_wks(name));\n  };\n}\n\n_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols =\n// 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) {\n  _wks(es6Symbols[j++]);\n}for (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) {\n  _wksDefine(wellKnownSymbols[k++]);\n}_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function _for(key) {\n    return _has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) {\n      if (SymbolRegistry[key] === sym) return key;\n    }\n  },\n  useSetter: function useSetter() {\n    setter = true;\n  },\n  useSimple: function useSimple() {\n    setter = false;\n  }\n});\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }$replacer = replacer = args[1];\n    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!_isArray(replacer)) replacer = function replacer(key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\n_setToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\n_setToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\n_setToStringTag(_global.JSON, 'JSON', true);\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () {\n  return arguments;\n}()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {/* empty */}\n};\n\nvar _classof = function _classof(it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n  // @@toStringTag case\n  : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n  // builtinTag case\n  : ARG ? _cof(O)\n  // ES3 arguments fallback\n  : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n_wksDefine('asyncIterator');\n\n_wksDefine('observable');\n\nvar symbol = _core.Symbol;\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function _stringAt(TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () {\n  return this;\n});\n\nvar _iterCreate = function _iterCreate(Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto$1 = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }return O instanceof Object ? ObjectProto$1 : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function returnThis() {\n  return this;\n};\n\nvar _iterDefine = function _iterDefine(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0; // next index\n  // 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\nvar _iterStep = function _iterStep(done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0; // next index\n  this._k = kind; // kind\n  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) {\n      if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n    }\n  }\n}\n\nvar iterator = _wksExt.f('iterator');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"DuR2\")))\n\n/***/ }),\n\n/***/ \"DuR2\":\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n\n/***/ \"EBst\":\n/***/ (function(module, exports, __webpack_require__) {\n\n!function () {\n  \"use strict\";\n  function e(e, t) {\n    var n,\n        o,\n        r,\n        i,\n        l = W;for (i = arguments.length; i-- > 2;) {\n      P.push(arguments[i]);\n    }t && null != t.children && (P.length || P.push(t.children), delete t.children);while (P.length) {\n      if ((o = P.pop()) && void 0 !== o.pop) for (i = o.length; i--;) {\n        P.push(o[i]);\n      } else \"boolean\" == typeof o && (o = null), (r = \"function\" != typeof e) && (null == o ? o = \"\" : \"number\" == typeof o ? o += \"\" : \"string\" != typeof o && (r = !1)), r && n ? l[l.length - 1] += o : l === W ? l = [o] : l.push(o), n = r;\n    }var a = new T();return a.nodeName = e, a.children = l, a.attributes = null == t ? void 0 : t, a.key = null == t ? void 0 : t.key, void 0 !== M.vnode && M.vnode(a), a;\n  }function t(e, t) {\n    for (var n in t) {\n      e[n] = t[n];\n    }return e;\n  }function n(e, t) {\n    null != e && (\"function\" == typeof e ? e(t) : e.current = t);\n  }function o(n, o) {\n    return e(n.nodeName, t(t({}, n.attributes), o), arguments.length > 2 ? [].slice.call(arguments, 2) : n.children);\n  }function r(e) {\n    !e.__d && (e.__d = !0) && 1 == V.push(e) && (M.debounceRendering || D)(i);\n  }function i() {\n    var e;while (e = V.pop()) {\n      e.__d && x(e);\n    }\n  }function l(e, t, n) {\n    return \"string\" == typeof t || \"number\" == typeof t ? void 0 !== e.splitText : \"string\" == typeof t.nodeName ? !e._componentConstructor && a(e, t.nodeName) : n || e._componentConstructor === t.nodeName;\n  }function a(e, t) {\n    return e.__n === t || e.nodeName.toLowerCase() === t.toLowerCase();\n  }function u(e) {\n    var n = t({}, e.attributes);n.children = e.children;var o = e.nodeName.defaultProps;if (void 0 !== o) for (var r in o) {\n      void 0 === n[r] && (n[r] = o[r]);\n    }return n;\n  }function c(e, t) {\n    var n = t ? document.createElementNS(\"http://www.w3.org/2000/svg\", e) : document.createElement(e);return n.__n = e, n;\n  }function p(e) {\n    var t = e.parentNode;t && t.removeChild(e);\n  }function s(e, t, o, r, i) {\n    if (\"className\" === t && (t = \"class\"), \"key\" === t) ;else if (\"ref\" === t) n(o, null), n(r, e);else if (\"class\" !== t || i) {\n      if (\"style\" === t) {\n        if (r && \"string\" != typeof r && \"string\" != typeof o || (e.style.cssText = r || \"\"), r && \"object\" == typeof r) {\n          if (\"string\" != typeof o) for (var l in o) {\n            l in r || (e.style[l] = \"\");\n          }for (var l in r) {\n            e.style[l] = \"number\" == typeof r[l] && !1 === E.test(l) ? r[l] + \"px\" : r[l];\n          }\n        }\n      } else if (\"dangerouslySetInnerHTML\" === t) r && (e.innerHTML = r.__html || \"\");else if (\"o\" == t[0] && \"n\" == t[1]) {\n        var a = t !== (t = t.replace(/Capture$/, \"\"));t = t.toLowerCase().substring(2), r ? o || e.addEventListener(t, _, a) : e.removeEventListener(t, _, a), (e.__l || (e.__l = {}))[t] = r;\n      } else if (\"list\" !== t && \"type\" !== t && !i && t in e) {\n        try {\n          e[t] = null == r ? \"\" : r;\n        } catch (e) {}null != r && !1 !== r || \"spellcheck\" == t || e.removeAttribute(t);\n      } else {\n        var u = i && t !== (t = t.replace(/^xlink:?/, \"\"));null == r || !1 === r ? u ? e.removeAttributeNS(\"http://www.w3.org/1999/xlink\", t.toLowerCase()) : e.removeAttribute(t) : \"function\" != typeof r && (u ? e.setAttributeNS(\"http://www.w3.org/1999/xlink\", t.toLowerCase(), r) : e.setAttribute(t, r));\n      }\n    } else e.className = r || \"\";\n  }function _(e) {\n    return this.__l[e.type](M.event && M.event(e) || e);\n  }function f() {\n    var e;while (e = A.shift()) {\n      M.afterMount && M.afterMount(e), e.componentDidMount && e.componentDidMount();\n    }\n  }function d(e, t, n, o, r, i) {\n    H++ || (R = null != r && void 0 !== r.ownerSVGElement, B = null != e && !(\"__preactattr_\" in e));var l = h(e, t, n, o, i);return r && l.parentNode !== r && r.appendChild(l), --H || (B = !1, i || f()), l;\n  }function h(e, t, n, o, r) {\n    var i = e,\n        l = R;if (null != t && \"boolean\" != typeof t || (t = \"\"), \"string\" == typeof t || \"number\" == typeof t) return e && void 0 !== e.splitText && e.parentNode && (!e._component || r) ? e.nodeValue != t && (e.nodeValue = t) : (i = document.createTextNode(t), e && (e.parentNode && e.parentNode.replaceChild(i, e), v(e, !0))), i.__preactattr_ = !0, i;var u = t.nodeName;if (\"function\" == typeof u) return N(e, t, n, o);if (R = \"svg\" === u || \"foreignObject\" !== u && R, u += \"\", (!e || !a(e, u)) && (i = c(u, R), e)) {\n      while (e.firstChild) {\n        i.appendChild(e.firstChild);\n      }e.parentNode && e.parentNode.replaceChild(i, e), v(e, !0);\n    }var p = i.firstChild,\n        s = i.__preactattr_,\n        _ = t.children;if (null == s) {\n      s = i.__preactattr_ = {};for (var f = i.attributes, d = f.length; d--;) {\n        s[f[d].name] = f[d].value;\n      }\n    }return !B && _ && 1 === _.length && \"string\" == typeof _[0] && null != p && void 0 !== p.splitText && null == p.nextSibling ? p.nodeValue != _[0] && (p.nodeValue = _[0]) : (_ && _.length || null != p) && m(i, _, n, o, B || null != s.dangerouslySetInnerHTML), y(i, t.attributes, s), R = l, i;\n  }function m(e, t, n, o, r) {\n    var i,\n        a,\n        u,\n        c,\n        s,\n        _ = e.childNodes,\n        f = [],\n        d = {},\n        m = 0,\n        b = 0,\n        y = _.length,\n        g = 0,\n        w = t ? t.length : 0;if (0 !== y) for (var C = 0; C < y; C++) {\n      var x = _[C],\n          N = x.__preactattr_,\n          k = w && N ? x._component ? x._component.__k : N.key : null;null != k ? (m++, d[k] = x) : (N || (void 0 !== x.splitText ? !r || x.nodeValue.trim() : r)) && (f[g++] = x);\n    }if (0 !== w) for (var C = 0; C < w; C++) {\n      c = t[C], s = null;var k = c.key;if (null != k) m && void 0 !== d[k] && (s = d[k], d[k] = void 0, m--);else if (b < g) for (i = b; i < g; i++) {\n        if (void 0 !== f[i] && l(a = f[i], c, r)) {\n          s = a, f[i] = void 0, i === g - 1 && g--, i === b && b++;break;\n        }\n      }s = h(s, c, n, o), u = _[C], s && s !== e && s !== u && (null == u ? e.appendChild(s) : s === u.nextSibling ? p(u) : e.insertBefore(s, u));\n    }if (m) for (var C in d) {\n      void 0 !== d[C] && v(d[C], !1);\n    }while (b <= g) {\n      void 0 !== (s = f[g--]) && v(s, !1);\n    }\n  }function v(e, t) {\n    var o = e._component;o ? k(o) : (null != e.__preactattr_ && n(e.__preactattr_.ref, null), !1 !== t && null != e.__preactattr_ || p(e), b(e));\n  }function b(e) {\n    e = e.lastChild;while (e) {\n      var t = e.previousSibling;v(e, !0), e = t;\n    }\n  }function y(e, t, n) {\n    var o;for (o in n) {\n      t && null != t[o] || null == n[o] || s(e, o, n[o], n[o] = void 0, R);\n    }for (o in t) {\n      \"children\" === o || \"innerHTML\" === o || o in n && t[o] === (\"value\" === o || \"checked\" === o ? e[o] : n[o]) || s(e, o, n[o], n[o] = t[o], R);\n    }\n  }function g(e, t, n) {\n    var o,\n        r = F.length;e.prototype && e.prototype.render ? (o = new e(t, n), U.call(o, t, n)) : (o = new U(t, n), o.constructor = e, o.render = w);while (r--) {\n      if (F[r].constructor === e) return o.__b = F[r].__b, F.splice(r, 1), o;\n    }return o;\n  }function w(e, t, n) {\n    return this.constructor(e, n);\n  }function C(e, t, o, i, l) {\n    e.__x || (e.__x = !0, e.__r = t.ref, e.__k = t.key, delete t.ref, delete t.key, void 0 === e.constructor.getDerivedStateFromProps && (!e.base || l ? e.componentWillMount && e.componentWillMount() : e.componentWillReceiveProps && e.componentWillReceiveProps(t, i)), i && i !== e.context && (e.__c || (e.__c = e.context), e.context = i), e.__p || (e.__p = e.props), e.props = t, e.__x = !1, 0 !== o && (1 !== o && !1 === M.syncComponentUpdates && e.base ? r(e) : x(e, 1, l)), n(e.__r, e));\n  }function x(e, n, o, r) {\n    if (!e.__x) {\n      var i,\n          l,\n          a,\n          c = e.props,\n          p = e.state,\n          s = e.context,\n          _ = e.__p || c,\n          h = e.__s || p,\n          m = e.__c || s,\n          b = e.base,\n          y = e.__b,\n          w = b || y,\n          N = e._component,\n          U = !1,\n          S = m;if (e.constructor.getDerivedStateFromProps && (p = t(t({}, p), e.constructor.getDerivedStateFromProps(c, p)), e.state = p), b && (e.props = _, e.state = h, e.context = m, 2 !== n && e.shouldComponentUpdate && !1 === e.shouldComponentUpdate(c, p, s) ? U = !0 : e.componentWillUpdate && e.componentWillUpdate(c, p, s), e.props = c, e.state = p, e.context = s), e.__p = e.__s = e.__c = e.__b = null, e.__d = !1, !U) {\n        i = e.render(c, p, s), e.getChildContext && (s = t(t({}, s), e.getChildContext())), b && e.getSnapshotBeforeUpdate && (S = e.getSnapshotBeforeUpdate(_, h));var L,\n            T,\n            P = i && i.nodeName;if (\"function\" == typeof P) {\n          var W = u(i);l = N, l && l.constructor === P && W.key == l.__k ? C(l, W, 1, s, !1) : (L = l, e._component = l = g(P, W, s), l.__b = l.__b || y, l.__u = e, C(l, W, 0, s, !1), x(l, 1, o, !0)), T = l.base;\n        } else a = w, L = N, L && (a = e._component = null), (w || 1 === n) && (a && (a._component = null), T = d(a, i, s, o || !b, w && w.parentNode, !0));if (w && T !== w && l !== N) {\n          var D = w.parentNode;D && T !== D && (D.replaceChild(T, w), L || (w._component = null, v(w, !1)));\n        }if (L && k(L), e.base = T, T && !r) {\n          var E = e,\n              V = e;while (V = V.__u) {\n            (E = V).base = T;\n          }T._component = E, T._componentConstructor = E.constructor;\n        }\n      }!b || o ? A.push(e) : U || (e.componentDidUpdate && e.componentDidUpdate(_, h, S), M.afterUpdate && M.afterUpdate(e));while (e.__h.length) {\n        e.__h.pop().call(e);\n      }H || r || f();\n    }\n  }function N(e, t, n, o) {\n    var r = e && e._component,\n        i = r,\n        l = e,\n        a = r && e._componentConstructor === t.nodeName,\n        c = a,\n        p = u(t);while (r && !c && (r = r.__u)) {\n      c = r.constructor === t.nodeName;\n    }return r && c && (!o || r._component) ? (C(r, p, 3, n, o), e = r.base) : (i && !a && (k(i), e = l = null), r = g(t.nodeName, p, n), e && !r.__b && (r.__b = e, l = null), C(r, p, 1, n, o), e = r.base, l && e !== l && (l._component = null, v(l, !1))), e;\n  }function k(e) {\n    M.beforeUnmount && M.beforeUnmount(e);var t = e.base;e.__x = !0, e.componentWillUnmount && e.componentWillUnmount(), e.base = null;var o = e._component;o ? k(o) : t && (null != t.__preactattr_ && n(t.__preactattr_.ref, null), e.__b = t, p(t), F.push(e), b(t)), n(e.__r, null);\n  }function U(e, t) {\n    this.__d = !0, this.context = t, this.props = e, this.state = this.state || {}, this.__h = [];\n  }function S(e, t, n) {\n    return d(n, e, {}, !1, t, !1);\n  }function L() {\n    return {};\n  }var T = function T() {},\n      M = {},\n      P = [],\n      W = [],\n      D = \"function\" == typeof Promise ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout,\n      E = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,\n      V = [],\n      A = [],\n      H = 0,\n      R = !1,\n      B = !1,\n      F = [];t(U.prototype, { setState: function setState(e, n) {\n      this.__s || (this.__s = this.state), this.state = t(t({}, this.state), \"function\" == typeof e ? e(this.state, this.props) : e), n && this.__h.push(n), r(this);\n    }, forceUpdate: function forceUpdate(e) {\n      e && this.__h.push(e), x(this, 2);\n    }, render: function render() {} });var j = { h: e, createElement: e, cloneElement: o, createRef: L, Component: U, render: S, rerender: i, options: M }; true ? module.exports = j : self.preact = j;\n}();\n//# sourceMappingURL=preact.min.js.map\n\n/***/ }),\n\n/***/ \"FWi5\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"HW6M\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n})();\n\n/***/ }),\n\n/***/ \"JkW7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"EBst\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ./style.css\nvar style = __webpack_require__(\"FWi5\");\nvar style_default = /*#__PURE__*/__webpack_require__.n(style);\n\n// EXTERNAL MODULE: ./node_modules/firebase/app/dist/index.cjs.js\nvar index_cjs = __webpack_require__(\"yviF\");\nvar index_cjs_default = /*#__PURE__*/__webpack_require__.n(index_cjs);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/database/dist/index.cjs.js\nvar dist_index_cjs = __webpack_require__(\"jE0U\");\nvar dist_index_cjs_default = /*#__PURE__*/__webpack_require__.n(dist_index_cjs);\n\n// CONCATENATED MODULE: ./node_modules/firebase/database/dist/index.esm.js\n\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// CONCATENATED MODULE: ./firebase.js\n\n\n\nvar config = {\n  apiKey: \"AIzaSyBeyNtKCVeK7dSnZX0xr6qWCrKj5PnTmfM\",\n  authDomain: \"flexicon-757a0.firebaseapp.com\",\n  databaseURL: \"https://flexicon-757a0.firebaseio.com\",\n  projectId: \"flexicon-757a0\",\n  storageBucket: \"flexicon-757a0.appspot.com\",\n  messagingSenderId: \"357714471064\"\n};\n\nindex_cjs_default.a.initializeApp(config);\n/* harmony default export */ var firebase = (index_cjs_default.a);\n// EXTERNAL MODULE: ./assets/style.css\nvar assets_style = __webpack_require__(\"cbDw\");\nvar assets_style_default = /*#__PURE__*/__webpack_require__.n(assets_style);\n\n// CONCATENATED MODULE: ./index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return index_App; });\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n// import ScaleText from \"react-scale-text\"\n\n\n\nvar Logo = __webpack_require__(\"V+3I\");\n\nvar _ref = Object(preact_min[\"h\"])(\n\t'div',\n\t{ className: 'startPage_text' },\n\t'\\u0424\\u043B\\u0435\\u043A\\u0441\\u0438\\u043A\\u043E\\u043D \\u2013 \\u0442\\u043E\\u043B\\u043A\\u043E\\u0432\\u044B\\u0439 \\u0441\\u043B\\u043E\\u0432\\u0430\\u0440\\u044C \\u043C\\u043E\\u043B\\u043E\\u0434\\u0435\\u0436\\u043D\\u043E\\u0433\\u043E \\u0441\\u043B\\u0435\\u043D\\u0433\\u0430, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0439 \\u0434\\u0430\\u0436\\u0435 \\u0431\\u0430\\u0431\\u0443\\u0448\\u043A\\u0435 \\u043E\\u0431\\u044A\\u044F\\u0441\\u043D\\u0438\\u0442, \\u0447\\u0442\\u043E \\u043B\\u043E\\u0439\\u0441 \\u0438 \\u043B\\u043E\\u0441\\u044C \\u2013 \\u044D\\u0442\\u043E \\u0440\\u0430\\u0437\\u043D\\u044B\\u0435 \\u0432\\u0435\\u0449\\u0438.'\n);\n\nvar _ref2 = Object(preact_min[\"h\"])('img', { src: '/assets/r.svg', alt: 'R' });\n\nvar _ref3 = Object(preact_min[\"h\"])('p', { className: 'line' });\n\nvar _ref4 = Object(preact_min[\"h\"])('img', { src: '/assets/flexicon.svg', alt: 'Flexicon' });\n\nvar _ref5 = Object(preact_min[\"h\"])(\n\t'span',\n\t{ className: 'wordAddedText' },\n\t'\\u041F\\u0443\\u0448\\u043A\\u0430, \\u0442\\u0432\\u043E\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043E \\u0432 \\u0441\\u043B\\u043E\\u0432\\u0430\\u0440\\u044C! \\u041C\\u043E\\u0436\\u0435\\u0448\\u044C \\u0441\\u0440\\u0430\\u0437\\u0443 \\u0447\\u0435\\u043A\\u043D\\u0443\\u0442\\u044C \\u0435\\u0433\\u043E \\u0432 \\u043D\\u0430\\u0448\\u0435\\u043C \\u0444\\u043B\\u0435\\u043A\\u0441\\u0438\\u043A\\u043E\\u043D\\u0435!'\n);\n\nvar _ref6 = Object(preact_min[\"h\"])(\n\t'div',\n\t{ className: 'box' },\n\tObject(preact_min[\"h\"])('img', { src: '/assets/arrow.svg' }),\n\tObject(preact_min[\"h\"])(\n\t\t'span',\n\t\tnull,\n\t\t'share'\n\t)\n);\n\nvar index_App = function (_Component) {\n\t_inherits(App, _Component);\n\n\tfunction App() {\n\t\tvar _temp, _this, _ret;\n\n\t\t_classCallCheck(this, App);\n\n\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targs[_key] = arguments[_key];\n\t\t}\n\n\t\treturn _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n\t\t\tword: '',\n\t\t\ttranslation: '',\n\t\t\ttranslations: [],\n\t\t\taddWord: '',\n\t\t\taddTranslation: '',\n\n\t\t\tshowStartPage: true,\n\t\t\tshowAddNewWord: false,\n\t\t\tshowWordAdded: false,\n\t\t\tplusHover: false,\n\t\t\tshowShare: false\n\t\t}, _this.isShowAddNewBlock = false, _this.greet = '', _this.handleChange = function (e) {\n\t\t\t_this.setState({ word: e.target.value });\n\t\t\t_this.checkWord();\n\t\t}, _this.handleAddWordChange = function (e) {\n\t\t\t_this.setState({ addWord: e.target.value });\n\t\t}, _this.handleAddTranslationChange = function (e) {\n\t\t\t_this.setState({ addTranslation: e.target.value });\n\t\t}, _this.checkWord = function () {\n\t\t\t_this.setState({ translation: '' });\n\t\t\tvar obj = _this.state.translations.find(function (word) {\n\t\t\t\treturn word.word === _this.state.word;\n\t\t\t});\n\t\t\tif (obj) {\n\t\t\t\t_this.setState({ translation: obj.translation });\n\t\t\t}\n\t\t}, _this.addTranslation = function () {\n\t\t\tvar translationsRef = firebase.database().ref('translations');\n\t\t\tvar item = {\n\t\t\t\tword: _this.state.addWord,\n\t\t\t\ttranslation: _this.state.addTranslation\n\t\t\t};\n\t\t\tif (_this.state.addWord.length > 0 && _this.state.addTranslation.length > 0) {\n\t\t\t\ttranslationsRef.push(item);\n\t\t\t\t_this.setState({\n\t\t\t\t\taddWord: '',\n\t\t\t\t\taddTranslation: '',\n\t\t\t\t\tshowWordAdded: true\n\t\t\t\t});\n\t\t\t}\n\t\t}, _this.populate = function () {\n\t\t\tvar translationsRef = firebase.database().ref('translations');\n\n\t\t\ttranslations.map(function (o) {\n\t\t\t\treturn translationsRef.push(o);\n\t\t\t});\n\t\t}, _this.showAddNew = function () {\n\t\t\t_this.setState({ plusHover: true });\n\t\t}, _this.hideAddNew = function () {\n\t\t\t_this.setState({ plusHover: false });\n\t\t}, _this.showShare = function () {\n\t\t\t_this.setState({ showShare: true });\n\t\t}, _this.hideShare = function () {\n\t\t\t_this.setState({ showShare: false });\n\t\t}, _this.toggleAddNewWord = function () {\n\t\t\t_this.setState({\n\t\t\t\tshowAddNewWord: !_this.state.showAddNewWord,\n\t\t\t\tshowWordAdded: false,\n\t\t\t\tword: '',\n\t\t\t\ttranslation: ''\n\t\t\t});\n\t\t\t_this.isShowAddNewBlock ? _this.isShowAddNewBlock = false : setTimeout(function () {\n\t\t\t\treturn _this.isShowAddNewBlock = true;\n\t\t\t}, 100);\n\t\t}, _this.hideStartPage = function () {\n\t\t\t_this.setState({ showStartPage: false });\n\t\t}, _this.fbShare = function () {\n\t\t\tFB.ui({\n\t\t\t\tmethod: 'share',\n\t\t\t\thref: 'https://www.linkedin.com/shareArticle?mini=true&url=' + window.location.href + '?word=' + _this.state.word\n\t\t\t}, function (response) {});\n\t\t}, _this.getRandomString = function () {\n\t\t\tvar okies = ['бомба!', 'пушка!', 'го!', 'погнали!', 'изи', 'збс', 'лойс', 'эщкере'];\n\t\t\treturn okies[Math.floor(Math.random() * okies.length)];\n\t\t}, _temp), _possibleConstructorReturn(_this, _ret);\n\t}\n\n\tApp.prototype.componentDidMount = function componentDidMount() {\n\t\tvar _this2 = this;\n\n\t\tthis.greet = this.getRandomString();\n\t\tvar translationsRef = firebase.database().ref('translations');\n\t\ttranslationsRef.on('value', function (snapshot) {\n\t\t\tvar translations = snapshot.val();\n\t\t\tvar newState = [];\n\t\t\tfor (var item in translations) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tid: item,\n\t\t\t\t\tword: translations[item].word,\n\t\t\t\t\ttranslation: translations[item].translation\n\t\t\t\t});\n\t\t\t}\n\t\t\t_this2.setState({\n\t\t\t\ttranslations: newState\n\t\t\t});\n\n\t\t\tvar url = new URL(window.location.href);\n\t\t\tvar searchParam = url.searchParams.get(\"word\");\n\t\t\tif (searchParam) {\n\t\t\t\t_this2.setState({ addWord: searchParam });\n\t\t\t\t_this2.setState({ word: searchParam });\n\t\t\t\t_this2.checkWord();\n\t\t\t\t_this2.setState({ showStartPage: false });\n\t\t\t}\n\t\t});\n\n\t\tdocument.onclick = function (e) {\n\t\t\tif (e.target.className !== 'add-new-block' && e.target.className !== 'add-new-block-input' && e.target.className !== 'add-btn' && _this2.isShowAddNewBlock) {\n\t\t\t\t_this2.toggleAddNewWord();\n\t\t\t}\n\t\t};\n\t};\n\n\tApp.prototype.render = function render() {\n\t\tvar classNames = __webpack_require__(\"HW6M\");\n\t\tvar addNewClass = classNames({\n\t\t\t'add-new-container_text': true,\n\t\t\t'hide': !this.state.plusHover\n\t\t});\n\n\t\treturn Object(preact_min[\"h\"])(\n\t\t\t'div',\n\t\t\t{ style: 'height: 85%' },\n\t\t\tthis.state.showStartPage ? Object(preact_min[\"h\"])(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'startPage' },\n\t\t\t\t_ref,\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'startPage_btn', onClick: this.hideStartPage },\n\t\t\t\t\tthis.greet\n\t\t\t\t)\n\t\t\t) : '',\n\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'container' },\n\t\t\t\t_ref2,\n\t\t\t\t_ref3,\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'head' },\n\t\t\t\t\t_ref4,\n\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\t{ className: 'add-new-container' },\n\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t{ className: addNewClass },\n\t\t\t\t\t\t\t'\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tObject(preact_min[\"h\"])('img', {\n\t\t\t\t\t\t\tclassName: 'plus',\n\t\t\t\t\t\t\tsrc: '/assets/plus.svg',\n\t\t\t\t\t\t\talt: 'plus',\n\t\t\t\t\t\t\tonMouseEnter: this.showAddNew,\n\t\t\t\t\t\t\tonMouseLeave: this.hideAddNew,\n\t\t\t\t\t\t\tonClick: this.toggleAddNewWord\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tthis.state.showAddNewWord ? Object(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t{ className: 'add-new-block' },\n\t\t\t\t\t\t\tObject(preact_min[\"h\"])('input', {\n\t\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\t\tplaceholder: '\\u043D\\u0430\\u043F\\u0438\\u0448\\u0438 \\u0441\\u043B\\u043E\\u0432\\u043E',\n\t\t\t\t\t\t\t\tvalue: this.state.addWord,\n\t\t\t\t\t\t\t\tonInput: this.handleAddWordChange,\n\t\t\t\t\t\t\t\tclassName: 'add-new-block-input'\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tObject(preact_min[\"h\"])('textarea', {\n\t\t\t\t\t\t\t\tplaceholder: '\\u043D\\u0430\\u043F\\u0438\\u0448\\u0438 \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434',\n\t\t\t\t\t\t\t\tvalue: this.state.addTranslation,\n\t\t\t\t\t\t\t\tonInput: this.handleAddTranslationChange,\n\t\t\t\t\t\t\t\tclassName: 'add-new-block-input'\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t{ className: 'add-btn', onClick: this.addTranslation },\n\t\t\t\t\t\t\t\t'\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C+'\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tthis.state.showWordAdded ? Object(preact_min[\"h\"])(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t{ className: 'wordAdded' },\n\t\t\t\t\t\t\t\t_ref5,\n\t\t\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t\t{ className: 'wordAddedOk', onClick: this.toggleAddNewWord },\n\t\t\t\t\t\t\t\t\t'\\u041E\\u041A\\u0418\\u0427'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) : ''\n\t\t\t\t\t\t) : ''\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t!this.state.showAddNewWord ? Object(preact_min[\"h\"])(\n\t\t\t\t\t'div',\n\t\t\t\t\tnull,\n\t\t\t\t\tObject(preact_min[\"h\"])('input', {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tclassName: 'text-to-translate',\n\t\t\t\t\t\tvalue: this.state.word,\n\t\t\t\t\t\tonInput: this.handleChange,\n\t\t\t\t\t\tplaceholder: '\\u043D\\u0430\\u043F\\u0438\\u0448\\u0438 \\u0441\\u043B\\u043E\\u0432\\u043E'\n\t\t\t\t\t}),\n\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\t{ className: 'translation-result parent' },\n\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'span',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tthis.state.translation\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) : '',\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'shareContainer',\n\t\t\t\t\t\tstyle: this.state.showShare ? 'width: 100%' : '',\n\t\t\t\t\t\tonMouseEnter: this.showShare,\n\t\t\t\t\t\tonMouseLeave: this.hideShare\n\t\t\t\t\t},\n\t\t\t\t\t_ref6,\n\t\t\t\t\tthis.state.showShare ? Object(preact_min[\"h\"])(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\t{ className: 'shareBlock' },\n\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'a',\n\t\t\t\t\t\t\t{ href: '#', onClick: this.fbShare },\n\t\t\t\t\t\t\t'facebook'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'a',\n\t\t\t\t\t\t\t{ href: 'https://telegram.me/share/url?url=' + window.location.href + '?word=' + this.state.word + '&text=\\u0427\\u0435\\u043A\\u043D\\u0438 \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434', target: '_blank' },\n\t\t\t\t\t\t\t'telegram'\n\t\t\t\t\t\t)\n\t\t\t\t\t) : ''\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t};\n\n\treturn App;\n}(preact_min[\"Component\"]);\n\n\n\n/***/ }),\n\n/***/ \"O4tu\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = __webpack_require__(\"Pxmi\");\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar contains = function contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n// An array to capture listeners before the true auth functions\n// exist\nvar tokenListeners = [];\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\nvar FirebaseAppImpl = /** @class */function () {\n    function FirebaseAppImpl(options, config, firebase_) {\n        this.firebase_ = firebase_;\n        this.isDeleted_ = false;\n        this.services_ = {};\n        this.name_ = config.name;\n        this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled || false;\n        this.options_ = util.deepCopy(options);\n        this.INTERNAL = {\n            getUid: function getUid() {\n                return null;\n            },\n            getToken: function getToken() {\n                return Promise.resolve(null);\n            },\n            addAuthTokenListener: function addAuthTokenListener(callback) {\n                tokenListeners.push(callback);\n                // Make sure callback is called, asynchronously, in the absence of the auth module\n                setTimeout(function () {\n                    return callback(null);\n                }, 0);\n            },\n            removeAuthTokenListener: function removeAuthTokenListener(callback) {\n                tokenListeners = tokenListeners.filter(function (listener) {\n                    return listener !== callback;\n                });\n            }\n        };\n    }\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\n        get: function get() {\n            this.checkDestroyed_();\n            return this._automaticDataCollectionEnabled;\n        },\n        set: function set(val) {\n            this.checkDestroyed_();\n            this._automaticDataCollectionEnabled = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n        get: function get() {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n        get: function get() {\n            this.checkDestroyed_();\n            return this.options_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAppImpl.prototype.delete = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.checkDestroyed_();\n            resolve();\n        }).then(function () {\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\n            var services = [];\n            Object.keys(_this.services_).forEach(function (serviceKey) {\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n                    services.push(_this.services_[serviceKey][instanceKey]);\n                });\n            });\n            return Promise.all(services.map(function (service) {\n                return service.INTERNAL.delete();\n            }));\n        }).then(function () {\n            _this.isDeleted_ = true;\n            _this.services_ = {};\n        });\n    };\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n        if (instanceIdentifier === void 0) {\n            instanceIdentifier = DEFAULT_ENTRY_NAME;\n        }\n        this.checkDestroyed_();\n        if (!this.services_[name]) {\n            this.services_[name] = {};\n        }\n        if (!this.services_[name][instanceIdentifier]) {\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME ? instanceIdentifier : undefined;\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n            this.services_[name][instanceIdentifier] = service;\n        }\n        return this.services_[name][instanceIdentifier];\n    };\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\n    FirebaseAppImpl.prototype.extendApp = function (props) {\n        var _this = this;\n        // Copy the object onto the FirebaseAppImpl prototype\n        util.deepExtend(this, props);\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n            tokenListeners.forEach(function (listener) {\n                _this.INTERNAL.addAuthTokenListener(listener);\n            });\n            tokenListeners = [];\n        }\n    };\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            error('app-deleted', { name: this.name_ });\n        }\n    };\n    return FirebaseAppImpl;\n}();\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\nFirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log('dc');\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\nfunction createFirebaseNamespace() {\n    var apps_ = {};\n    var factories = {};\n    var appHooks = {};\n    // A namespace is a plain JavaScript Object.\n    var namespace = {\n        // Hack to prevent Babel from modifying the object returned\n        // as the firebase namespace.\n        __esModule: true,\n        initializeApp: initializeApp,\n        app: app,\n        apps: null,\n        Promise: Promise,\n        SDK_VERSION: '5.5.9',\n        INTERNAL: {\n            registerService: registerService,\n            createFirebaseNamespace: createFirebaseNamespace,\n            extendNamespace: extendNamespace,\n            createSubscribe: util.createSubscribe,\n            ErrorFactory: util.ErrorFactory,\n            removeApp: removeApp,\n            factories: factories,\n            useAsService: useAsService,\n            Promise: Promise,\n            deepExtend: util.deepExtend\n        }\n    };\n    // Inject a circular default export to allow Babel users who were previously\n    // using:\n    //\n    //   import firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase').default;\n    //\n    // instead of\n    //\n    //   import * as firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase');\n    util.patchProperty(namespace, 'default', namespace);\n    // firebase.apps is a read-only getter.\n    Object.defineProperty(namespace, 'apps', {\n        get: getApps\n    });\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\n    function removeApp(name) {\n        var app = apps_[name];\n        callAppHooks(app, 'delete');\n        delete apps_[name];\n    }\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\n    function app(name) {\n        name = name || DEFAULT_ENTRY_NAME;\n        if (!contains(apps_, name)) {\n            error('no-app', { name: name });\n        }\n        return apps_[name];\n    }\n    util.patchProperty(app, 'App', FirebaseAppImpl);\n    function initializeApp(options, rawConfig) {\n        if (rawConfig === void 0) {\n            rawConfig = {};\n        }\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\n            var name_1 = rawConfig;\n            rawConfig = { name: name_1 };\n        }\n        var config = rawConfig;\n        if (config.name === undefined) {\n            config.name = DEFAULT_ENTRY_NAME;\n        }\n        var name = config.name;\n        if (typeof name !== 'string' || !name) {\n            error('bad-app-name', { name: name + '' });\n        }\n        if (contains(apps_, name)) {\n            error('duplicate-app', { name: name });\n        }\n        var app = new FirebaseAppImpl(options, config, namespace);\n        apps_[name] = app;\n        callAppHooks(app, 'create');\n        return app;\n    }\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\n    function getApps() {\n        // Make a copy so caller cannot mutate the apps list.\n        return Object.keys(apps_).map(function (name) {\n            return apps_[name];\n        });\n    }\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n        // Cannot re-register a service that already exists\n        if (factories[name]) {\n            error('duplicate-service', { name: name });\n        }\n        // Capture the service factory for later service instantiation\n        factories[name] = createService;\n        // Capture the appHook, if passed\n        if (appHook) {\n            appHooks[name] = appHook;\n            // Run the **new** app hook on all existing apps\n            getApps().forEach(function (app) {\n                appHook('create', app);\n            });\n        }\n        // The Service namespace is an accessor function ...\n        var serviceNamespace = function serviceNamespace(appArg) {\n            if (appArg === void 0) {\n                appArg = app();\n            }\n            if (typeof appArg[name] !== 'function') {\n                // Invalid argument.\n                // This happens in the following case: firebase.storage('gs:/')\n                error('invalid-app-argument', { name: name });\n            }\n            // Forward service instance lookup to the FirebaseApp.\n            return appArg[name]();\n        };\n        // ... and a container for service-level properties.\n        if (serviceProperties !== undefined) {\n            util.deepExtend(serviceNamespace, serviceProperties);\n        }\n        // Monkey-patch the serviceNamespace onto the firebase namespace\n        namespace[name] = serviceNamespace;\n        // Patch the FirebaseAppImpl prototype\n        FirebaseAppImpl.prototype[name] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var serviceFxn = this._getService.bind(this, name);\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n        };\n        return serviceNamespace;\n    }\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\n    function extendNamespace(props) {\n        util.deepExtend(namespace, props);\n    }\n    function callAppHooks(app, eventName) {\n        Object.keys(factories).forEach(function (serviceName) {\n            // Ignore virtual services\n            var factoryName = useAsService(app, serviceName);\n            if (factoryName === null) {\n                return;\n            }\n            if (appHooks[factoryName]) {\n                appHooks[factoryName](eventName, app);\n            }\n        });\n    }\n    // Map the requested service to a registered service name\n    // (used to map auth to serverAuth service when needed).\n    function useAsService(app, name) {\n        if (name === 'serverAuth') {\n            return null;\n        }\n        var useService = name;\n        var options = app.options;\n        return useService;\n    }\n    return namespace;\n}\nfunction error(code, args) {\n    throw appErrors.create(code, args);\n}\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nvar errors = {\n    'no-app': \"No Firebase App '{$name}' has been created - \" + 'call Firebase App.initializeApp()',\n    'bad-app-name': \"Illegal App name: '{$name}\",\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' + 'account is only allowed in a Node.js environment. On client ' + 'devices, you should instead initialize the SDK with an api key and ' + 'auth domain',\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' + 'Firebase App instance.'\n};\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n/***/ }),\n\n/***/ \"Pxmi\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = __webpack_require__(\"TToO\");\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\nvar CONSTANTS = {\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\n    NODE_CLIENT: false,\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\n    NODE_ADMIN: false,\n    /**\r\n     * Firebase SDK Version\r\n     */\n    SDK_VERSION: '${JSCORE_VERSION}'\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\nvar assert = function assert(assertion, message) {\n    if (!assertion) {\n        throw assertionError(message);\n    }\n};\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\nvar assertionError = function assertionError(message) {\n    return new Error('Firebase Database (' + CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar stringToByteArray = function stringToByteArray(str) {\n    // TODO(user): Use native implementations if/when available\n    var out = [],\n        p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            out[p++] = c;\n        } else if (c < 2048) {\n            out[p++] = c >> 6 | 192;\n            out[p++] = c & 63 | 128;\n        } else if ((c & 0xfc00) == 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            out[p++] = c >> 18 | 240;\n            out[p++] = c >> 12 & 63 | 128;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        } else {\n            out[p++] = c >> 12 | 224;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        }\n    }\n    return out;\n};\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\nvar byteArrayToString = function byteArrayToString(bytes) {\n    // TODO(user): Use native implementations if/when available\n    var out = [],\n        pos = 0,\n        c = 0;\n    while (pos < bytes.length) {\n        var c1 = bytes[pos++];\n        if (c1 < 128) {\n            out[c++] = String.fromCharCode(c1);\n        } else if (c1 > 191 && c1 < 224) {\n            var c2 = bytes[pos++];\n            out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\n        } else if (c1 > 239 && c1 < 365) {\n            // Surrogate Pair\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            var c4 = bytes[pos++];\n            var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n        } else {\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n        }\n    }\n    return out.join('');\n};\n// Static lookup maps, lazily populated by init_()\nvar base64 = {\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\n    byteToCharMap_: null,\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\n    charToByteMap_: null,\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\n    byteToCharMapWebSafe_: null,\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\n    charToByteMapWebSafe_: null,\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\n    get ENCODED_VALS() {\n        return this.ENCODED_VALS_BASE + '+/=';\n    },\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\n    get ENCODED_VALS_WEBSAFE() {\n        return this.ENCODED_VALS_BASE + '-_.';\n    },\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\n    encodeByteArray: function encodeByteArray(input, opt_webSafe) {\n        if (!Array.isArray(input)) {\n            throw Error('encodeByteArray takes an array as a parameter');\n        }\n        this.init_();\n        var byteToCharMap = opt_webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;\n        var output = [];\n        for (var i = 0; i < input.length; i += 3) {\n            var byte1 = input[i];\n            var haveByte2 = i + 1 < input.length;\n            var byte2 = haveByte2 ? input[i + 1] : 0;\n            var haveByte3 = i + 2 < input.length;\n            var byte3 = haveByte3 ? input[i + 2] : 0;\n            var outByte1 = byte1 >> 2;\n            var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;\n            var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;\n            var outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                    outByte3 = 64;\n                }\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join('');\n    },\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\n    encodeString: function encodeString(input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return btoa(input);\n        }\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\n    },\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\n    decodeString: function decodeString(input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return atob(input);\n        }\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\n    },\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\n    decodeStringToByteArray: function decodeStringToByteArray(input, opt_webSafe) {\n        this.init_();\n        var charToByteMap = opt_webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;\n        var output = [];\n        for (var i = 0; i < input.length;) {\n            var byte1 = charToByteMap[input.charAt(i++)];\n            var haveByte2 = i < input.length;\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            var haveByte3 = i < input.length;\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            var haveByte4 = i < input.length;\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n                throw Error();\n            }\n            var outByte1 = byte1 << 2 | byte2 >> 4;\n            output.push(outByte1);\n            if (byte3 != 64) {\n                var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;\n                output.push(outByte2);\n                if (byte4 != 64) {\n                    var outByte3 = byte3 << 6 & 0xc0 | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\n    init_: function init_() {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\nvar base64Encode = function base64Encode(str) {\n    var utf8Bytes = stringToByteArray(str);\n    return base64.encodeByteArray(utf8Bytes, true);\n};\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\nvar base64Decode = function base64Decode(str) {\n    try {\n        return base64.decodeString(str, true);\n    } catch (e) {\n        console.error('base64Decode failed: ', e);\n    }\n    return null;\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!source.hasOwnProperty(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\n// TODO: Really needed (for JSCompiler type checking)?\nfunction patchProperty(obj, prop, value) {\n    obj[prop] = value;\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Deferred = /** @class */function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\n    Deferred.prototype.wrapCallback = function (callback) {\n        var _this = this;\n        return function (error, value) {\n            if (error) {\n                _this.reject(error);\n            } else {\n                _this.resolve(value);\n            }\n            if (typeof callback === 'function') {\n                // Attaching noop handler just in case developer wasn't expecting\n                // promises\n                _this.promise.catch(function () {});\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (callback.length === 1) {\n                    callback(error);\n                } else {\n                    callback(error, value);\n                }\n            }\n        };\n    };\n    return Deferred;\n}();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\nvar getUA = function getUA() {\n    if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {\n        return navigator['userAgent'];\n    } else {\n        return '';\n    }\n};\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\nvar isMobileCordova = function isMobileCordova() {\n    return typeof window !== 'undefined' && !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());\n};\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\nvar isReactNative = function isReactNative() {\n    return typeof navigator === 'object' && navigator['product'] === 'ReactNative';\n};\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\nvar isNodeSdk = function isNodeSdk() {\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n};\n\nvar ERROR_NAME = 'FirebaseError';\nvar captureStackTrace = Error.captureStackTrace;\n// Export for faking in tests\nfunction patchCapture(captureFake) {\n    var result = captureStackTrace;\n    captureStackTrace = captureFake;\n    return result;\n}\nvar FirebaseError = /** @class */function () {\n    function FirebaseError(code, message) {\n        this.code = code;\n        this.message = message;\n        // We want the stack value, if implemented by Error\n        if (captureStackTrace) {\n            // Patches this.stack, omitted calls above ErrorFactory#create\n            captureStackTrace(this, ErrorFactory.prototype.create);\n        } else {\n            try {\n                // In case of IE11, stack will be set only after error is raised.\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\n                throw Error.apply(this, arguments);\n            } catch (err) {\n                this.name = ERROR_NAME;\n                // Make non-enumerable getter for the property.\n                Object.defineProperty(this, 'stack', {\n                    get: function get() {\n                        return err.stack;\n                    }\n                });\n            }\n        }\n    }\n    return FirebaseError;\n}();\n// Back-door inheritance\nFirebaseError.prototype = Object.create(Error.prototype);\nFirebaseError.prototype.constructor = FirebaseError;\nFirebaseError.prototype.name = ERROR_NAME;\nvar ErrorFactory = /** @class */function () {\n    function ErrorFactory(service, serviceName, errors) {\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n        // Matches {$name}, by default.\n        this.pattern = /\\{\\$([^}]+)}/g;\n        // empty\n    }\n    ErrorFactory.prototype.create = function (code, data) {\n        if (data === undefined) {\n            data = {};\n        }\n        var template = this.errors[code];\n        var fullCode = this.service + '/' + code;\n        var message;\n        if (template === undefined) {\n            message = 'Error';\n        } else {\n            message = template.replace(this.pattern, function (match, key) {\n                var value = data[key];\n                return value !== undefined ? value.toString() : '<' + key + '?>';\n            });\n        }\n        // Service: Error message (service/code).\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\n        var err = new FirebaseError(fullCode, message);\n        // Populate the Error object with message parts for programmatic\n        // accesses (e.g., e.file).\n        for (var prop in data) {\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\n                continue;\n            }\n            err[prop] = data[prop];\n        }\n        return err;\n    };\n    return ErrorFactory;\n}();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\nfunction jsonEval(str) {\n    return JSON.parse(str);\n}\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\nfunction stringify(data) {\n    return JSON.stringify(data);\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\nvar decode = function decode(token) {\n    var header = {},\n        claims = {},\n        data = {},\n        signature = '';\n    try {\n        var parts = token.split('.');\n        header = jsonEval(base64Decode(parts[0]) || '');\n        claims = jsonEval(base64Decode(parts[1]) || '');\n        signature = parts[2];\n        data = claims['d'] || {};\n        delete claims['d'];\n    } catch (e) {}\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\nvar isValidTimestamp = function isValidTimestamp(token) {\n    var claims = decode(token).claims,\n        now = Math.floor(new Date().getTime() / 1000),\n        validSince,\n        validUntil;\n    if (typeof claims === 'object') {\n        if (claims.hasOwnProperty('nbf')) {\n            validSince = claims['nbf'];\n        } else if (claims.hasOwnProperty('iat')) {\n            validSince = claims['iat'];\n        }\n        if (claims.hasOwnProperty('exp')) {\n            validUntil = claims['exp'];\n        } else {\n            // token will expire after 24h by default\n            validUntil = validSince + 86400;\n        }\n    }\n    return now && validSince && validUntil && now >= validSince && now <= validUntil;\n};\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\nvar issuedAtTime = function issuedAtTime(token) {\n    var claims = decode(token).claims;\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n        return claims['iat'];\n    }\n    return null;\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\nvar isValidFormat = function isValidFormat(token) {\n    var decoded = decode(token),\n        claims = decoded.claims;\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\nvar isAdmin = function isAdmin(token) {\n    var claims = decode(token).claims;\n    return typeof claims === 'object' && claims['admin'] === true;\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\nvar contains = function contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar safeGet = function safeGet(obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key];\n    // else return undefined.\n};\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\nvar forEach = function forEach(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n};\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\nvar extend = function extend(objTo, objFrom) {\n    forEach(objFrom, function (key, value) {\n        objTo[key] = value;\n    });\n    return objTo;\n};\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\nvar clone = function clone(obj) {\n    return extend({}, obj);\n};\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\nvar isNonNullObject = function isNonNullObject(obj) {\n    return typeof obj === 'object' && obj !== null;\n};\nvar isEmpty = function isEmpty(obj) {\n    for (var key in obj) {\n        return false;\n    }\n    return true;\n};\nvar getCount = function getCount(obj) {\n    var rv = 0;\n    for (var key in obj) {\n        rv++;\n    }\n    return rv;\n};\nvar map = function map(obj, f, opt_obj) {\n    var res = {};\n    for (var key in obj) {\n        res[key] = f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n};\nvar findKey = function findKey(obj, fn, opt_this) {\n    for (var key in obj) {\n        if (fn.call(opt_this, obj[key], key, obj)) {\n            return key;\n        }\n    }\n    return undefined;\n};\nvar findValue = function findValue(obj, fn, opt_this) {\n    var key = findKey(obj, fn, opt_this);\n    return key && obj[key];\n};\nvar getAnyKey = function getAnyKey(obj) {\n    for (var key in obj) {\n        return key;\n    }\n};\nvar getValues = function getValues(obj) {\n    var res = [];\n    var i = 0;\n    for (var key in obj) {\n        res[i++] = obj[key];\n    }\n    return res;\n};\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\nvar every = function every(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            if (!fn(key, obj[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\nvar querystring = function querystring(querystringParams) {\n    var params = [];\n    forEach(querystringParams, function (key, value) {\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayVal) {\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n            });\n        } else {\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        }\n    });\n    return params.length ? '&' + params.join('&') : '';\n};\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\nvar querystringDecode = function querystringDecode(querystring) {\n    var obj = {};\n    var tokens = querystring.replace(/^\\?/, '').split('&');\n    tokens.forEach(function (token) {\n        if (token) {\n            var key = token.split('=');\n            obj[key[0]] = key[1];\n        }\n    });\n    return obj;\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\nvar Hash = /** @class */function () {\n    function Hash() {\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\n        this.blockSize = -1;\n    }\n    return Hash;\n}();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\nvar Sha1 = /** @class */function (_super) {\n    tslib_1.__extends(Sha1, _super);\n    function Sha1() {\n        var _this = _super.call(this) || this;\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\n        _this.chain_ = [];\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\n        _this.buf_ = [];\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\n        _this.W_ = [];\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\n        _this.pad_ = [];\n        /**\r\n         * @private {number}\r\n         */\n        _this.inbuf_ = 0;\n        /**\r\n         * @private {number}\r\n         */\n        _this.total_ = 0;\n        _this.blockSize = 512 / 8;\n        _this.pad_[0] = 128;\n        for (var i = 1; i < _this.blockSize; ++i) {\n            _this.pad_[i] = 0;\n        }\n        _this.reset();\n        return _this;\n    }\n    Sha1.prototype.reset = function () {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    };\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\n        if (!opt_offset) {\n            opt_offset = 0;\n        }\n        var W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (var i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] = buf.charCodeAt(opt_offset) << 24 | buf.charCodeAt(opt_offset + 1) << 16 | buf.charCodeAt(opt_offset + 2) << 8 | buf.charCodeAt(opt_offset + 3);\n                opt_offset += 4;\n            }\n        } else {\n            for (var i = 0; i < 16; i++) {\n                W[i] = buf[opt_offset] << 24 | buf[opt_offset + 1] << 16 | buf[opt_offset + 2] << 8 | buf[opt_offset + 3];\n                opt_offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (var i = 16; i < 80; i++) {\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = (t << 1 | t >>> 31) & 0xffffffff;\n        }\n        var a = this.chain_[0];\n        var b = this.chain_[1];\n        var c = this.chain_[2];\n        var d = this.chain_[3];\n        var e = this.chain_[4];\n        var f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (var i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ b & (c ^ d);\n                    k = 0x5a827999;\n                } else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            } else {\n                if (i < 60) {\n                    f = b & c | d & (b | c);\n                    k = 0x8f1bbcdc;\n                } else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            var t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;\n            e = d;\n            d = c;\n            c = (b << 30 | b >>> 2) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = this.chain_[0] + a & 0xffffffff;\n        this.chain_[1] = this.chain_[1] + b & 0xffffffff;\n        this.chain_[2] = this.chain_[2] + c & 0xffffffff;\n        this.chain_[3] = this.chain_[3] + d & 0xffffffff;\n        this.chain_[4] = this.chain_[4] + e & 0xffffffff;\n    };\n    Sha1.prototype.update = function (bytes, opt_length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (opt_length === undefined) {\n            opt_length = bytes.length;\n        }\n        var lengthMinusBlock = opt_length - this.blockSize;\n        var n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        var buf = this.buf_;\n        var inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < opt_length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf == 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            } else {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += opt_length;\n    };\n    /** @override */\n    Sha1.prototype.digest = function () {\n        var digest = [];\n        var totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        } else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (var i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        var n = 0;\n        for (var i = 0; i < 5; i++) {\n            for (var j = 24; j >= 0; j -= 8) {\n                digest[n] = this.chain_[i] >> j & 255;\n                ++n;\n            }\n        }\n        return digest;\n    };\n    return Sha1;\n}(Hash);\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\nfunction createSubscribe(executor, onNoObservers) {\n    var proxy = new ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\nvar ObserverProxy = /** @class */function () {\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\n    function ObserverProxy(executor, onNoObservers) {\n        var _this = this;\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = Promise.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task.then(function () {\n            executor(_this);\n        }).catch(function (e) {\n            _this.error(e);\n        });\n    }\n    ObserverProxy.prototype.next = function (value) {\n        this.forEachObserver(function (observer) {\n            observer.next(value);\n        });\n    };\n    ObserverProxy.prototype.error = function (error) {\n        this.forEachObserver(function (observer) {\n            observer.error(error);\n        });\n        this.close(error);\n    };\n    ObserverProxy.prototype.complete = function () {\n        this.forEachObserver(function (observer) {\n            observer.complete();\n        });\n        this.close();\n    };\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\n        var _this = this;\n        var observer;\n        if (nextOrObserver === undefined && error === undefined && complete === undefined) {\n            throw new Error('Missing Observer.');\n        }\n        // Assemble an Observer object when passed as callback functions.\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n            observer = nextOrObserver;\n        } else {\n            observer = {\n                next: nextOrObserver,\n                error: error,\n                complete: complete\n            };\n        }\n        if (observer.next === undefined) {\n            observer.next = noop;\n        }\n        if (observer.error === undefined) {\n            observer.error = noop;\n        }\n        if (observer.complete === undefined) {\n            observer.complete = noop;\n        }\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) {\n            this.task.then(function () {\n                try {\n                    if (_this.finalError) {\n                        observer.error(_this.finalError);\n                    } else {\n                        observer.complete();\n                    }\n                } catch (e) {\n                    // nothing\n                }\n                return;\n            });\n        }\n        this.observers.push(observer);\n        return unsub;\n    };\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\n        if (this.observers === undefined || this.observers[i] === undefined) {\n            return;\n        }\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n            this.onNoObservers(this);\n        }\n    };\n    ObserverProxy.prototype.forEachObserver = function (fn) {\n        if (this.finalized) {\n            // Already closed by previous event....just eat the additional values.\n            return;\n        }\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for (var i = 0; i < this.observers.length; i++) {\n            this.sendOne(i, fn);\n        }\n    };\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    ObserverProxy.prototype.sendOne = function (i, fn) {\n        var _this = this;\n        // Execute the callback asynchronously\n        this.task.then(function () {\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\n                try {\n                    fn(_this.observers[i]);\n                } catch (e) {\n                    // Ignore exceptions raised in Observers or missing methods of an\n                    // Observer.\n                    // Log error to console. b/31404806\n                    if (typeof console !== 'undefined' && console.error) {\n                        console.error(e);\n                    }\n                }\n            }\n        });\n    };\n    ObserverProxy.prototype.close = function (err) {\n        var _this = this;\n        if (this.finalized) {\n            return;\n        }\n        this.finalized = true;\n        if (err !== undefined) {\n            this.finalError = err;\n        }\n        // Proxy is no longer needed - garbage collect references\n        this.task.then(function () {\n            _this.observers = undefined;\n            _this.onNoObservers = undefined;\n        });\n    };\n    return ObserverProxy;\n}();\n/** Turn synchronous function into one called asynchronously. */\nfunction async(fn, onError) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        Promise.resolve(true).then(function () {\n            fn.apply(void 0, args);\n        }).catch(function (error) {\n            if (onError) {\n                onError(error);\n            }\n        });\n    };\n}\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in obj && typeof obj[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction noop() {}\n// do nothing\n\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\nvar validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {\n    var argError;\n    if (argCount < minCount) {\n        argError = 'at least ' + minCount;\n    } else if (argCount > maxCount) {\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n    }\n    if (argError) {\n        var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';\n        throw new Error(error);\n    }\n};\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\nfunction errorPrefix(fnName, argumentNumber, optional) {\n    var argName = '';\n    switch (argumentNumber) {\n        case 1:\n            argName = optional ? 'first' : 'First';\n            break;\n        case 2:\n            argName = optional ? 'second' : 'Second';\n            break;\n        case 3:\n            argName = optional ? 'third' : 'Third';\n            break;\n        case 4:\n            argName = optional ? 'fourth' : 'Fourth';\n            break;\n        default:\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\n    }\n    var error = fnName + ' failed: ';\n    error += argName + ' argument ';\n    return error;\n}\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\n    if (optional && !namespace) return;\n    if (typeof namespace !== 'string') {\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid firebase namespace.');\n    }\n}\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\n    if (optional && !callback) return;\n    if (typeof callback !== 'function') throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid function.');\n}\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\n    if (optional && !context) return;\n    if (typeof context !== 'object' || context === null) throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid context object.');\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\nvar stringToByteArray$1 = function stringToByteArray$1(str) {\n    var out = [],\n        p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            var high = c - 0xd800; // the high 10 bits.\n            i++;\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) {\n            out[p++] = c;\n        } else if (c < 2048) {\n            out[p++] = c >> 6 | 192;\n            out[p++] = c & 63 | 128;\n        } else if (c < 65536) {\n            out[p++] = c >> 12 | 224;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        } else {\n            out[p++] = c >> 18 | 240;\n            out[p++] = c >> 12 & 63 | 128;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        }\n    }\n    return out;\n};\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\nvar stringLength = function stringLength(str) {\n    var p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            p++;\n        } else if (c < 2048) {\n            p += 2;\n        } else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        } else {\n            p += 3;\n        }\n    }\n    return p;\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n/***/ }),\n\n/***/ \"TToO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/* harmony export (immutable) */ __webpack_exports__[\"__makeTemplateObject\"] = __makeTemplateObject;\n/* harmony export (immutable) */ __webpack_exports__[\"__importStar\"] = __importStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__importDefault\"] = __importDefault;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n} || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n};\n\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) {\n            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n    }\n    return t;\n};\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    }return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n    return function (target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\n\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : new P(function (resolve) {\n                resolve(result.value);\n            }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\n\nfunction __generator(thisArg, body) {\n    var _ = { label: 0, sent: function sent() {\n            if (t[0] & 1) throw t[1];return t[1];\n        }, trys: [], ops: [] },\n        f,\n        y,\n        t,\n        g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n        return this;\n    }), g;\n    function verb(n) {\n        return function (v) {\n            return step([n, v]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) {\n            try {\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n                if (y = 0, t) op = [0, t.value];\n                switch (op[0]) {\n                    case 0:case 1:\n                        t = op;break;\n                    case 4:\n                        _.label++;return { value: op[1], done: false };\n                    case 5:\n                        _.label++;y = op[1];op = [0];continue;\n                    case 7:\n                        op = _.ops.pop();_.trys.pop();continue;\n                    default:\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                            _ = 0;continue;\n                        }\n                        if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                            _.label = op[1];break;\n                        }\n                        if (op[0] === 6 && _.label < t[1]) {\n                            _.label = t[1];t = op;break;\n                        }\n                        if (t && _.label < t[2]) {\n                            _.label = t[2];_.ops.push(op);break;\n                        }\n                        if (t[2]) _.ops.pop();\n                        _.trys.pop();continue;\n                }\n                op = body.call(thisArg, _);\n            } catch (e) {\n                op = [6, e];y = 0;\n            } finally {\n                f = t = 0;\n            }\n        }if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };\n    }\n}\n\nfunction __exportStar(m, exports) {\n    for (var p in m) {\n        if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n}\n\nfunction __values(o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n        i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function next() {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n}\n\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n        r,\n        ar = [],\n        e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n            ar.push(r.value);\n        }\n    } catch (error) {\n        e = { error: error };\n    } finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally {\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\n\nfunction __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++) {\n        ar = ar.concat(__read(arguments[i]));\n    }return ar;\n}\n\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []),\n        i,\n        q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function (v) {\n            return new Promise(function (a, b) {\n                q.push([n, v, a, b]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\n\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function () {\n        return this;\n    }, i;\n    function verb(n, f) {\n        if (o[n]) i[n] = function (v) {\n            return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v;\n        };\n    }\n}\n\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator];\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", { value: raw });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n};\n\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) {\n        if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }result.default = mod;\n    return result;\n}\n\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : { default: mod };\n}\n\n/***/ }),\n\n/***/ \"V+3I\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"13b3b0f3b1234192175252dfb48e82d5.svg\";\n\n/***/ }),\n\n/***/ \"cbDw\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"fjI4\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLogLevel\", function() { return setLogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogLevel\", function() { return LogLevel; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A container for all of the Logger instances\r\n */\nvar instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\n/**\r\n * The default log level\r\n */\nvar defaultLogLevel = LogLevel.INFO;\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\nvar defaultLogHandler = function defaultLogHandler(instance, logType) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (logType < instance.logLevel) return;\n    var now = new Date().toISOString();\n    switch (logType) {\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\n        case LogLevel.DEBUG:\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.VERBOSE:\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.INFO:\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.WARN:\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.ERROR:\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        default:\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\n    }\n};\nvar Logger = /** @class */function () {\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\n    function Logger(name) {\n        this.name = name;\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\n        this._logLevel = defaultLogLevel;\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\n        this._logHandler = defaultLogHandler;\n        /**\r\n         * Capture the current instance for later use\r\n         */\n        instances.push(this);\n    }\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\n        get: function get() {\n            return this._logLevel;\n        },\n        set: function set(val) {\n            if (!(val in LogLevel)) {\n                throw new TypeError('Invalid value assigned to `logLevel`');\n            }\n            this._logLevel = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\n        get: function get() {\n            return this._logHandler;\n        },\n        set: function set(val) {\n            if (typeof val !== 'function') {\n                throw new TypeError('Value assigned to `logHandler` must be a function');\n            }\n            this._logHandler = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\n    Logger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\n    };\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\n    };\n    Logger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\n    };\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\n    };\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\n    };\n    return Logger;\n}();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction setLogLevel(level) {\n    instances.forEach(function (inst) {\n        inst.logLevel = level;\n    });\n}\n\n\n\n/***/ }),\n\n/***/ \"jE0U\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,'__esModule',{value:true});function _interopDefault(ex){return ex&&typeof ex==='object'&&'default'in ex?ex['default']:ex;}var util=__webpack_require__(\"Pxmi\");var logger=__webpack_require__(\"fjI4\");var tslib_1=__webpack_require__(\"TToO\");var firebase=_interopDefault(__webpack_require__(\"O4tu\"));/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */var DOMStorageWrapper=/** @class */function(){/**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */function DOMStorageWrapper(domStorage_){this.domStorage_=domStorage_;// Use a prefix to avoid collisions with other stuff saved by the app.\nthis.prefix_='firebase:';}/**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */DOMStorageWrapper.prototype.set=function(key,value){if(value==null){this.domStorage_.removeItem(this.prefixedName_(key));}else{this.domStorage_.setItem(this.prefixedName_(key),util.stringify(value));}};/**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */DOMStorageWrapper.prototype.get=function(key){var storedVal=this.domStorage_.getItem(this.prefixedName_(key));if(storedVal==null){return null;}else{return util.jsonEval(storedVal);}};/**\r\n     * @param {string} key\r\n     */DOMStorageWrapper.prototype.remove=function(key){this.domStorage_.removeItem(this.prefixedName_(key));};/**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */DOMStorageWrapper.prototype.prefixedName_=function(name){return this.prefix_+name;};DOMStorageWrapper.prototype.toString=function(){return this.domStorage_.toString();};return DOMStorageWrapper;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */var MemoryStorage=/** @class */function(){function MemoryStorage(){this.cache_={};this.isInMemoryStorage=true;}MemoryStorage.prototype.set=function(key,value){if(value==null){delete this.cache_[key];}else{this.cache_[key]=value;}};MemoryStorage.prototype.get=function(key){if(util.contains(this.cache_,key)){return this.cache_[key];}return null;};MemoryStorage.prototype.remove=function(key){delete this.cache_[key];};return MemoryStorage;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */var createStoragefor=function createStoragefor(domStorageName){try{// NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n// so it must be inside the try/catch.\nif(typeof window!=='undefined'&&typeof window[domStorageName]!=='undefined'){// Need to test cache. Just because it's here doesn't mean it works\nvar domStorage=window[domStorageName];domStorage.setItem('firebase:sentinel','cache');domStorage.removeItem('firebase:sentinel');return new DOMStorageWrapper(domStorage);}}catch(e){}// Failed to create wrapper.  Just return in-memory storage.\n// TODO: log?\nreturn new MemoryStorage();};/** A storage object that lasts across sessions */var PersistentStorage=createStoragefor('localStorage');/** A storage object that only lasts one session */var SessionStorage=createStoragefor('sessionStorage');/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var logClient=new logger.Logger('@firebase/database');/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */var LUIDGenerator=function(){var id=1;return function(){return id++;};}();/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */var sha1=function sha1(str){var utf8Bytes=util.stringToByteArray(str);var sha1=new util.Sha1();sha1.update(utf8Bytes);var sha1Bytes=sha1.digest();return util.base64.encodeByteArray(sha1Bytes);};/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */var buildLogMessage_=function buildLogMessage_(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var message='';for(var i=0;i<var_args.length;i++){if(Array.isArray(var_args[i])||var_args[i]&&typeof var_args[i]==='object'&&typeof var_args[i].length==='number'){message+=buildLogMessage_.apply(null,var_args[i]);}else if(typeof var_args[i]==='object'){message+=util.stringify(var_args[i]);}else{message+=var_args[i];}message+=' ';}return message;};/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */var logger$1=null;/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */var firstLog_=true;/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */var enableLogging=function enableLogging(logger_,persistent){util.assert(!persistent||logger_===true||logger_===false,\"Can't turn on custom loggers persistently.\");if(logger_===true){logClient.logLevel=logger.LogLevel.VERBOSE;logger$1=logClient.log.bind(logClient);if(persistent)SessionStorage.set('logging_enabled',true);}else if(typeof logger_==='function'){logger$1=logger_;}else{logger$1=null;SessionStorage.remove('logging_enabled');}};/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */var log=function log(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}if(firstLog_===true){firstLog_=false;if(logger$1===null&&SessionStorage.get('logging_enabled')===true)enableLogging(true);}if(logger$1){var message=buildLogMessage_.apply(null,var_args);logger$1(message);}};/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */var logWrapper=function logWrapper(prefix){return function(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}log.apply(void 0,[prefix].concat(var_args));};};/**\r\n * @param {...string} var_args\r\n */var error=function error(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var message='FIREBASE INTERNAL ERROR: '+buildLogMessage_.apply(void 0,var_args);logClient.error(message);};/**\r\n * @param {...string} var_args\r\n */var fatal=function fatal(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var message=\"FIREBASE FATAL ERROR: \"+buildLogMessage_.apply(void 0,var_args);logClient.error(message);throw new Error(message);};/**\r\n * @param {...*} var_args\r\n */var warn=function warn(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var message='FIREBASE WARNING: '+buildLogMessage_.apply(void 0,var_args);logClient.warn(message);};/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */var warnIfPageIsSecure=function warnIfPageIsSecure(){// Be very careful accessing browser globals. Who knows what may or may not exist.\nif(typeof window!=='undefined'&&window.location&&window.location.protocol&&window.location.protocol.indexOf('https:')!==-1){warn('Insecure Firebase access from a secure page. '+'Please use https in calls to new Firebase().');}};/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */var isInvalidJSONNumber=function isInvalidJSONNumber(data){return typeof data==='number'&&(data!=data||// NaN\ndata==Number.POSITIVE_INFINITY||data==Number.NEGATIVE_INFINITY);};/**\r\n * @param {function()} fn\r\n */var executeWhenDOMReady=function executeWhenDOMReady(fn){if(util.isNodeSdk()||document.readyState==='complete'){fn();}else{// Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n// fire before onload), but fall back to onload.\nvar called_1=false;var wrappedFn_1=function wrappedFn_1(){if(!document.body){setTimeout(wrappedFn_1,Math.floor(10));return;}if(!called_1){called_1=true;fn();}};if(document.addEventListener){document.addEventListener('DOMContentLoaded',wrappedFn_1,false);// fallback to onload.\nwindow.addEventListener('load',wrappedFn_1,false);}else if(document.attachEvent){// IE.\ndocument.attachEvent('onreadystatechange',function(){if(document.readyState==='complete')wrappedFn_1();});// fallback to onload.\nwindow.attachEvent('onload',wrappedFn_1);// jQuery has an extra hack for IE that we could employ (based on\n// http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n// I'm hoping we don't need it.\n}}};/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */var MIN_NAME='[MIN_NAME]';/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */var MAX_NAME='[MAX_NAME]';/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */var nameCompare=function nameCompare(a,b){if(a===b){return 0;}else if(a===MIN_NAME||b===MAX_NAME){return-1;}else if(b===MIN_NAME||a===MAX_NAME){return 1;}else{var aAsInt=tryParseInt(a),bAsInt=tryParseInt(b);if(aAsInt!==null){if(bAsInt!==null){return aAsInt-bAsInt==0?a.length-b.length:aAsInt-bAsInt;}else{return-1;}}else if(bAsInt!==null){return 1;}else{return a<b?-1:1;}}};/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */var stringCompare=function stringCompare(a,b){if(a===b){return 0;}else if(a<b){return-1;}else{return 1;}};/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */var requireKey=function requireKey(key,obj){if(obj&&key in obj){return obj[key];}else{throw new Error('Missing required key ('+key+') in object: '+util.stringify(obj));}};/**\r\n * @param {*} obj\r\n * @return {string}\r\n */var ObjectToUniqueKey=function ObjectToUniqueKey(obj){if(typeof obj!=='object'||obj===null)return util.stringify(obj);var keys=[];for(var k in obj){keys.push(k);}// Export as json, but with the keys sorted.\nkeys.sort();var key='{';for(var i=0;i<keys.length;i++){if(i!==0)key+=',';key+=util.stringify(keys[i]);key+=':';key+=ObjectToUniqueKey(obj[keys[i]]);}key+='}';return key;};/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */var splitStringBySize=function splitStringBySize(str,segsize){var len=str.length;if(len<=segsize){return[str];}var dataSegs=[];for(var c=0;c<len;c+=segsize){if(c+segsize>len){dataSegs.push(str.substring(c,len));}else{dataSegs.push(str.substring(c,c+segsize));}}return dataSegs;};/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */var each=function each(obj,fn){if(Array.isArray(obj)){for(var i=0;i<obj.length;++i){fn(i,obj[i]);}}else{/**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */util.forEach(obj,function(key,val){return fn(val,key);});}};/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */var doubleToIEEE754String=function doubleToIEEE754String(v){util.assert(!isInvalidJSONNumber(v),'Invalid JSON number');// MJL\nvar ebits=11,fbits=52;var bias=(1<<ebits-1)-1,s,e,f,ln,i,bits,str;// Compute sign, exponent, fraction\n// Skip NaN / Infinity handling --MJL.\nif(v===0){e=0;f=0;s=1/v===-Infinity?1:0;}else{s=v<0;v=Math.abs(v);if(v>=Math.pow(2,1-bias)){// Normalized\nln=Math.min(Math.floor(Math.log(v)/Math.LN2),bias);e=ln+bias;f=Math.round(v*Math.pow(2,fbits-ln)-Math.pow(2,fbits));}else{// Denormalized\ne=0;f=Math.round(v/Math.pow(2,1-bias-fbits));}}// Pack sign, exponent, fraction\nbits=[];for(i=fbits;i;i-=1){bits.push(f%2?1:0);f=Math.floor(f/2);}for(i=ebits;i;i-=1){bits.push(e%2?1:0);e=Math.floor(e/2);}bits.push(s?1:0);bits.reverse();str=bits.join('');// Return the data as a hex string. --MJL\nvar hexByteString='';for(i=0;i<64;i+=8){var hexByte=parseInt(str.substr(i,8),2).toString(16);if(hexByte.length===1)hexByte='0'+hexByte;hexByteString=hexByteString+hexByte;}return hexByteString.toLowerCase();};/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */var isChromeExtensionContentScript=function isChromeExtensionContentScript(){return!!(typeof window==='object'&&window['chrome']&&window['chrome']['extension']&&!/^chrome/.test(window.location.href));};/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */var isWindowsStoreApp=function isWindowsStoreApp(){// Check for the presence of a couple WinRT globals\nreturn typeof Windows==='object'&&typeof Windows.UI==='object';};/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */var errorForServerCode=function errorForServerCode(code,query){var reason='Unknown Error';if(code==='too_big'){reason='The data requested exceeds the maximum size '+'that can be accessed with a single request.';}else if(code=='permission_denied'){reason=\"Client doesn't have permission to access the desired data.\";}else if(code=='unavailable'){reason='The service is unavailable';}var error=new Error(code+' at '+query.path.toString()+': '+reason);error.code=code.toUpperCase();return error;};/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */var INTEGER_REGEXP_=new RegExp('^-?\\\\d{1,10}$');/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */var tryParseInt=function tryParseInt(str){if(INTEGER_REGEXP_.test(str)){var intVal=Number(str);if(intVal>=-2147483648&&intVal<=2147483647){return intVal;}}return null;};/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */var exceptionGuard=function exceptionGuard(fn){try{fn();}catch(e){// Re-throw exception when it's safe.\nsetTimeout(function(){// It used to be that \"throw e\" would result in a good console error with\n// relevant context, but as of Chrome 39, you just get the firebase.js\n// file/line number where we re-throw it, which is useless. So we log\n// e.stack explicitly.\nvar stack=e.stack||'';warn('Exception was thrown by user callback.',stack);throw e;},Math.floor(0));}};/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */var beingCrawled=function beingCrawled(){var userAgent=typeof window==='object'&&window['navigator']&&window['navigator']['userAgent']||'';// For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n// believe to support JavaScript/AJAX rendering.\n// NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n// would have seen the page\" is flaky if we don't treat it as a crawler.\nreturn userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0;};/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */var setTimeoutNonBlocking=function setTimeoutNonBlocking(fn,time){var timeout=setTimeout(fn,time);if(typeof timeout==='object'&&timeout['unref']){timeout['unref']();}return timeout;};/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */var Path=/** @class */function(){/**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */function Path(pathOrString,pieceNum){if(pieceNum===void 0){this.pieces_=pathOrString.split('/');// Remove empty pieces.\nvar copyTo=0;for(var i=0;i<this.pieces_.length;i++){if(this.pieces_[i].length>0){this.pieces_[copyTo]=this.pieces_[i];copyTo++;}}this.pieces_.length=copyTo;this.pieceNum_=0;}else{this.pieces_=pathOrString;this.pieceNum_=pieceNum;}}Object.defineProperty(Path,\"Empty\",{/**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */get:function get(){return new Path('');},enumerable:true,configurable:true});Path.prototype.getFront=function(){if(this.pieceNum_>=this.pieces_.length)return null;return this.pieces_[this.pieceNum_];};/**\r\n     * @return {number} The number of segments in this path\r\n     */Path.prototype.getLength=function(){return this.pieces_.length-this.pieceNum_;};/**\r\n     * @return {!Path}\r\n     */Path.prototype.popFront=function(){var pieceNum=this.pieceNum_;if(pieceNum<this.pieces_.length){pieceNum++;}return new Path(this.pieces_,pieceNum);};/**\r\n     * @return {?string}\r\n     */Path.prototype.getBack=function(){if(this.pieceNum_<this.pieces_.length)return this.pieces_[this.pieces_.length-1];return null;};Path.prototype.toString=function(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!=='')pathString+='/'+this.pieces_[i];}return pathString||'/';};Path.prototype.toUrlEncodedString=function(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!=='')pathString+='/'+encodeURIComponent(String(this.pieces_[i]));}return pathString||'/';};/**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */Path.prototype.slice=function(begin){if(begin===void 0){begin=0;}return this.pieces_.slice(this.pieceNum_+begin);};/**\r\n     * @return {?Path}\r\n     */Path.prototype.parent=function(){if(this.pieceNum_>=this.pieces_.length)return null;var pieces=[];for(var i=this.pieceNum_;i<this.pieces_.length-1;i++){pieces.push(this.pieces_[i]);}return new Path(pieces,0);};/**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */Path.prototype.child=function(childPathObj){var pieces=[];for(var i=this.pieceNum_;i<this.pieces_.length;i++){pieces.push(this.pieces_[i]);}if(childPathObj instanceof Path){for(var i=childPathObj.pieceNum_;i<childPathObj.pieces_.length;i++){pieces.push(childPathObj.pieces_[i]);}}else{var childPieces=childPathObj.split('/');for(var i=0;i<childPieces.length;i++){if(childPieces[i].length>0)pieces.push(childPieces[i]);}}return new Path(pieces,0);};/**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */Path.prototype.isEmpty=function(){return this.pieceNum_>=this.pieces_.length;};/**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */Path.relativePath=function(outerPath,innerPath){var outer=outerPath.getFront(),inner=innerPath.getFront();if(outer===null){return innerPath;}else if(outer===inner){return Path.relativePath(outerPath.popFront(),innerPath.popFront());}else{throw new Error('INTERNAL ERROR: innerPath ('+innerPath+') is not within '+'outerPath ('+outerPath+')');}};/**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */Path.comparePaths=function(left,right){var leftKeys=left.slice();var rightKeys=right.slice();for(var i=0;i<leftKeys.length&&i<rightKeys.length;i++){var cmp=nameCompare(leftKeys[i],rightKeys[i]);if(cmp!==0)return cmp;}if(leftKeys.length===rightKeys.length)return 0;return leftKeys.length<rightKeys.length?-1:1;};/**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */Path.prototype.equals=function(other){if(this.getLength()!==other.getLength()){return false;}for(var i=this.pieceNum_,j=other.pieceNum_;i<=this.pieces_.length;i++,j++){if(this.pieces_[i]!==other.pieces_[j]){return false;}}return true;};/**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */Path.prototype.contains=function(other){var i=this.pieceNum_;var j=other.pieceNum_;if(this.getLength()>other.getLength()){return false;}while(i<this.pieces_.length){if(this.pieces_[i]!==other.pieces_[j]){return false;}++i;++j;}return true;};return Path;}();// end Path\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */var ValidationPath=/** @class */function(){/**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */function ValidationPath(path,errorPrefix_){this.errorPrefix_=errorPrefix_;/** @type {!Array<string>} */this.parts_=path.slice();/** @type {number} Initialize to number of '/' chars needed in path. */this.byteLength_=Math.max(1,this.parts_.length);for(var i=0;i<this.parts_.length;i++){this.byteLength_+=util.stringLength(this.parts_[i]);}this.checkValid_();}Object.defineProperty(ValidationPath,\"MAX_PATH_DEPTH\",{/** @const {number} Maximum key depth. */get:function get(){return 32;},enumerable:true,configurable:true});Object.defineProperty(ValidationPath,\"MAX_PATH_LENGTH_BYTES\",{/** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */get:function get(){return 768;},enumerable:true,configurable:true});/** @param {string} child */ValidationPath.prototype.push=function(child){// Count the needed '/'\nif(this.parts_.length>0){this.byteLength_+=1;}this.parts_.push(child);this.byteLength_+=util.stringLength(child);this.checkValid_();};ValidationPath.prototype.pop=function(){var last=this.parts_.pop();this.byteLength_-=util.stringLength(last);// Un-count the previous '/'\nif(this.parts_.length>0){this.byteLength_-=1;}};ValidationPath.prototype.checkValid_=function(){if(this.byteLength_>ValidationPath.MAX_PATH_LENGTH_BYTES){throw new Error(this.errorPrefix_+'has a key path longer than '+ValidationPath.MAX_PATH_LENGTH_BYTES+' bytes ('+this.byteLength_+').');}if(this.parts_.length>ValidationPath.MAX_PATH_DEPTH){throw new Error(this.errorPrefix_+'path specified exceeds the maximum depth that can be written ('+ValidationPath.MAX_PATH_DEPTH+') or object contains a cycle '+this.toErrorString());}};/**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */ValidationPath.prototype.toErrorString=function(){if(this.parts_.length==0){return'';}return\"in property '\"+this.parts_.join('.')+\"'\";};return ValidationPath;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var PROTOCOL_VERSION='5';var VERSION_PARAM='v';var TRANSPORT_SESSION_PARAM='s';var REFERER_PARAM='r';var FORGE_REF='f';var FORGE_DOMAIN='firebaseio.com';var LAST_SESSION_PARAM='ls';var WEBSOCKET='websocket';var LONG_POLLING='long_polling';/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */var RepoInfo=/** @class */function(){/**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */function RepoInfo(host,secure,namespace,webSocketOnly,persistenceKey){if(persistenceKey===void 0){persistenceKey='';}this.secure=secure;this.namespace=namespace;this.webSocketOnly=webSocketOnly;this.persistenceKey=persistenceKey;this.host=host.toLowerCase();this.domain=this.host.substr(this.host.indexOf('.')+1);this.internalHost=PersistentStorage.get('host:'+host)||this.host;}RepoInfo.prototype.needsQueryParam=function(){return this.host!==this.internalHost||this.isCustomHost();};RepoInfo.prototype.isCacheableHost=function(){return this.internalHost.substr(0,2)==='s-';};RepoInfo.prototype.isDemoHost=function(){return this.domain==='firebaseio-demo.com';};RepoInfo.prototype.isCustomHost=function(){return this.domain!=='firebaseio.com'&&this.domain!=='firebaseio-demo.com';};RepoInfo.prototype.updateHost=function(newHost){if(newHost!==this.internalHost){this.internalHost=newHost;if(this.isCacheableHost()){PersistentStorage.set('host:'+this.host,this.internalHost);}}};/**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */RepoInfo.prototype.connectionURL=function(type,params){util.assert(typeof type==='string','typeof type must == string');util.assert(typeof params==='object','typeof params must == object');var connURL;if(type===WEBSOCKET){connURL=(this.secure?'wss://':'ws://')+this.internalHost+'/.ws?';}else if(type===LONG_POLLING){connURL=(this.secure?'https://':'http://')+this.internalHost+'/.lp?';}else{throw new Error('Unknown connection type: '+type);}if(this.needsQueryParam()){params['ns']=this.namespace;}var pairs=[];util.forEach(params,function(key,value){pairs.push(key+'='+value);});return connURL+pairs.join('&');};/** @return {string} */RepoInfo.prototype.toString=function(){var str=this.toURLString();if(this.persistenceKey){str+='<'+this.persistenceKey+'>';}return str;};/** @return {string} */RepoInfo.prototype.toURLString=function(){return(this.secure?'https://':'http://')+this.host;};return RepoInfo;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */function decodePath(pathString){var pathStringDecoded='';var pieces=pathString.split('/');for(var i=0;i<pieces.length;i++){if(pieces[i].length>0){var piece=pieces[i];try{piece=decodeURIComponent(piece.replace(/\\+/g,' '));}catch(e){}pathStringDecoded+='/'+piece;}}return pathStringDecoded;}/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */function decodeQuery(queryString){var results={};if(queryString.charAt(0)==='?'){queryString=queryString.substring(1);}for(var _i=0,_a=queryString.split('&');_i<_a.length;_i++){var segment=_a[_i];if(segment.length===0){continue;}var kv=segment.split('=');if(kv.length===2){results[decodeURIComponent(kv[0])]=decodeURIComponent(kv[1]);}else{warn(\"Invalid query segment '\"+segment+\"' in query '\"+queryString+\"'\");}}return results;}/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */var parseRepoInfo=function parseRepoInfo(dataURL){var parsedUrl=parseURL(dataURL),namespace=parsedUrl.subdomain;if(parsedUrl.domain==='firebase'){fatal(parsedUrl.host+' is no longer supported. '+'Please use <YOUR FIREBASE>.firebaseio.com instead');}// Catch common error of uninitialized namespace value.\nif((!namespace||namespace=='undefined')&&parsedUrl.domain!=='localhost'){fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');}if(!parsedUrl.secure){warnIfPageIsSecure();}var webSocketOnly=parsedUrl.scheme==='ws'||parsedUrl.scheme==='wss';return{repoInfo:new RepoInfo(parsedUrl.host,parsedUrl.secure,namespace,webSocketOnly),path:new Path(parsedUrl.pathString)};};/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */var parseURL=function parseURL(dataURL){// Default to empty strings in the event of a malformed string.\nvar host='',domain='',subdomain='',pathString='';// Always default to SSL, unless otherwise specified.\nvar secure=true,scheme='https',port=443;// Don't do any validation here. The caller is responsible for validating the result of parsing.\nif(typeof dataURL==='string'){// Parse scheme.\nvar colonInd=dataURL.indexOf('//');if(colonInd>=0){scheme=dataURL.substring(0,colonInd-1);dataURL=dataURL.substring(colonInd+2);}// Parse host, path, and query string.\nvar slashInd=dataURL.indexOf('/');if(slashInd===-1){slashInd=dataURL.length;}var questionMarkInd=dataURL.indexOf('?');if(questionMarkInd===-1){questionMarkInd=dataURL.length;}host=dataURL.substring(0,Math.min(slashInd,questionMarkInd));if(slashInd<questionMarkInd){// For pathString, questionMarkInd will always come after slashInd\npathString=decodePath(dataURL.substring(slashInd,questionMarkInd));}var queryParams=decodeQuery(dataURL.substring(Math.min(dataURL.length,questionMarkInd)));// If we have a port, use scheme for determining if it's secure.\ncolonInd=host.indexOf(':');if(colonInd>=0){secure=scheme==='https'||scheme==='wss';port=parseInt(host.substring(colonInd+1),10);}else{colonInd=dataURL.length;}var parts=host.split('.');if(parts.length===3){// Normalize namespaces to lowercase to share storage / connection.\ndomain=parts[1];subdomain=parts[0].toLowerCase();}else if(parts.length===2){domain=parts[0];}else if(parts[0].slice(0,colonInd).toLowerCase()==='localhost'){domain='localhost';}// Support `ns` query param if subdomain not already set\nif(subdomain===''&&'ns'in queryParams){subdomain=queryParams['ns'];}}return{host:host,port:port,domain:domain,subdomain:subdomain,secure:secure,scheme:scheme,pathString:pathString};};/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */var INVALID_KEY_REGEX_=/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */var INVALID_PATH_REGEX_=/[\\[\\].#$\\u0000-\\u001F\\u007F]/;/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */var MAX_LEAF_SIZE_=10*1024*1024;/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */var isValidKey=function isValidKey(key){return typeof key==='string'&&key.length!==0&&!INVALID_KEY_REGEX_.test(key);};/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */var isValidPathString=function isValidPathString(pathString){return typeof pathString==='string'&&pathString.length!==0&&!INVALID_PATH_REGEX_.test(pathString);};/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */var isValidRootPathString=function isValidRootPathString(pathString){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}return isValidPathString(pathString);};/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */var isValidPriority=function isValidPriority(priority){return priority===null||typeof priority==='string'||typeof priority==='number'&&!isInvalidJSONNumber(priority)||priority&&typeof priority==='object'&&util.contains(priority,'.sv');};/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */var validateFirebaseDataArg=function validateFirebaseDataArg(fnName,argumentNumber,data,path,optional){if(optional&&data===undefined)return;validateFirebaseData(util.errorPrefix(fnName,argumentNumber,optional),data,path);};/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */var validateFirebaseData=function validateFirebaseData(errorPrefix,data,path_){var path=path_ instanceof Path?new ValidationPath(path_,errorPrefix):path_;if(data===undefined){throw new Error(errorPrefix+'contains undefined '+path.toErrorString());}if(typeof data==='function'){throw new Error(errorPrefix+'contains a function '+path.toErrorString()+' with contents = '+data.toString());}if(isInvalidJSONNumber(data)){throw new Error(errorPrefix+'contains '+data.toString()+' '+path.toErrorString());}// Check max leaf size, but try to avoid the utf8 conversion if we can.\nif(typeof data==='string'&&data.length>MAX_LEAF_SIZE_/3&&util.stringLength(data)>MAX_LEAF_SIZE_){throw new Error(errorPrefix+'contains a string greater than '+MAX_LEAF_SIZE_+' utf8 bytes '+path.toErrorString()+\" ('\"+data.substring(0,50)+\"...')\");}// TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n// to save extra walking of large objects.\nif(data&&typeof data==='object'){var hasDotValue_1=false,hasActualChild_1=false;util.forEach(data,function(key,value){if(key==='.value'){hasDotValue_1=true;}else if(key!=='.priority'&&key!=='.sv'){hasActualChild_1=true;if(!isValidKey(key)){throw new Error(errorPrefix+' contains an invalid key ('+key+') '+path.toErrorString()+'.  Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}path.push(key);validateFirebaseData(errorPrefix,value,path);path.pop();});if(hasDotValue_1&&hasActualChild_1){throw new Error(errorPrefix+' contains \".value\" child '+path.toErrorString()+' in addition to actual children.');}}};/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */var validateFirebaseMergePaths=function validateFirebaseMergePaths(errorPrefix,mergePaths){var i,curPath;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];var keys=curPath.slice();for(var j=0;j<keys.length;j++){if(keys[j]==='.priority'&&j===keys.length-1){// .priority is OK\n}else if(!isValidKey(keys[j])){throw new Error(errorPrefix+'contains an invalid key ('+keys[j]+') in path '+curPath.toString()+'. Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}}// Check that update keys are not descendants of each other.\n// We rely on the property that sorting guarantees that ancestors come\n// right before descendants.\nmergePaths.sort(Path.comparePaths);var prevPath=null;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];if(prevPath!==null&&prevPath.contains(curPath)){throw new Error(errorPrefix+'contains a path '+prevPath.toString()+' that is ancestor of another path '+curPath.toString());}prevPath=curPath;}};/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */var validateFirebaseMergeDataArg=function validateFirebaseMergeDataArg(fnName,argumentNumber,data,path,optional){if(optional&&data===undefined)return;var errorPrefix=util.errorPrefix(fnName,argumentNumber,optional);if(!(data&&typeof data==='object')||Array.isArray(data)){throw new Error(errorPrefix+' must be an object containing the children to replace.');}var mergePaths=[];util.forEach(data,function(key,value){var curPath=new Path(key);validateFirebaseData(errorPrefix,value,path.child(curPath));if(curPath.getBack()==='.priority'){if(!isValidPriority(value)){throw new Error(errorPrefix+\"contains an invalid value for '\"+curPath.toString()+\"', which must be a valid \"+'Firebase priority (a string, finite number, server value, or null).');}}mergePaths.push(curPath);});validateFirebaseMergePaths(errorPrefix,mergePaths);};var validatePriority=function validatePriority(fnName,argumentNumber,priority,optional){if(optional&&priority===undefined)return;if(isInvalidJSONNumber(priority))throw new Error(util.errorPrefix(fnName,argumentNumber,optional)+'is '+priority.toString()+', but must be a valid Firebase priority (a string, finite number, '+'server value, or null).');// Special case to allow importing data with a .sv.\nif(!isValidPriority(priority))throw new Error(util.errorPrefix(fnName,argumentNumber,optional)+'must be a valid Firebase priority '+'(a string, finite number, server value, or null).');};var validateEventType=function validateEventType(fnName,argumentNumber,eventType,optional){if(optional&&eventType===undefined)return;switch(eventType){case'value':case'child_added':case'child_removed':case'child_changed':case'child_moved':break;default:throw new Error(util.errorPrefix(fnName,argumentNumber,optional)+'must be a valid event type = \"value\", \"child_added\", \"child_removed\", '+'\"child_changed\", or \"child_moved\".');}};var validateKey=function validateKey(fnName,argumentNumber,key,optional){if(optional&&key===undefined)return;if(!isValidKey(key))throw new Error(util.errorPrefix(fnName,argumentNumber,optional)+'was an invalid key = \"'+key+'\".  Firebase keys must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');};var validatePathString=function validatePathString(fnName,argumentNumber,pathString,optional){if(optional&&pathString===undefined)return;if(!isValidPathString(pathString))throw new Error(util.errorPrefix(fnName,argumentNumber,optional)+'was an invalid path = \"'+pathString+'\". Paths must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');};var validateRootPathString=function validateRootPathString(fnName,argumentNumber,pathString,optional){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}validatePathString(fnName,argumentNumber,pathString,optional);};var validateWritablePath=function validateWritablePath(fnName,path){if(path.getFront()==='.info'){throw new Error(fnName+\" failed = Can't modify data under /.info/\");}};var validateUrl=function validateUrl(fnName,argumentNumber,parsedUrl){// TODO = Validate server better.\nvar pathString=parsedUrl.path.toString();if(!(typeof parsedUrl.repoInfo.host==='string')||parsedUrl.repoInfo.host.length===0||!isValidKey(parsedUrl.repoInfo.namespace)&&parsedUrl.repoInfo.host.split(':')[0]!=='localhost'||pathString.length!==0&&!isValidRootPathString(pathString)){throw new Error(util.errorPrefix(fnName,argumentNumber,false)+'must be a valid firebase URL and '+'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');}};var validateBoolean=function validateBoolean(fnName,argumentNumber,bool,optional){if(optional&&bool===undefined)return;if(typeof bool!=='boolean')throw new Error(util.errorPrefix(fnName,argumentNumber,optional)+'must be a boolean.');};/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @constructor\r\n */var OnDisconnect=/** @class */function(){/**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */function OnDisconnect(repo_,path_){this.repo_=repo_;this.path_=path_;}/**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.cancel=function(onComplete){util.validateArgCount('OnDisconnect.cancel',0,1,arguments.length);util.validateCallback('OnDisconnect.cancel',1,onComplete,true);var deferred=new util.Deferred();this.repo_.onDisconnectCancel(this.path_,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.remove=function(onComplete){util.validateArgCount('OnDisconnect.remove',0,1,arguments.length);validateWritablePath('OnDisconnect.remove',this.path_);util.validateCallback('OnDisconnect.remove',1,onComplete,true);var deferred=new util.Deferred();this.repo_.onDisconnectSet(this.path_,null,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.set=function(value,onComplete){util.validateArgCount('OnDisconnect.set',1,2,arguments.length);validateWritablePath('OnDisconnect.set',this.path_);validateFirebaseDataArg('OnDisconnect.set',1,value,this.path_,false);util.validateCallback('OnDisconnect.set',2,onComplete,true);var deferred=new util.Deferred();this.repo_.onDisconnectSet(this.path_,value,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.setWithPriority=function(value,priority,onComplete){util.validateArgCount('OnDisconnect.setWithPriority',2,3,arguments.length);validateWritablePath('OnDisconnect.setWithPriority',this.path_);validateFirebaseDataArg('OnDisconnect.setWithPriority',1,value,this.path_,false);validatePriority('OnDisconnect.setWithPriority',2,priority,false);util.validateCallback('OnDisconnect.setWithPriority',3,onComplete,true);var deferred=new util.Deferred();this.repo_.onDisconnectSetWithPriority(this.path_,value,priority,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.update=function(objectToMerge,onComplete){util.validateArgCount('OnDisconnect.update',1,2,arguments.length);validateWritablePath('OnDisconnect.update',this.path_);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the '+'existing data, or an Object with integer keys if you really do want to only update some of the children.');}validateFirebaseMergeDataArg('OnDisconnect.update',1,objectToMerge,this.path_,false);util.validateCallback('OnDisconnect.update',2,onComplete,true);var deferred=new util.Deferred();this.repo_.onDisconnectUpdate(this.path_,objectToMerge,deferred.wrapCallback(onComplete));return deferred.promise;};return OnDisconnect;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var TransactionResult=/** @class */function(){/**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */function TransactionResult(committed,snapshot){this.committed=committed;this.snapshot=snapshot;}// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users\nTransactionResult.prototype.toJSON=function(){util.validateArgCount('TransactionResult.toJSON',0,1,arguments.length);return{committed:this.committed,snapshot:this.snapshot.toJSON()};};return TransactionResult;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */var nextPushId=function(){// Modeled after base64 web-safe chars, but ordered by ASCII.\nvar PUSH_CHARS='-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';// Timestamp of last push, used to prevent local collisions if you push twice\n// in one ms.\nvar lastPushTime=0;// We generate 72-bits of randomness which get turned into 12 characters and\n// appended to the timestamp to prevent collisions with other clients. We\n// store the last characters we generated because in the event of a collision,\n// we'll use those same characters except \"incremented\" by one.\nvar lastRandChars=[];return function(now){var duplicateTime=now===lastPushTime;lastPushTime=now;var i;var timeStampChars=new Array(8);for(i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);// NOTE: Can't use << here because javascript will convert to int and lose\n// the upper bits.\nnow=Math.floor(now/64);}util.assert(now===0,'Cannot push at time == 0');var id=timeStampChars.join('');if(!duplicateTime){for(i=0;i<12;i++){lastRandChars[i]=Math.floor(Math.random()*64);}}else{// If the timestamp hasn't changed since last push, use the same random\n// number, except incremented by 1.\nfor(i=11;i>=0&&lastRandChars[i]===63;i--){lastRandChars[i]=0;}lastRandChars[i]++;}for(i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i]);}util.assert(id.length===20,'nextPushId: Length should be 20.');return id;};}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */var NamedNode=/** @class */function(){function NamedNode(name,node){this.name=name;this.node=node;}/**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */NamedNode.Wrap=function(name,node){return new NamedNode(name,node);};return NamedNode;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n *\r\n * @constructor\r\n */var Index=/** @class */function(){function Index(){}/**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */Index.prototype.getCompare=function(){return this.compare.bind(this);};/**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */Index.prototype.indexedValueChanged=function(oldNode,newNode){var oldWrapped=new NamedNode(MIN_NAME,oldNode);var newWrapped=new NamedNode(MIN_NAME,newNode);return this.compare(oldWrapped,newWrapped)!==0;};/**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */Index.prototype.minPost=function(){return NamedNode.MIN;};return Index;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __EMPTY_NODE;var KeyIndex=/** @class */function(_super){tslib_1.__extends(KeyIndex,_super);function KeyIndex(){return _super!==null&&_super.apply(this,arguments)||this;}Object.defineProperty(KeyIndex,\"__EMPTY_NODE\",{get:function get(){return __EMPTY_NODE;},set:function set(val){__EMPTY_NODE=val;},enumerable:true,configurable:true});/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.compare=function(a,b){return nameCompare(a.name,b.name);};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.isDefinedOn=function(node){// We could probably return true here (since every node has a key), but it's never called\n// so just leaving unimplemented for now.\nthrow util.assertionError('KeyIndex.isDefinedOn not expected to be called.');};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.indexedValueChanged=function(oldNode,newNode){return false;// The key for a node never changes.\n};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.minPost=function(){return NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.maxPost=function(){// TODO: This should really be created once and cached in a static property, but\n// NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\nreturn new NamedNode(MAX_NAME,__EMPTY_NODE);};/**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */KeyIndex.prototype.makePost=function(indexValue,name){util.assert(typeof indexValue==='string','KeyIndex indexValue must always be a string.');// We just use empty node, but it'll never be compared, since our comparator only looks at name.\nreturn new NamedNode(indexValue,__EMPTY_NODE);};/**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */KeyIndex.prototype.toString=function(){return'.key';};return KeyIndex;}(Index);var KEY_INDEX=new KeyIndex();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var MAX_NODE;function setMaxNode(val){MAX_NODE=val;}/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */var priorityHashText=function priorityHashText(priority){if(typeof priority==='number')return'number:'+doubleToIEEE754String(priority);else return'string:'+priority;};/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */var validatePriorityNode=function validatePriorityNode(priorityNode){if(priorityNode.isLeafNode()){var val=priorityNode.val();util.assert(typeof val==='string'||typeof val==='number'||typeof val==='object'&&util.contains(val,'.sv'),'Priority must be a string or number.');}else{util.assert(priorityNode===MAX_NODE||priorityNode.isEmpty(),'priority of unexpected type.');}// Don't call getPriority() on MAX_NODE to avoid hitting assertion.\nutil.assert(priorityNode===MAX_NODE||priorityNode.getPriority().isEmpty(),\"Priority nodes can't have a priority of their own.\");};/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __childrenNodeConstructor;/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */var LeafNode=/** @class */function(){/**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */function LeafNode(value_,priorityNode_){if(priorityNode_===void 0){priorityNode_=LeafNode.__childrenNodeConstructor.EMPTY_NODE;}this.value_=value_;this.priorityNode_=priorityNode_;this.lazyHash_=null;util.assert(this.value_!==undefined&&this.value_!==null,\"LeafNode shouldn't be created with null/undefined value.\");validatePriorityNode(this.priorityNode_);}Object.defineProperty(LeafNode,\"__childrenNodeConstructor\",{get:function get(){return __childrenNodeConstructor;},set:function set(val){__childrenNodeConstructor=val;},enumerable:true,configurable:true});/** @inheritDoc */LeafNode.prototype.isLeafNode=function(){return true;};/** @inheritDoc */LeafNode.prototype.getPriority=function(){return this.priorityNode_;};/** @inheritDoc */LeafNode.prototype.updatePriority=function(newPriorityNode){return new LeafNode(this.value_,newPriorityNode);};/** @inheritDoc */LeafNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/** @inheritDoc */LeafNode.prototype.getChild=function(path){if(path.isEmpty()){return this;}else if(path.getFront()==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.hasChild=function(){return false;};/** @inheritDoc */LeafNode.prototype.getPredecessorChildName=function(childName,childNode){return null;};/** @inheritDoc */LeafNode.prototype.updateImmediateChild=function(childName,newChildNode){if(childName==='.priority'){return this.updatePriority(newChildNode);}else if(newChildNode.isEmpty()&&childName!=='.priority'){return this;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName,newChildNode).updatePriority(this.priorityNode_);}};/** @inheritDoc */LeafNode.prototype.updateChild=function(path,newChildNode){var front=path.getFront();if(front===null){return newChildNode;}else if(newChildNode.isEmpty()&&front!=='.priority'){return this;}else{util.assert(front!=='.priority'||path.getLength()===1,'.priority must be the last token in a path');return this.updateImmediateChild(front,LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(),newChildNode));}};/** @inheritDoc */LeafNode.prototype.isEmpty=function(){return false;};/** @inheritDoc */LeafNode.prototype.numChildren=function(){return 0;};/** @inheritDoc */LeafNode.prototype.forEachChild=function(index,action){return false;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.val=function(exportFormat){if(exportFormat&&!this.getPriority().isEmpty())return{'.value':this.getValue(),'.priority':this.getPriority().val()};else return this.getValue();};/** @inheritDoc */LeafNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash='';if(!this.priorityNode_.isEmpty())toHash+='priority:'+priorityHashText(this.priorityNode_.val())+':';var type=typeof this.value_;toHash+=type+':';if(type==='number'){toHash+=doubleToIEEE754String(this.value_);}else{toHash+=this.value_;}this.lazyHash_=sha1(toHash);}return this.lazyHash_;};/**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */LeafNode.prototype.getValue=function(){return this.value_;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.compareTo=function(other){if(other===LeafNode.__childrenNodeConstructor.EMPTY_NODE){return 1;}else if(other instanceof LeafNode.__childrenNodeConstructor){return-1;}else{util.assert(other.isLeafNode(),'Unknown node type');return this.compareToLeafNode_(other);}};/**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */LeafNode.prototype.compareToLeafNode_=function(otherLeaf){var otherLeafType=typeof otherLeaf.value_;var thisLeafType=typeof this.value_;var otherIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);var thisIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);util.assert(otherIndex>=0,'Unknown leaf type: '+otherLeafType);util.assert(thisIndex>=0,'Unknown leaf type: '+thisLeafType);if(otherIndex===thisIndex){// Same type, compare values\nif(thisLeafType==='object'){// Deferred value nodes are all equal, but we should also never get to this point...\nreturn 0;}else{// Note that this works because true > false, all others are number or string comparisons\nif(this.value_<otherLeaf.value_){return-1;}else if(this.value_===otherLeaf.value_){return 0;}else{return 1;}}}else{return thisIndex-otherIndex;}};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.withIndex=function(){return this;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.isIndexed=function(){return true;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.equals=function(other){/**\r\n         * @inheritDoc\r\n         */if(other===this){return true;}else if(other.isLeafNode()){var otherLeaf=other;return this.value_===otherLeaf.value_&&this.priorityNode_.equals(otherLeaf.priorityNode_);}else{return false;}};/**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */LeafNode.VALUE_TYPE_ORDER=['object','boolean','number','string'];return LeafNode;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var nodeFromJSON;var MAX_NODE$1;function setNodeFromJSON(val){nodeFromJSON=val;}function setMaxNode$1(val){MAX_NODE$1=val;}/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */var PriorityIndex=/** @class */function(_super){tslib_1.__extends(PriorityIndex,_super);function PriorityIndex(){return _super!==null&&_super.apply(this,arguments)||this;}/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.compare=function(a,b){var aPriority=a.node.getPriority();var bPriority=b.node.getPriority();var indexCmp=aPriority.compareTo(bPriority);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.isDefinedOn=function(node){return!node.getPriority().isEmpty();};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.getPriority().equals(newNode.getPriority());};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.minPost=function(){return NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.maxPost=function(){return new NamedNode(MAX_NAME,new LeafNode('[PRIORITY-POST]',MAX_NODE$1));};/**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */PriorityIndex.prototype.makePost=function(indexValue,name){var priorityNode=nodeFromJSON(indexValue);return new NamedNode(name,new LeafNode('[PRIORITY-POST]',priorityNode));};/**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */PriorityIndex.prototype.toString=function(){return'.priority';};return PriorityIndex;}(Index);var PRIORITY_INDEX=new PriorityIndex();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * An iterator over an LLRBNode.\r\n */var SortedMapIterator=/** @class */function(){/**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */function SortedMapIterator(node,startKey,comparator,isReverse_,resultGenerator_){if(resultGenerator_===void 0){resultGenerator_=null;}this.isReverse_=isReverse_;this.resultGenerator_=resultGenerator_;/** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */this.nodeStack_=[];var cmp=1;while(!node.isEmpty()){node=node;cmp=startKey?comparator(node.key,startKey):1;// flip the comparison if we're going in reverse\nif(isReverse_)cmp*=-1;if(cmp<0){// This node is less than our start key. ignore it\nif(this.isReverse_){node=node.left;}else{node=node.right;}}else if(cmp===0){// This node is exactly equal to our start key. Push it on the stack, but stop iterating;\nthis.nodeStack_.push(node);break;}else{// This node is greater than our start key, add it to the stack and move to the next one\nthis.nodeStack_.push(node);if(this.isReverse_){node=node.right;}else{node=node.left;}}}}SortedMapIterator.prototype.getNext=function(){if(this.nodeStack_.length===0)return null;var node=this.nodeStack_.pop();var result;if(this.resultGenerator_)result=this.resultGenerator_(node.key,node.value);else result={key:node.key,value:node.value};if(this.isReverse_){node=node.left;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.right;}}else{node=node.right;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.left;}}return result;};SortedMapIterator.prototype.hasNext=function(){return this.nodeStack_.length>0;};SortedMapIterator.prototype.peek=function(){if(this.nodeStack_.length===0)return null;var node=this.nodeStack_[this.nodeStack_.length-1];if(this.resultGenerator_){return this.resultGenerator_(node.key,node.value);}else{return{key:node.key,value:node.value};}};return SortedMapIterator;}();/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */var LLRBNode=/** @class */function(){/**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */function LLRBNode(key,value,color,left,right){this.key=key;this.value=value;this.color=color!=null?color:LLRBNode.RED;this.left=left!=null?left:SortedMap.EMPTY_NODE;this.right=right!=null?right:SortedMap.EMPTY_NODE;}/**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */LLRBNode.prototype.copy=function(key,value,color,left,right){return new LLRBNode(key!=null?key:this.key,value!=null?value:this.value,color!=null?color:this.color,left!=null?left:this.left,right!=null?right:this.right);};/**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */LLRBNode.prototype.count=function(){return this.left.count()+1+this.right.count();};/**\r\n     * @return {boolean} True if the tree is empty.\r\n     */LLRBNode.prototype.isEmpty=function(){return false;};/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */LLRBNode.prototype.inorderTraversal=function(action){return this.left.inorderTraversal(action)||action(this.key,this.value)||this.right.inorderTraversal(action);};/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */LLRBNode.prototype.reverseTraversal=function(action){return this.right.reverseTraversal(action)||action(this.key,this.value)||this.left.reverseTraversal(action);};/**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */LLRBNode.prototype.min_=function(){if(this.left.isEmpty()){return this;}else{return this.left.min_();}};/**\r\n     * @return {!K} The maximum key in the tree.\r\n     */LLRBNode.prototype.minKey=function(){return this.min_().key;};/**\r\n     * @return {!K} The maximum key in the tree.\r\n     */LLRBNode.prototype.maxKey=function(){if(this.right.isEmpty()){return this.key;}else{return this.right.maxKey();}};/**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */LLRBNode.prototype.insert=function(key,value,comparator){var cmp,n;n=this;cmp=comparator(key,n.key);if(cmp<0){n=n.copy(null,null,null,n.left.insert(key,value,comparator),null);}else if(cmp===0){n=n.copy(null,value,null,null,null);}else{n=n.copy(null,null,null,null,n.right.insert(key,value,comparator));}return n.fixUp_();};/**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */LLRBNode.prototype.removeMin_=function(){if(this.left.isEmpty()){return SortedMap.EMPTY_NODE;}var n=this;if(!n.left.isRed_()&&!n.left.left.isRed_())n=n.moveRedLeft_();n=n.copy(null,null,null,n.left.removeMin_(),null);return n.fixUp_();};/**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */LLRBNode.prototype.remove=function(key,comparator){var n,smallest;n=this;if(comparator(key,n.key)<0){if(!n.left.isEmpty()&&!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.remove(key,comparator),null);}else{if(n.left.isRed_())n=n.rotateRight_();if(!n.right.isEmpty()&&!n.right.isRed_()&&!n.right.left.isRed_()){n=n.moveRedRight_();}if(comparator(key,n.key)===0){if(n.right.isEmpty()){return SortedMap.EMPTY_NODE;}else{smallest=n.right.min_();n=n.copy(smallest.key,smallest.value,null,null,n.right.removeMin_());}}n=n.copy(null,null,null,null,n.right.remove(key,comparator));}return n.fixUp_();};/**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */LLRBNode.prototype.isRed_=function(){return this.color;};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */LLRBNode.prototype.fixUp_=function(){var n=this;if(n.right.isRed_()&&!n.left.isRed_())n=n.rotateLeft_();if(n.left.isRed_()&&n.left.left.isRed_())n=n.rotateRight_();if(n.left.isRed_()&&n.right.isRed_())n=n.colorFlip_();return n;};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */LLRBNode.prototype.moveRedLeft_=function(){var n=this.colorFlip_();if(n.right.left.isRed_()){n=n.copy(null,null,null,null,n.right.rotateRight_());n=n.rotateLeft_();n=n.colorFlip_();}return n;};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */LLRBNode.prototype.moveRedRight_=function(){var n=this.colorFlip_();if(n.left.left.isRed_()){n=n.rotateRight_();n=n.colorFlip_();}return n;};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */LLRBNode.prototype.rotateLeft_=function(){var nl=this.copy(null,null,LLRBNode.RED,null,this.right.left);return this.right.copy(null,null,this.color,nl,null);};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */LLRBNode.prototype.rotateRight_=function(){var nr=this.copy(null,null,LLRBNode.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,nr);};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */LLRBNode.prototype.colorFlip_=function(){var left=this.left.copy(null,null,!this.left.color,null,null);var right=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,left,right);};/**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */LLRBNode.prototype.checkMaxDepth_=function(){var blackDepth=this.check_();return Math.pow(2.0,blackDepth)<=this.count()+1;};/**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */LLRBNode.prototype.check_=function(){var blackDepth;if(this.isRed_()&&this.left.isRed_()){throw new Error('Red node has red child('+this.key+','+this.value+')');}if(this.right.isRed_()){throw new Error('Right child of ('+this.key+','+this.value+') is red');}blackDepth=this.left.check_();if(blackDepth!==this.right.check_()){throw new Error('Black depths differ');}else{return blackDepth+(this.isRed_()?0:1);}};LLRBNode.RED=true;LLRBNode.BLACK=false;return LLRBNode;}();/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */var LLRBEmptyNode=/** @class */function(){function LLRBEmptyNode(){}/**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */LLRBEmptyNode.prototype.copy=function(key,value,color,left,right){return this;};/**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */LLRBEmptyNode.prototype.insert=function(key,value,comparator){return new LLRBNode(key,value,null);};/**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */LLRBEmptyNode.prototype.remove=function(key,comparator){return this;};/**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */LLRBEmptyNode.prototype.count=function(){return 0;};/**\r\n     * @return {boolean} True if the tree is empty.\r\n     */LLRBEmptyNode.prototype.isEmpty=function(){return true;};/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */LLRBEmptyNode.prototype.inorderTraversal=function(action){return false;};/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */LLRBEmptyNode.prototype.reverseTraversal=function(action){return false;};/**\r\n     * @return {null}\r\n     */LLRBEmptyNode.prototype.minKey=function(){return null;};/**\r\n     * @return {null}\r\n     */LLRBEmptyNode.prototype.maxKey=function(){return null;};/**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */LLRBEmptyNode.prototype.check_=function(){return 0;};/**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */LLRBEmptyNode.prototype.isRed_=function(){return false;};return LLRBEmptyNode;}();/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */var SortedMap=/** @class */function(){/**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */function SortedMap(comparator_,root_){if(root_===void 0){root_=SortedMap.EMPTY_NODE;}this.comparator_=comparator_;this.root_=root_;}/**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */SortedMap.prototype.insert=function(key,value){return new SortedMap(this.comparator_,this.root_.insert(key,value,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */SortedMap.prototype.remove=function(key){return new SortedMap(this.comparator_,this.root_.remove(key,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */SortedMap.prototype.get=function(key){var cmp;var node=this.root_;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){return node.value;}else if(cmp<0){node=node.left;}else if(cmp>0){node=node.right;}}return null;};/**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */SortedMap.prototype.getPredecessorKey=function(key){var cmp,node=this.root_,rightParent=null;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){if(!node.left.isEmpty()){node=node.left;while(!node.right.isEmpty()){node=node.right;}return node.key;}else if(rightParent){return rightParent.key;}else{return null;// first item.\n}}else if(cmp<0){node=node.left;}else if(cmp>0){rightParent=node;node=node.right;}}throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');};/**\r\n     * @return {boolean} True if the map is empty.\r\n     */SortedMap.prototype.isEmpty=function(){return this.root_.isEmpty();};/**\r\n     * @return {number} The total number of nodes in the map.\r\n     */SortedMap.prototype.count=function(){return this.root_.count();};/**\r\n     * @return {?K} The minimum key in the map.\r\n     */SortedMap.prototype.minKey=function(){return this.root_.minKey();};/**\r\n     * @return {?K} The maximum key in the map.\r\n     */SortedMap.prototype.maxKey=function(){return this.root_.maxKey();};/**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */SortedMap.prototype.inorderTraversal=function(action){return this.root_.inorderTraversal(action);};/**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */SortedMap.prototype.reverseTraversal=function(action){return this.root_.reverseTraversal(action);};/**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */SortedMap.prototype.getIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,false,resultGenerator);};SortedMap.prototype.getIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,false,resultGenerator);};SortedMap.prototype.getReverseIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,true,resultGenerator);};SortedMap.prototype.getReverseIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,true,resultGenerator);};/**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */SortedMap.EMPTY_NODE=new LLRBEmptyNode();return SortedMap;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var LOG_2=Math.log(2);/**\r\n * @constructor\r\n */var Base12Num=/** @class */function(){/**\r\n     * @param {number} length\r\n     */function Base12Num(length){var logBase2=function logBase2(num){return parseInt(Math.log(num)/LOG_2,10);};var bitMask=function bitMask(bits){return parseInt(Array(bits+1).join('1'),2);};this.count=logBase2(length+1);this.current_=this.count-1;var mask=bitMask(this.count);this.bits_=length+1&mask;}/**\r\n     * @return {boolean}\r\n     */Base12Num.prototype.nextBitIsOne=function(){//noinspection JSBitwiseOperatorUsage\nvar result=!(this.bits_&0x1<<this.current_);this.current_--;return result;};return Base12Num;}();/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */var buildChildSet=function buildChildSet(childList,cmp,keyFn,mapSortFn){childList.sort(cmp);var buildBalancedTree=function buildBalancedTree(low,high){var length=high-low;var namedNode;var key;if(length==0){return null;}else if(length==1){namedNode=childList[low];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,null,null);}else{var middle=parseInt(length/2,10)+low;var left=buildBalancedTree(low,middle);var right=buildBalancedTree(middle+1,high);namedNode=childList[middle];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,left,right);}};var buildFrom12Array=function buildFrom12Array(base12){var node=null;var root=null;var index=childList.length;var buildPennant=function buildPennant(chunkSize,color){var low=index-chunkSize;var high=index;index-=chunkSize;var childTree=buildBalancedTree(low+1,high);var namedNode=childList[low];var key=keyFn?keyFn(namedNode):namedNode;attachPennant(new LLRBNode(key,namedNode.node,color,null,childTree));};var attachPennant=function attachPennant(pennant){if(node){node.left=pennant;node=pennant;}else{root=pennant;node=pennant;}};for(var i=0;i<base12.count;++i){var isOne=base12.nextBitIsOne();// The number of nodes taken in each slice is 2^(arr.length - (i + 1))\nvar chunkSize=Math.pow(2,base12.count-(i+1));if(isOne){buildPennant(chunkSize,LLRBNode.BLACK);}else{// current == 2\nbuildPennant(chunkSize,LLRBNode.BLACK);buildPennant(chunkSize,LLRBNode.RED);}}return root;};var base12=new Base12Num(childList.length);var root=buildFrom12Array(base12);return new SortedMap(mapSortFn||cmp,root);};/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var _defaultIndexMap;var fallbackObject={};/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */var IndexMap=/** @class */function(){function IndexMap(indexes_,indexSet_){this.indexes_=indexes_;this.indexSet_=indexSet_;}Object.defineProperty(IndexMap,\"Default\",{/**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */get:function get(){util.assert(fallbackObject&&PRIORITY_INDEX,'ChildrenNode.ts has not been loaded');_defaultIndexMap=_defaultIndexMap||new IndexMap({'.priority':fallbackObject},{'.priority':PRIORITY_INDEX});return _defaultIndexMap;},enumerable:true,configurable:true});/**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */IndexMap.prototype.get=function(indexKey){var sortedMap=util.safeGet(this.indexes_,indexKey);if(!sortedMap)throw new Error('No index defined for '+indexKey);if(sortedMap===fallbackObject){// The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n// regular child map\nreturn null;}else{return sortedMap;}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */IndexMap.prototype.hasIndex=function(indexDefinition){return util.contains(this.indexSet_,indexDefinition.toString());};/**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */IndexMap.prototype.addIndex=function(indexDefinition,existingChildren){util.assert(indexDefinition!==KEY_INDEX,\"KeyIndex always exists and isn't meant to be added to the IndexMap.\");var childList=[];var sawIndexedValue=false;var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){sawIndexedValue=sawIndexedValue||indexDefinition.isDefinedOn(next.node);childList.push(next);next=iter.getNext();}var newIndex;if(sawIndexedValue){newIndex=buildChildSet(childList,indexDefinition.getCompare());}else{newIndex=fallbackObject;}var indexName=indexDefinition.toString();var newIndexSet=util.clone(this.indexSet_);newIndexSet[indexName]=indexDefinition;var newIndexes=util.clone(this.indexes_);newIndexes[indexName]=newIndex;return new IndexMap(newIndexes,newIndexSet);};/**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */IndexMap.prototype.addToIndexes=function(namedNode,existingChildren){var _this=this;var newIndexes=util.map(this.indexes_,function(indexedChildren,indexName){var index=util.safeGet(_this.indexSet_,indexName);util.assert(index,'Missing index implementation for '+indexName);if(indexedChildren===fallbackObject){// Check to see if we need to index everything\nif(index.isDefinedOn(namedNode.node)){// We need to build this index\nvar childList=[];var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){if(next.name!=namedNode.name){childList.push(next);}next=iter.getNext();}childList.push(namedNode);return buildChildSet(childList,index.getCompare());}else{// No change, this remains a fallback\nreturn fallbackObject;}}else{var existingSnap=existingChildren.get(namedNode.name);var newChildren=indexedChildren;if(existingSnap){newChildren=newChildren.remove(new NamedNode(namedNode.name,existingSnap));}return newChildren.insert(namedNode,namedNode.node);}});return new IndexMap(newIndexes,this.indexSet_);};/**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */IndexMap.prototype.removeFromIndexes=function(namedNode,existingChildren){var newIndexes=util.map(this.indexes_,function(indexedChildren){if(indexedChildren===fallbackObject){// This is the fallback. Just return it, nothing to do in this case\nreturn indexedChildren;}else{var existingSnap=existingChildren.get(namedNode.name);if(existingSnap){return indexedChildren.remove(new NamedNode(namedNode.name,existingSnap));}else{// No record of this child\nreturn indexedChildren;}}});return new IndexMap(newIndexes,this.indexSet_);};return IndexMap;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function NAME_ONLY_COMPARATOR(left,right){return nameCompare(left.name,right.name);}function NAME_COMPARATOR(left,right){return nameCompare(left,right);}/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */// TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */var ChildrenNode=/** @class */function(){/**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */function ChildrenNode(children_,priorityNode_,indexMap_){this.children_=children_;this.priorityNode_=priorityNode_;this.indexMap_=indexMap_;this.lazyHash_=null;/**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */if(this.priorityNode_){validatePriorityNode(this.priorityNode_);}if(this.children_.isEmpty()){util.assert(!this.priorityNode_||this.priorityNode_.isEmpty(),'An empty node cannot have a priority');}}Object.defineProperty(ChildrenNode,\"EMPTY_NODE\",{get:function get(){return EMPTY_NODE||(EMPTY_NODE=new ChildrenNode(new SortedMap(NAME_COMPARATOR),null,IndexMap.Default));},enumerable:true,configurable:true});/** @inheritDoc */ChildrenNode.prototype.isLeafNode=function(){return false;};/** @inheritDoc */ChildrenNode.prototype.getPriority=function(){return this.priorityNode_||EMPTY_NODE;};/** @inheritDoc */ChildrenNode.prototype.updatePriority=function(newPriorityNode){if(this.children_.isEmpty()){// Don't allow priorities on empty nodes\nreturn this;}else{return new ChildrenNode(this.children_,newPriorityNode,this.indexMap_);}};/** @inheritDoc */ChildrenNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.getPriority();}else{var child=this.children_.get(childName);return child===null?EMPTY_NODE:child;}};/** @inheritDoc */ChildrenNode.prototype.getChild=function(path){var front=path.getFront();if(front===null)return this;return this.getImmediateChild(front).getChild(path.popFront());};/** @inheritDoc */ChildrenNode.prototype.hasChild=function(childName){return this.children_.get(childName)!==null;};/** @inheritDoc */ChildrenNode.prototype.updateImmediateChild=function(childName,newChildNode){util.assert(newChildNode,'We should always be passing snapshot nodes');if(childName==='.priority'){return this.updatePriority(newChildNode);}else{var namedNode=new NamedNode(childName,newChildNode);var newChildren=void 0,newIndexMap=void 0,newPriority=void 0;if(newChildNode.isEmpty()){newChildren=this.children_.remove(childName);newIndexMap=this.indexMap_.removeFromIndexes(namedNode,this.children_);}else{newChildren=this.children_.insert(childName,newChildNode);newIndexMap=this.indexMap_.addToIndexes(namedNode,this.children_);}newPriority=newChildren.isEmpty()?EMPTY_NODE:this.priorityNode_;return new ChildrenNode(newChildren,newPriority,newIndexMap);}};/** @inheritDoc */ChildrenNode.prototype.updateChild=function(path,newChildNode){var front=path.getFront();if(front===null){return newChildNode;}else{util.assert(path.getFront()!=='.priority'||path.getLength()===1,'.priority must be the last token in a path');var newImmediateChild=this.getImmediateChild(front).updateChild(path.popFront(),newChildNode);return this.updateImmediateChild(front,newImmediateChild);}};/** @inheritDoc */ChildrenNode.prototype.isEmpty=function(){return this.children_.isEmpty();};/** @inheritDoc */ChildrenNode.prototype.numChildren=function(){return this.children_.count();};/** @inheritDoc */ChildrenNode.prototype.val=function(exportFormat){if(this.isEmpty())return null;var obj={};var numKeys=0,maxKey=0,allIntegerKeys=true;this.forEachChild(PRIORITY_INDEX,function(key,childNode){obj[key]=childNode.val(exportFormat);numKeys++;if(allIntegerKeys&&ChildrenNode.INTEGER_REGEXP_.test(key)){maxKey=Math.max(maxKey,Number(key));}else{allIntegerKeys=false;}});if(!exportFormat&&allIntegerKeys&&maxKey<2*numKeys){// convert to array.\nvar array=[];for(var key in obj){array[key]=obj[key];}return array;}else{if(exportFormat&&!this.getPriority().isEmpty()){obj['.priority']=this.getPriority().val();}return obj;}};/** @inheritDoc */ChildrenNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash_1='';if(!this.getPriority().isEmpty())toHash_1+='priority:'+priorityHashText(this.getPriority().val())+':';this.forEachChild(PRIORITY_INDEX,function(key,childNode){var childHash=childNode.hash();if(childHash!=='')toHash_1+=':'+key+':'+childHash;});this.lazyHash_=toHash_1===''?'':sha1(toHash_1);}return this.lazyHash_;};/** @inheritDoc */ChildrenNode.prototype.getPredecessorChildName=function(childName,childNode,index){var idx=this.resolveIndex_(index);if(idx){var predecessor=idx.getPredecessorKey(new NamedNode(childName,childNode));return predecessor?predecessor.name:null;}else{return this.children_.getPredecessorKey(childName);}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */ChildrenNode.prototype.getFirstChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var minKey=idx.minKey();return minKey&&minKey.name;}else{return this.children_.minKey();}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */ChildrenNode.prototype.getFirstChild=function(indexDefinition){var minKey=this.getFirstChildName(indexDefinition);if(minKey){return new NamedNode(minKey,this.children_.get(minKey));}else{return null;}};/**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */ChildrenNode.prototype.getLastChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var maxKey=idx.maxKey();return maxKey&&maxKey.name;}else{return this.children_.maxKey();}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */ChildrenNode.prototype.getLastChild=function(indexDefinition){var maxKey=this.getLastChildName(indexDefinition);if(maxKey){return new NamedNode(maxKey,this.children_.get(maxKey));}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.forEachChild=function(index,action){var idx=this.resolveIndex_(index);if(idx){return idx.inorderTraversal(function(wrappedNode){return action(wrappedNode.name,wrappedNode.node);});}else{return this.children_.inorderTraversal(action);}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */ChildrenNode.prototype.getIterator=function(indexDefinition){return this.getIteratorFrom(indexDefinition.minPost(),indexDefinition);};/**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */ChildrenNode.prototype.getIteratorFrom=function(startPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getIteratorFrom(startPost,function(key){return key;});}else{var iterator=this.children_.getIteratorFrom(startPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,startPost)<0){iterator.getNext();next=iterator.peek();}return iterator;}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */ChildrenNode.prototype.getReverseIterator=function(indexDefinition){return this.getReverseIteratorFrom(indexDefinition.maxPost(),indexDefinition);};/**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */ChildrenNode.prototype.getReverseIteratorFrom=function(endPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getReverseIteratorFrom(endPost,function(key){return key;});}else{var iterator=this.children_.getReverseIteratorFrom(endPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,endPost)>0){iterator.getNext();next=iterator.peek();}return iterator;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.compareTo=function(other){if(this.isEmpty()){if(other.isEmpty()){return 0;}else{return-1;}}else if(other.isLeafNode()||other.isEmpty()){return 1;}else if(other===MAX_NODE$2){return-1;}else{// Must be another node with children.\nreturn 0;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.withIndex=function(indexDefinition){if(indexDefinition===KEY_INDEX||this.indexMap_.hasIndex(indexDefinition)){return this;}else{var newIndexMap=this.indexMap_.addIndex(indexDefinition,this.children_);return new ChildrenNode(this.children_,this.priorityNode_,newIndexMap);}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.isIndexed=function(index){return index===KEY_INDEX||this.indexMap_.hasIndex(index);};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.equals=function(other){if(other===this){return true;}else if(other.isLeafNode()){return false;}else{var otherChildrenNode=other;if(!this.getPriority().equals(otherChildrenNode.getPriority())){return false;}else if(this.children_.count()===otherChildrenNode.children_.count()){var thisIter=this.getIterator(PRIORITY_INDEX);var otherIter=otherChildrenNode.getIterator(PRIORITY_INDEX);var thisCurrent=thisIter.getNext();var otherCurrent=otherIter.getNext();while(thisCurrent&&otherCurrent){if(thisCurrent.name!==otherCurrent.name||!thisCurrent.node.equals(otherCurrent.node)){return false;}thisCurrent=thisIter.getNext();otherCurrent=otherIter.getNext();}return thisCurrent===null&&otherCurrent===null;}else{return false;}}};/**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */ChildrenNode.prototype.resolveIndex_=function(indexDefinition){if(indexDefinition===KEY_INDEX){return null;}else{return this.indexMap_.get(indexDefinition.toString());}};/**\r\n     * @private\r\n     * @type {RegExp}\r\n     */ChildrenNode.INTEGER_REGEXP_=/^(0|[1-9]\\d*)$/;return ChildrenNode;}();/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */var MaxNode=/** @class */function(_super){tslib_1.__extends(MaxNode,_super);function MaxNode(){return _super.call(this,new SortedMap(NAME_COMPARATOR),ChildrenNode.EMPTY_NODE,IndexMap.Default)||this;}MaxNode.prototype.compareTo=function(other){if(other===this){return 0;}else{return 1;}};MaxNode.prototype.equals=function(other){// Not that we every compare it, but MAX_NODE is only ever equal to itself\nreturn other===this;};MaxNode.prototype.getPriority=function(){return this;};MaxNode.prototype.getImmediateChild=function(childName){return ChildrenNode.EMPTY_NODE;};MaxNode.prototype.isEmpty=function(){return false;};return MaxNode;}(ChildrenNode);/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */var MAX_NODE$2=new MaxNode();Object.defineProperties(NamedNode,{MIN:{value:new NamedNode(MIN_NAME,ChildrenNode.EMPTY_NODE)},MAX:{value:new NamedNode(MAX_NAME,MAX_NODE$2)}});/**\r\n * Reference Extensions\r\n */KeyIndex.__EMPTY_NODE=ChildrenNode.EMPTY_NODE;LeafNode.__childrenNodeConstructor=ChildrenNode;setMaxNode(MAX_NODE$2);setMaxNode$1(MAX_NODE$2);/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var USE_HINZE=true;/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */function nodeFromJSON$1(json,priority){if(priority===void 0){priority=null;}if(json===null){return ChildrenNode.EMPTY_NODE;}if(typeof json==='object'&&'.priority'in json){priority=json['.priority'];}util.assert(priority===null||typeof priority==='string'||typeof priority==='number'||typeof priority==='object'&&'.sv'in priority,'Invalid priority type found: '+typeof priority);if(typeof json==='object'&&'.value'in json&&json['.value']!==null){json=json['.value'];}// Valid leaf nodes include non-objects or server-value wrapper objects\nif(typeof json!=='object'||'.sv'in json){var jsonLeaf=json;return new LeafNode(jsonLeaf,nodeFromJSON$1(priority));}if(!(json instanceof Array)&&USE_HINZE){var children_1=[];var childrenHavePriority_1=false;var hinzeJsonObj_1=json;util.forEach(hinzeJsonObj_1,function(key,child){if(typeof key!=='string'||key.substring(0,1)!=='.'){// Ignore metadata nodes\nvar childNode=nodeFromJSON$1(hinzeJsonObj_1[key]);if(!childNode.isEmpty()){childrenHavePriority_1=childrenHavePriority_1||!childNode.getPriority().isEmpty();children_1.push(new NamedNode(key,childNode));}}});if(children_1.length==0){return ChildrenNode.EMPTY_NODE;}var childSet=buildChildSet(children_1,NAME_ONLY_COMPARATOR,function(namedNode){return namedNode.name;},NAME_COMPARATOR);if(childrenHavePriority_1){var sortedChildSet=buildChildSet(children_1,PRIORITY_INDEX.getCompare());return new ChildrenNode(childSet,nodeFromJSON$1(priority),new IndexMap({'.priority':sortedChildSet},{'.priority':PRIORITY_INDEX}));}else{return new ChildrenNode(childSet,nodeFromJSON$1(priority),IndexMap.Default);}}else{var node_1=ChildrenNode.EMPTY_NODE;var jsonObj_1=json;util.forEach(jsonObj_1,function(key,childData){if(util.contains(jsonObj_1,key)){if(key.substring(0,1)!=='.'){// ignore metadata nodes.\nvar childNode=nodeFromJSON$1(childData);if(childNode.isLeafNode()||!childNode.isEmpty())node_1=node_1.updateImmediateChild(key,childNode);}}});return node_1.updatePriority(nodeFromJSON$1(priority));}}setNodeFromJSON(nodeFromJSON$1);/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */var ValueIndex=/** @class */function(_super){tslib_1.__extends(ValueIndex,_super);function ValueIndex(){return _super!==null&&_super.apply(this,arguments)||this;}/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.compare=function(a,b){var indexCmp=a.node.compareTo(b.node);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.isDefinedOn=function(node){return true;};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.equals(newNode);};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.minPost=function(){return NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.maxPost=function(){return NamedNode.MAX;};/**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */ValueIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON$1(indexValue);return new NamedNode(name,valueNode);};/**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */ValueIndex.prototype.toString=function(){return'.value';};return ValueIndex;}(Index);var VALUE_INDEX=new ValueIndex();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */var PathIndex=/** @class */function(_super){tslib_1.__extends(PathIndex,_super);function PathIndex(indexPath_){var _this=_super.call(this)||this;_this.indexPath_=indexPath_;util.assert(!indexPath_.isEmpty()&&indexPath_.getFront()!=='.priority',\"Can't create PathIndex with empty path or .priority key\");return _this;}/**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */PathIndex.prototype.extractChild=function(snap){return snap.getChild(this.indexPath_);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.isDefinedOn=function(node){return!node.getChild(this.indexPath_).isEmpty();};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.compare=function(a,b){var aChild=this.extractChild(a.node);var bChild=this.extractChild(b.node);var indexCmp=aChild.compareTo(bChild);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON$1(indexValue);var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,valueNode);return new NamedNode(name,node);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.maxPost=function(){var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,MAX_NODE$2);return new NamedNode(MAX_NAME,node);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.toString=function(){return this.indexPath_.slice().join('/');};return PathIndex;}(Index);/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */var DataSnapshot=/** @class */function(){/**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */function DataSnapshot(node_,ref_,index_){this.node_=node_;this.ref_=ref_;this.index_=index_;}/**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */DataSnapshot.prototype.val=function(){util.validateArgCount('DataSnapshot.val',0,0,arguments.length);return this.node_.val();};/**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */DataSnapshot.prototype.exportVal=function(){util.validateArgCount('DataSnapshot.exportVal',0,0,arguments.length);return this.node_.val(true);};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users\nDataSnapshot.prototype.toJSON=function(){// Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\nutil.validateArgCount('DataSnapshot.toJSON',0,1,arguments.length);return this.exportVal();};/**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */DataSnapshot.prototype.exists=function(){util.validateArgCount('DataSnapshot.exists',0,0,arguments.length);return!this.node_.isEmpty();};/**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */DataSnapshot.prototype.child=function(childPathString){util.validateArgCount('DataSnapshot.child',0,1,arguments.length);// Ensure the childPath is a string (can be a number)\nchildPathString=String(childPathString);validatePathString('DataSnapshot.child',1,childPathString,false);var childPath=new Path(childPathString);var childRef=this.ref_.child(childPath);return new DataSnapshot(this.node_.getChild(childPath),childRef,PRIORITY_INDEX);};/**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */DataSnapshot.prototype.hasChild=function(childPathString){util.validateArgCount('DataSnapshot.hasChild',1,1,arguments.length);validatePathString('DataSnapshot.hasChild',1,childPathString,false);var childPath=new Path(childPathString);return!this.node_.getChild(childPath).isEmpty();};/**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */DataSnapshot.prototype.getPriority=function(){util.validateArgCount('DataSnapshot.getPriority',0,0,arguments.length);// typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\nreturn this.node_.getPriority().val();};/**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */DataSnapshot.prototype.forEach=function(action){var _this=this;util.validateArgCount('DataSnapshot.forEach',1,1,arguments.length);util.validateCallback('DataSnapshot.forEach',1,action,false);if(this.node_.isLeafNode())return false;var childrenNode=this.node_;// Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\nreturn!!childrenNode.forEachChild(this.index_,function(key,node){return action(new DataSnapshot(node,_this.ref_.child(key),PRIORITY_INDEX));});};/**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */DataSnapshot.prototype.hasChildren=function(){util.validateArgCount('DataSnapshot.hasChildren',0,0,arguments.length);if(this.node_.isLeafNode())return false;else return!this.node_.isEmpty();};Object.defineProperty(DataSnapshot.prototype,\"key\",{get:function get(){return this.ref_.getKey();},enumerable:true,configurable:true});/**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */DataSnapshot.prototype.numChildren=function(){util.validateArgCount('DataSnapshot.numChildren',0,0,arguments.length);return this.node_.numChildren();};/**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */DataSnapshot.prototype.getRef=function(){util.validateArgCount('DataSnapshot.ref',0,0,arguments.length);return this.ref_;};Object.defineProperty(DataSnapshot.prototype,\"ref\",{get:function get(){return this.getRef();},enumerable:true,configurable:true});return DataSnapshot;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */var DataEvent=/** @class */function(){/**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */function DataEvent(eventType,eventRegistration,snapshot,prevName){this.eventType=eventType;this.eventRegistration=eventRegistration;this.snapshot=snapshot;this.prevName=prevName;}/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getPath=function(){var ref=this.snapshot.getRef();if(this.eventType==='value'){return ref.path;}else{return ref.getParent().path;}};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getEventType=function(){return this.eventType;};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.toString=function(){return this.getPath().toString()+':'+this.eventType+':'+util.stringify(this.snapshot.exportVal());};return DataEvent;}();var CancelEvent=/** @class */function(){/**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */function CancelEvent(eventRegistration,error,path){this.eventRegistration=eventRegistration;this.error=error;this.path=path;}/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getPath=function(){return this.path;};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getEventType=function(){return'cancel';};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.toString=function(){return this.path.toString()+':cancel';};return CancelEvent;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Represents registration for 'value' events.\r\n */var ValueEventRegistration=/** @class */function(){/**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */function ValueEventRegistration(callback_,cancelCallback_,context_){this.callback_=callback_;this.cancelCallback_=cancelCallback_;this.context_=context_;}/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.respondsTo=function(eventType){return eventType==='value';};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.createEvent=function(change,query){var index=query.getQueryParams().getIndex();return new DataEvent('value',this,new DataSnapshot(change.snapshotNode,query.getRef(),index));};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.getEventRunner=function(eventData){var ctx=this.context_;if(eventData.getEventType()==='cancel'){util.assert(this.cancelCallback_,'Raising a cancel event on a listener with no cancel callback');var cancelCB_1=this.cancelCallback_;return function(){// We know that error exists, we checked above that this is a cancel event\ncancelCB_1.call(ctx,eventData.error);};}else{var cb_1=this.callback_;return function(){cb_1.call(ctx,eventData.snapshot);};}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.createCancelEvent=function(error,path){if(this.cancelCallback_){return new CancelEvent(this,error,path);}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.matches=function(other){if(!(other instanceof ValueEventRegistration)){return false;}else if(!other.callback_||!this.callback_){// If no callback specified, we consider it to match any callback.\nreturn true;}else{return other.callback_===this.callback_&&other.context_===this.context_;}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.hasAnyCallback=function(){return this.callback_!==null;};return ValueEventRegistration;}();/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */var ChildEventRegistration=/** @class */function(){/**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */function ChildEventRegistration(callbacks_,cancelCallback_,context_){this.callbacks_=callbacks_;this.cancelCallback_=cancelCallback_;this.context_=context_;}/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.respondsTo=function(eventType){var eventToCheck=eventType==='children_added'?'child_added':eventType;eventToCheck=eventToCheck==='children_removed'?'child_removed':eventToCheck;return util.contains(this.callbacks_,eventToCheck);};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.createCancelEvent=function(error,path){if(this.cancelCallback_){return new CancelEvent(this,error,path);}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.createEvent=function(change,query){util.assert(change.childName!=null,'Child events should have a childName.');var ref=query.getRef().child(/** @type {!string} */change.childName);var index=query.getQueryParams().getIndex();return new DataEvent(change.type,this,new DataSnapshot(change.snapshotNode,ref,index),change.prevName);};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.getEventRunner=function(eventData){var ctx=this.context_;if(eventData.getEventType()==='cancel'){util.assert(this.cancelCallback_,'Raising a cancel event on a listener with no cancel callback');var cancelCB_2=this.cancelCallback_;return function(){// We know that error exists, we checked above that this is a cancel event\ncancelCB_2.call(ctx,eventData.error);};}else{var cb_2=this.callbacks_[eventData.eventType];return function(){cb_2.call(ctx,eventData.snapshot,eventData.prevName);};}};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.matches=function(other){if(other instanceof ChildEventRegistration){if(!this.callbacks_||!other.callbacks_){return true;}else if(this.context_===other.context_){var otherCount=util.getCount(other.callbacks_);var thisCount=util.getCount(this.callbacks_);if(otherCount===thisCount){// If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n//  If event types don't match, not a match\n// If count is not 1, exact match across all\nif(otherCount===1){var otherKey/** @type {!string} */=util.getAnyKey(other.callbacks_);var thisKey/** @type {!string} */=util.getAnyKey(this.callbacks_);return thisKey===otherKey&&(!other.callbacks_[otherKey]||!this.callbacks_[thisKey]||other.callbacks_[otherKey]===this.callbacks_[thisKey]);}else{// Exact match on each key.\nreturn util.every(this.callbacks_,function(eventType,cb){return other.callbacks_[eventType]===cb;});}}}}return false;};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.hasAnyCallback=function(){return this.callbacks_!==null;};return ChildEventRegistration;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __referenceConstructor;/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */var Query=/** @class */function(){function Query(repo,path,queryParams_,orderByCalled_){this.repo=repo;this.path=path;this.queryParams_=queryParams_;this.orderByCalled_=orderByCalled_;}Object.defineProperty(Query,\"__referenceConstructor\",{get:function get(){util.assert(__referenceConstructor,'Reference.ts has not been loaded');return __referenceConstructor;},set:function set(val){__referenceConstructor=val;},enumerable:true,configurable:true});/**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */Query.validateQueryEndpoints_=function(params){var startNode=null;var endNode=null;if(params.hasStart()){startNode=params.getIndexStartValue();}if(params.hasEnd()){endNode=params.getIndexEndValue();}if(params.getIndex()===KEY_INDEX){var tooManyArgsError='Query: When ordering by key, you may only pass one argument to '+'startAt(), endAt(), or equalTo().';var wrongArgTypeError='Query: When ordering by key, the argument passed to startAt(), endAt(),'+'or equalTo() must be a string.';if(params.hasStart()){var startName=params.getIndexStartName();if(startName!=MIN_NAME){throw new Error(tooManyArgsError);}else if(typeof startNode!=='string'){throw new Error(wrongArgTypeError);}}if(params.hasEnd()){var endName=params.getIndexEndName();if(endName!=MAX_NAME){throw new Error(tooManyArgsError);}else if(typeof endNode!=='string'){throw new Error(wrongArgTypeError);}}}else if(params.getIndex()===PRIORITY_INDEX){if(startNode!=null&&!isValidPriority(startNode)||endNode!=null&&!isValidPriority(endNode)){throw new Error('Query: When ordering by priority, the first argument passed to startAt(), '+'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');}}else{util.assert(params.getIndex()instanceof PathIndex||params.getIndex()===VALUE_INDEX,'unknown index type.');if(startNode!=null&&typeof startNode==='object'||endNode!=null&&typeof endNode==='object'){throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be '+'an object.');}}};/**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */Query.validateLimit_=function(params){if(params.hasStart()&&params.hasEnd()&&params.hasLimit()&&!params.hasAnchoredLimit()){throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");}};/**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */Query.prototype.validateNoPreviousOrderByCall_=function(fnName){if(this.orderByCalled_===true){throw new Error(fnName+\": You can't combine multiple orderBy calls.\");}};/**\r\n     * @return {!QueryParams}\r\n     */Query.prototype.getQueryParams=function(){return this.queryParams_;};/**\r\n     * @return {!Reference}\r\n     */Query.prototype.getRef=function(){util.validateArgCount('Query.ref',0,0,arguments.length);// This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n// However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n// method gets called.\nreturn new Query.__referenceConstructor(this.repo,this.path);};/**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */Query.prototype.on=function(eventType,callback,cancelCallbackOrContext,context){util.validateArgCount('Query.on',2,4,arguments.length);validateEventType('Query.on',1,eventType,false);util.validateCallback('Query.on',2,callback,false);var ret=Query.getCancelAndContextArgs_('Query.on',cancelCallbackOrContext,context);if(eventType==='value'){this.onValueEvent(callback,ret.cancel,ret.context);}else{var callbacks={};callbacks[eventType]=callback;this.onChildEvent(callbacks,ret.cancel,ret.context);}return callback;};/**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */Query.prototype.onValueEvent=function(callback,cancelCallback,context){var container=new ValueEventRegistration(callback,cancelCallback||null,context||null);this.repo.addEventCallbackForQuery(this,container);};/**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */Query.prototype.onChildEvent=function(callbacks,cancelCallback,context){var container=new ChildEventRegistration(callbacks,cancelCallback,context);this.repo.addEventCallbackForQuery(this,container);};/**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */Query.prototype.off=function(eventType,callback,context){util.validateArgCount('Query.off',0,3,arguments.length);validateEventType('Query.off',1,eventType,true);util.validateCallback('Query.off',2,callback,true);util.validateContextObject('Query.off',3,context,true);var container=null;var callbacks=null;if(eventType==='value'){var valueCallback=callback||null;container=new ValueEventRegistration(valueCallback,null,context||null);}else if(eventType){if(callback){callbacks={};callbacks[eventType]=callback;}container=new ChildEventRegistration(callbacks,null,context||null);}this.repo.removeEventCallbackForQuery(this,container);};/**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */Query.prototype.once=function(eventType,userCallback,cancelOrContext,context){var _this=this;util.validateArgCount('Query.once',1,4,arguments.length);validateEventType('Query.once',1,eventType,false);util.validateCallback('Query.once',2,userCallback,true);var ret=Query.getCancelAndContextArgs_('Query.once',cancelOrContext,context);// TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n// TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n// because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n// against the Promise specification.\nvar firstCall=true;var deferred=new util.Deferred();// A dummy error handler in case a user wasn't expecting promises\ndeferred.promise.catch(function(){});var onceCallback=function onceCallback(snapshot){// NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n// triggers multiple events (e.g. child_added or child_changed).\nif(firstCall){firstCall=false;_this.off(eventType,onceCallback);if(userCallback){userCallback.bind(ret.context)(snapshot);}deferred.resolve(snapshot);}};this.on(eventType,onceCallback,/*cancel=*/function(err){_this.off(eventType,onceCallback);if(ret.cancel)ret.cancel.bind(ret.context)(err);deferred.reject(err);});return deferred.promise;};/**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */Query.prototype.limitToFirst=function(limit){util.validateArgCount('Query.limitToFirst',1,1,arguments.length);if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('Query.limitToFirst: First argument must be a positive integer.');}if(this.queryParams_.hasLimit()){throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, '+'limitToFirst, or limitToLast).');}return new Query(this.repo,this.path,this.queryParams_.limitToFirst(limit),this.orderByCalled_);};/**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */Query.prototype.limitToLast=function(limit){util.validateArgCount('Query.limitToLast',1,1,arguments.length);if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('Query.limitToLast: First argument must be a positive integer.');}if(this.queryParams_.hasLimit()){throw new Error('Query.limitToLast: Limit was already set (by another call to limit, '+'limitToFirst, or limitToLast).');}return new Query(this.repo,this.path,this.queryParams_.limitToLast(limit),this.orderByCalled_);};/**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */Query.prototype.orderByChild=function(path){util.validateArgCount('Query.orderByChild',1,1,arguments.length);if(path==='$key'){throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');}else if(path==='$priority'){throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');}else if(path==='$value'){throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');}validatePathString('Query.orderByChild',1,path,false);this.validateNoPreviousOrderByCall_('Query.orderByChild');var parsedPath=new Path(path);if(parsedPath.isEmpty()){throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');}var index=new PathIndex(parsedPath);var newParams=this.queryParams_.orderBy(index);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */Query.prototype.orderByKey=function(){util.validateArgCount('Query.orderByKey',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByKey');var newParams=this.queryParams_.orderBy(KEY_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */Query.prototype.orderByPriority=function(){util.validateArgCount('Query.orderByPriority',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByPriority');var newParams=this.queryParams_.orderBy(PRIORITY_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */Query.prototype.orderByValue=function(){util.validateArgCount('Query.orderByValue',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByValue');var newParams=this.queryParams_.orderBy(VALUE_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */Query.prototype.startAt=function(value,name){if(value===void 0){value=null;}util.validateArgCount('Query.startAt',0,2,arguments.length);validateFirebaseDataArg('Query.startAt',1,value,this.path,true);validateKey('Query.startAt',2,name,true);var newParams=this.queryParams_.startAt(value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasStart()){throw new Error('Query.startAt: Starting point was already set (by another call to startAt '+'or equalTo).');}// Calling with no params tells us to start at the beginning.\nif(value===undefined){value=null;name=null;}return new Query(this.repo,this.path,newParams,this.orderByCalled_);};/**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */Query.prototype.endAt=function(value,name){if(value===void 0){value=null;}util.validateArgCount('Query.endAt',0,2,arguments.length);validateFirebaseDataArg('Query.endAt',1,value,this.path,true);validateKey('Query.endAt',2,name,true);var newParams=this.queryParams_.endAt(value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasEnd()){throw new Error('Query.endAt: Ending point was already set (by another call to endAt or '+'equalTo).');}return new Query(this.repo,this.path,newParams,this.orderByCalled_);};/**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */Query.prototype.equalTo=function(value,name){util.validateArgCount('Query.equalTo',1,2,arguments.length);validateFirebaseDataArg('Query.equalTo',1,value,this.path,false);validateKey('Query.equalTo',2,name,true);if(this.queryParams_.hasStart()){throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or '+'equalTo).');}if(this.queryParams_.hasEnd()){throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or '+'equalTo).');}return this.startAt(value,name).endAt(value,name);};/**\r\n     * @return {!string} URL for this location.\r\n     */Query.prototype.toString=function(){util.validateArgCount('Query.toString',0,0,arguments.length);return this.repo.toString()+this.path.toUrlEncodedString();};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users.\nQuery.prototype.toJSON=function(){// An optional spacer argument is unnecessary for a string.\nutil.validateArgCount('Query.toJSON',0,1,arguments.length);return this.toString();};/**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */Query.prototype.queryObject=function(){return this.queryParams_.getQueryObject();};/**\r\n     * @return {!string}\r\n     */Query.prototype.queryIdentifier=function(){var obj=this.queryObject();var id=ObjectToUniqueKey(obj);return id==='{}'?'default':id;};/**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */Query.prototype.isEqual=function(other){util.validateArgCount('Query.isEqual',1,1,arguments.length);if(!(other instanceof Query)){var error$$1='Query.isEqual failed: First argument must be an instance of firebase.database.Query.';throw new Error(error$$1);}var sameRepo=this.repo===other.repo;var samePath=this.path.equals(other.path);var sameQueryIdentifier=this.queryIdentifier()===other.queryIdentifier();return sameRepo&&samePath&&sameQueryIdentifier;};/**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */Query.getCancelAndContextArgs_=function(fnName,cancelOrContext,context){var ret={cancel:null,context:null};if(cancelOrContext&&context){ret.cancel=cancelOrContext;util.validateCallback(fnName,3,ret.cancel,true);ret.context=context;util.validateContextObject(fnName,4,ret.context,true);}else if(cancelOrContext){// we have either a cancel callback or a context.\nif(typeof cancelOrContext==='object'&&cancelOrContext!==null){// it's a context!\nret.context=cancelOrContext;}else if(typeof cancelOrContext==='function'){ret.cancel=cancelOrContext;}else{throw new Error(util.errorPrefix(fnName,3,true)+' must either be a cancel callback or a context object.');}}return ret;};Object.defineProperty(Query.prototype,\"ref\",{get:function get(){return this.getRef();},enumerable:true,configurable:true});return Query;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */var CountedSet=/** @class */function(){function CountedSet(){this.set={};}/**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */CountedSet.prototype.add=function(item,val){this.set[item]=val!==null?val:true;};/**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */CountedSet.prototype.contains=function(key){return util.contains(this.set,key);};/**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */CountedSet.prototype.get=function(item){return this.contains(item)?this.set[item]:undefined;};/**\r\n     * @param {!K} item\r\n     */CountedSet.prototype.remove=function(item){delete this.set[item];};/**\r\n     * Deletes everything in the set\r\n     */CountedSet.prototype.clear=function(){this.set={};};/**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */CountedSet.prototype.isEmpty=function(){return util.isEmpty(this.set);};/**\r\n     * @return {number} The number of items in the set\r\n     */CountedSet.prototype.count=function(){return util.getCount(this.set);};/**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */CountedSet.prototype.each=function(fn){util.forEach(this.set,function(k,v){return fn(k,v);});};/**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */CountedSet.prototype.keys=function(){var keys=[];util.forEach(this.set,function(k){keys.push(k);});return keys;};return CountedSet;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */var SparseSnapshotTree=/** @class */function(){function SparseSnapshotTree(){/**\r\n         * @private\r\n         * @type {Node}\r\n         */this.value_=null;/**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */this.children_=null;}/**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */SparseSnapshotTree.prototype.find=function(path){if(this.value_!=null){return this.value_.getChild(path);}else if(!path.isEmpty()&&this.children_!=null){var childKey=path.getFront();path=path.popFront();if(this.children_.contains(childKey)){var childTree=this.children_.get(childKey);return childTree.find(path);}else{return null;}}else{return null;}};/**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */SparseSnapshotTree.prototype.remember=function(path,data){if(path.isEmpty()){this.value_=data;this.children_=null;}else if(this.value_!==null){this.value_=this.value_.updateChild(path,data);}else{if(this.children_==null){this.children_=new CountedSet();}var childKey=path.getFront();if(!this.children_.contains(childKey)){this.children_.add(childKey,new SparseSnapshotTree());}var child=this.children_.get(childKey);path=path.popFront();child.remember(path,data);}};/**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */SparseSnapshotTree.prototype.forget=function(path){if(path.isEmpty()){this.value_=null;this.children_=null;return true;}else{if(this.value_!==null){if(this.value_.isLeafNode()){// We're trying to forget a node that doesn't exist\nreturn false;}else{var value=this.value_;this.value_=null;var self_1=this;value.forEachChild(PRIORITY_INDEX,function(key,tree){self_1.remember(new Path(key),tree);});return this.forget(path);}}else if(this.children_!==null){var childKey=path.getFront();path=path.popFront();if(this.children_.contains(childKey)){var safeToRemove=this.children_.get(childKey).forget(path);if(safeToRemove){this.children_.remove(childKey);}}if(this.children_.isEmpty()){this.children_=null;return true;}else{return false;}}else{return true;}}};/**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */SparseSnapshotTree.prototype.forEachTree=function(prefixPath,func){if(this.value_!==null){func(prefixPath,this.value_);}else{this.forEachChild(function(key,tree){var path=new Path(prefixPath.toString()+'/'+key);tree.forEachTree(path,func);});}};/**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */SparseSnapshotTree.prototype.forEachChild=function(func){if(this.children_!==null){this.children_.each(function(key,tree){func(key,tree);});}};return SparseSnapshotTree;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */var generateWithValues=function generateWithValues(values){values=values||{};values['timestamp']=values['timestamp']||new Date().getTime();return values;};/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */var resolveDeferredValue=function resolveDeferredValue(value,serverValues){if(!value||typeof value!=='object'){return value;}else{util.assert('.sv'in value,'Unexpected leaf node or priority contents');return serverValues[value['.sv']];}};/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */var resolveDeferredValueTree=function resolveDeferredValueTree(tree,serverValues){var resolvedTree=new SparseSnapshotTree();tree.forEachTree(new Path(''),function(path,node){resolvedTree.remember(path,resolveDeferredValueSnapshot(node,serverValues));});return resolvedTree;};/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */var resolveDeferredValueSnapshot=function resolveDeferredValueSnapshot(node,serverValues){var rawPri=node.getPriority().val();var priority=resolveDeferredValue(rawPri,serverValues);var newNode;if(node.isLeafNode()){var leafNode=node;var value=resolveDeferredValue(leafNode.getValue(),serverValues);if(value!==leafNode.getValue()||priority!==leafNode.getPriority().val()){return new LeafNode(value,nodeFromJSON$1(priority));}else{return node;}}else{var childrenNode=node;newNode=childrenNode;if(priority!==childrenNode.getPriority().val()){newNode=newNode.updatePriority(new LeafNode(priority));}childrenNode.forEachChild(PRIORITY_INDEX,function(childName,childNode){var newChildNode=resolveDeferredValueSnapshot(childNode,serverValues);if(newChildNode!==childNode){newNode=newNode.updateImmediateChild(childName,newChildNode);}});return newNode;}};/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n *\r\n * @enum\r\n */var OperationType;(function(OperationType){OperationType[OperationType[\"OVERWRITE\"]=0]=\"OVERWRITE\";OperationType[OperationType[\"MERGE\"]=1]=\"MERGE\";OperationType[OperationType[\"ACK_USER_WRITE\"]=2]=\"ACK_USER_WRITE\";OperationType[OperationType[\"LISTEN_COMPLETE\"]=3]=\"LISTEN_COMPLETE\";})(OperationType||(OperationType={}));/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */var OperationSource=/** @class */function(){function OperationSource(fromUser,fromServer,queryId,tagged){this.fromUser=fromUser;this.fromServer=fromServer;this.queryId=queryId;this.tagged=tagged;util.assert(!tagged||fromServer,'Tagged queries must be from server.');}/**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */OperationSource.User=new OperationSource(/*fromUser=*/true,false,null,/*tagged=*/false);/**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */OperationSource.Server=new OperationSource(false,/*fromServer=*/true,null,/*tagged=*/false);/**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */OperationSource.forServerTaggedQuery=function(queryId){return new OperationSource(false,/*fromServer=*/true,queryId,/*tagged=*/true);};return OperationSource;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var AckUserWrite=/** @class */function(){/**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */function AckUserWrite(/**@inheritDoc */path,/**@inheritDoc */affectedTree,/**@inheritDoc */revert){this.path=path;this.affectedTree=affectedTree;this.revert=revert;/** @inheritDoc */this.type=OperationType.ACK_USER_WRITE;/** @inheritDoc */this.source=OperationSource.User;}/**\r\n     * @inheritDoc\r\n     */AckUserWrite.prototype.operationForChild=function(childName){if(!this.path.isEmpty()){util.assert(this.path.getFront()===childName,'operationForChild called for unrelated child.');return new AckUserWrite(this.path.popFront(),this.affectedTree,this.revert);}else if(this.affectedTree.value!=null){util.assert(this.affectedTree.children.isEmpty(),'affectedTree should not have overlapping affected paths.');// All child locations are affected as well; just return same operation.\nreturn this;}else{var childTree=this.affectedTree.subtree(new Path(childName));return new AckUserWrite(Path.Empty,childTree,this.revert);}};return AckUserWrite;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var emptyChildrenSingleton;/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */var EmptyChildren=function EmptyChildren(){if(!emptyChildrenSingleton){emptyChildrenSingleton=new SortedMap(stringCompare);}return emptyChildrenSingleton;};/**\r\n * A tree with immutable elements.\r\n */var ImmutableTree=/** @class */function(){/**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */function ImmutableTree(value,children){if(children===void 0){children=EmptyChildren();}this.value=value;this.children=children;}/**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */ImmutableTree.fromObject=function(obj){var tree=ImmutableTree.Empty;util.forEach(obj,function(childPath,childSnap){tree=tree.set(new Path(childPath),childSnap);});return tree;};/**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */ImmutableTree.prototype.isEmpty=function(){return this.value===null&&this.children.isEmpty();};/**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */ImmutableTree.prototype.findRootMostMatchingPathAndValue=function(relativePath,predicate){if(this.value!=null&&predicate(this.value)){return{path:Path.Empty,value:this.value};}else{if(relativePath.isEmpty()){return null;}else{var front=relativePath.getFront();var child=this.children.get(front);if(child!==null){var childExistingPathAndValue=child.findRootMostMatchingPathAndValue(relativePath.popFront(),predicate);if(childExistingPathAndValue!=null){var fullPath=new Path(front).child(childExistingPathAndValue.path);return{path:fullPath,value:childExistingPathAndValue.value};}else{return null;}}else{return null;}}}};/**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */ImmutableTree.prototype.findRootMostValueAndPath=function(relativePath){return this.findRootMostMatchingPathAndValue(relativePath,function(){return true;});};/**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */ImmutableTree.prototype.subtree=function(relativePath){if(relativePath.isEmpty()){return this;}else{var front=relativePath.getFront();var childTree=this.children.get(front);if(childTree!==null){return childTree.subtree(relativePath.popFront());}else{return ImmutableTree.Empty;}}};/**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */ImmutableTree.prototype.set=function(relativePath,toSet){if(relativePath.isEmpty()){return new ImmutableTree(toSet,this.children);}else{var front=relativePath.getFront();var child=this.children.get(front)||ImmutableTree.Empty;var newChild=child.set(relativePath.popFront(),toSet);var newChildren=this.children.insert(front,newChild);return new ImmutableTree(this.value,newChildren);}};/**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */ImmutableTree.prototype.remove=function(relativePath){if(relativePath.isEmpty()){if(this.children.isEmpty()){return ImmutableTree.Empty;}else{return new ImmutableTree(null,this.children);}}else{var front=relativePath.getFront();var child=this.children.get(front);if(child){var newChild=child.remove(relativePath.popFront());var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}if(this.value===null&&newChildren.isEmpty()){return ImmutableTree.Empty;}else{return new ImmutableTree(this.value,newChildren);}}else{return this;}}};/**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */ImmutableTree.prototype.get=function(relativePath){if(relativePath.isEmpty()){return this.value;}else{var front=relativePath.getFront();var child=this.children.get(front);if(child){return child.get(relativePath.popFront());}else{return null;}}};/**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */ImmutableTree.prototype.setTree=function(relativePath,newTree){if(relativePath.isEmpty()){return newTree;}else{var front=relativePath.getFront();var child=this.children.get(front)||ImmutableTree.Empty;var newChild=child.setTree(relativePath.popFront(),newTree);var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}return new ImmutableTree(this.value,newChildren);}};/**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */ImmutableTree.prototype.fold=function(fn){return this.fold_(Path.Empty,fn);};/**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */ImmutableTree.prototype.fold_=function(pathSoFar,fn){var accum={};this.children.inorderTraversal(function(childKey,childTree){accum[childKey]=childTree.fold_(pathSoFar.child(childKey),fn);});return fn(pathSoFar,this.value,accum);};/**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */ImmutableTree.prototype.findOnPath=function(path,f){return this.findOnPath_(path,Path.Empty,f);};ImmutableTree.prototype.findOnPath_=function(pathToFollow,pathSoFar,f){var result=this.value?f(pathSoFar,this.value):false;if(result){return result;}else{if(pathToFollow.isEmpty()){return null;}else{var front=pathToFollow.getFront();var nextChild=this.children.get(front);if(nextChild){return nextChild.findOnPath_(pathToFollow.popFront(),pathSoFar.child(front),f);}else{return null;}}}};/**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */ImmutableTree.prototype.foreachOnPath=function(path,f){return this.foreachOnPath_(path,Path.Empty,f);};ImmutableTree.prototype.foreachOnPath_=function(pathToFollow,currentRelativePath,f){if(pathToFollow.isEmpty()){return this;}else{if(this.value){f(currentRelativePath,this.value);}var front=pathToFollow.getFront();var nextChild=this.children.get(front);if(nextChild){return nextChild.foreachOnPath_(pathToFollow.popFront(),currentRelativePath.child(front),f);}else{return ImmutableTree.Empty;}}};/**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */ImmutableTree.prototype.foreach=function(f){this.foreach_(Path.Empty,f);};ImmutableTree.prototype.foreach_=function(currentRelativePath,f){this.children.inorderTraversal(function(childName,childTree){childTree.foreach_(currentRelativePath.child(childName),f);});if(this.value){f(currentRelativePath,this.value);}};/**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */ImmutableTree.prototype.foreachChild=function(f){this.children.inorderTraversal(function(childName,childTree){if(childTree.value){f(childName,childTree.value);}});};ImmutableTree.Empty=new ImmutableTree(null);return ImmutableTree;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */var ListenComplete=/** @class */function(){function ListenComplete(source,path){this.source=source;this.path=path;/** @inheritDoc */this.type=OperationType.LISTEN_COMPLETE;}ListenComplete.prototype.operationForChild=function(childName){if(this.path.isEmpty()){return new ListenComplete(this.source,Path.Empty);}else{return new ListenComplete(this.source,this.path.popFront());}};return ListenComplete;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */var Overwrite=/** @class */function(){function Overwrite(source,path,snap){this.source=source;this.path=path;this.snap=snap;/** @inheritDoc */this.type=OperationType.OVERWRITE;}Overwrite.prototype.operationForChild=function(childName){if(this.path.isEmpty()){return new Overwrite(this.source,Path.Empty,this.snap.getImmediateChild(childName));}else{return new Overwrite(this.source,this.path.popFront(),this.snap);}};return Overwrite;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */var Merge=/** @class */function(){function Merge(/**@inheritDoc */source,/**@inheritDoc */path,/**@inheritDoc */children){this.source=source;this.path=path;this.children=children;/** @inheritDoc */this.type=OperationType.MERGE;}/**\r\n     * @inheritDoc\r\n     */Merge.prototype.operationForChild=function(childName){if(this.path.isEmpty()){var childTree=this.children.subtree(new Path(childName));if(childTree.isEmpty()){// This child is unaffected\nreturn null;}else if(childTree.value){// We have a snapshot for the child in question.  This becomes an overwrite of the child.\nreturn new Overwrite(this.source,Path.Empty,childTree.value);}else{// This is a merge at a deeper level\nreturn new Merge(this.source,Path.Empty,childTree);}}else{util.assert(this.path.getFront()===childName,\"Can't get a merge for a child not on the path of the operation\");return new Merge(this.source,this.path.popFront(),this.children);}};/**\r\n     * @inheritDoc\r\n     */Merge.prototype.toString=function(){return'Operation('+this.path+': '+this.source.toString()+' merge: '+this.children.toString()+')';};return Merge;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */var CacheNode=/** @class */function(){/**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */function CacheNode(node_,fullyInitialized_,filtered_){this.node_=node_;this.fullyInitialized_=fullyInitialized_;this.filtered_=filtered_;}/**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */CacheNode.prototype.isFullyInitialized=function(){return this.fullyInitialized_;};/**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */CacheNode.prototype.isFiltered=function(){return this.filtered_;};/**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */CacheNode.prototype.isCompleteForPath=function(path){if(path.isEmpty()){return this.isFullyInitialized()&&!this.filtered_;}var childKey=path.getFront();return this.isCompleteForChild(childKey);};/**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */CacheNode.prototype.isCompleteForChild=function(key){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(key);};/**\r\n     * @return {!Node}\r\n     */CacheNode.prototype.getNode=function(){return this.node_;};return CacheNode;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */var ViewCache=/** @class */function(){/**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */function ViewCache(eventCache_,serverCache_){this.eventCache_=eventCache_;this.serverCache_=serverCache_;}/**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */ViewCache.prototype.updateEventSnap=function(eventSnap,complete,filtered){return new ViewCache(new CacheNode(eventSnap,complete,filtered),this.serverCache_);};/**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */ViewCache.prototype.updateServerSnap=function(serverSnap,complete,filtered){return new ViewCache(this.eventCache_,new CacheNode(serverSnap,complete,filtered));};/**\r\n     * @return {!CacheNode}\r\n     */ViewCache.prototype.getEventCache=function(){return this.eventCache_;};/**\r\n     * @return {?Node}\r\n     */ViewCache.prototype.getCompleteEventSnap=function(){return this.eventCache_.isFullyInitialized()?this.eventCache_.getNode():null;};/**\r\n     * @return {!CacheNode}\r\n     */ViewCache.prototype.getServerCache=function(){return this.serverCache_;};/**\r\n     * @return {?Node}\r\n     */ViewCache.prototype.getCompleteServerSnap=function(){return this.serverCache_.isFullyInitialized()?this.serverCache_.getNode():null;};/**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */ViewCache.Empty=new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,/*fullyInitialized=*/false,/*filtered=*/false),new CacheNode(ChildrenNode.EMPTY_NODE,/*fullyInitialized=*/false,/*filtered=*/false));return ViewCache;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */var Change=/** @class */function(){function Change(type,snapshotNode,childName,oldSnap,prevName){this.type=type;this.snapshotNode=snapshotNode;this.childName=childName;this.oldSnap=oldSnap;this.prevName=prevName;}/**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */Change.valueChange=function(snapshot){return new Change(Change.VALUE,snapshot);};/**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */Change.childAddedChange=function(childKey,snapshot){return new Change(Change.CHILD_ADDED,snapshot,childKey);};/**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */Change.childRemovedChange=function(childKey,snapshot){return new Change(Change.CHILD_REMOVED,snapshot,childKey);};/**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */Change.childChangedChange=function(childKey,newSnapshot,oldSnapshot){return new Change(Change.CHILD_CHANGED,newSnapshot,childKey,oldSnapshot);};/**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */Change.childMovedChange=function(childKey,snapshot){return new Change(Change.CHILD_MOVED,snapshot,childKey);};//event types\n/** Event type for a child added */Change.CHILD_ADDED='child_added';/** Event type for a child removed */Change.CHILD_REMOVED='child_removed';/** Event type for a child changed */Change.CHILD_CHANGED='child_changed';/** Event type for a child moved */Change.CHILD_MOVED='child_moved';/** Event type for a value change */Change.VALUE='value';return Change;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */var IndexedFilter=/** @class */function(){function IndexedFilter(index_){this.index_=index_;}IndexedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){util.assert(snap.isIndexed(this.index_),'A node must be indexed if only a child is updated');var oldChild=snap.getImmediateChild(key);// Check if anything actually changed.\nif(oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))){// There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n// In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n// to avoid treating these cases as \"nothing changed.\"\nif(oldChild.isEmpty()==newChild.isEmpty()){// Nothing changed.\n// This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n//assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\nreturn snap;}}if(optChangeAccumulator!=null){if(newChild.isEmpty()){if(snap.hasChild(key)){optChangeAccumulator.trackChildChange(Change.childRemovedChange(key,oldChild));}else{util.assert(snap.isLeafNode(),'A child remove without an old child only makes sense on a leaf node');}}else if(oldChild.isEmpty()){optChangeAccumulator.trackChildChange(Change.childAddedChange(key,newChild));}else{optChangeAccumulator.trackChildChange(Change.childChangedChange(key,newChild,oldChild));}}if(snap.isLeafNode()&&newChild.isEmpty()){return snap;}else{// Make sure the node is indexed\nreturn snap.updateImmediateChild(key,newChild).withIndex(this.index_);}};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(optChangeAccumulator!=null){if(!oldSnap.isLeafNode()){oldSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!newSnap.hasChild(key)){optChangeAccumulator.trackChildChange(Change.childRemovedChange(key,childNode));}});}if(!newSnap.isLeafNode()){newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(oldSnap.hasChild(key)){var oldChild=oldSnap.getImmediateChild(key);if(!oldChild.equals(childNode)){optChangeAccumulator.trackChildChange(Change.childChangedChange(key,childNode,oldChild));}}else{optChangeAccumulator.trackChildChange(Change.childAddedChange(key,childNode));}});}}return newSnap.withIndex(this.index_);};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.updatePriority=function(oldSnap,newPriority){if(oldSnap.isEmpty()){return ChildrenNode.EMPTY_NODE;}else{return oldSnap.updatePriority(newPriority);}};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.filtersNodes=function(){return false;};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.getIndexedFilter=function(){return this;};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.getIndex=function(){return this.index_;};return IndexedFilter;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @constructor\r\n */var ChildChangeAccumulator=/** @class */function(){function ChildChangeAccumulator(){this.changeMap_={};}/**\r\n     * @param {!Change} change\r\n     */ChildChangeAccumulator.prototype.trackChildChange=function(change){var type=change.type;var childKey/** @type {!string} */=change.childName;util.assert(type==Change.CHILD_ADDED||type==Change.CHILD_CHANGED||type==Change.CHILD_REMOVED,'Only child changes supported for tracking');util.assert(childKey!=='.priority','Only non-priority child changes can be tracked.');var oldChange=util.safeGet(this.changeMap_,childKey);if(oldChange){var oldType=oldChange.type;if(type==Change.CHILD_ADDED&&oldType==Change.CHILD_REMOVED){this.changeMap_[childKey]=Change.childChangedChange(childKey,change.snapshotNode,oldChange.snapshotNode);}else if(type==Change.CHILD_REMOVED&&oldType==Change.CHILD_ADDED){delete this.changeMap_[childKey];}else if(type==Change.CHILD_REMOVED&&oldType==Change.CHILD_CHANGED){this.changeMap_[childKey]=Change.childRemovedChange(childKey,oldChange.oldSnap);}else if(type==Change.CHILD_CHANGED&&oldType==Change.CHILD_ADDED){this.changeMap_[childKey]=Change.childAddedChange(childKey,change.snapshotNode);}else if(type==Change.CHILD_CHANGED&&oldType==Change.CHILD_CHANGED){this.changeMap_[childKey]=Change.childChangedChange(childKey,change.snapshotNode,oldChange.oldSnap);}else{throw util.assertionError('Illegal combination of changes: '+change+' occurred after '+oldChange);}}else{this.changeMap_[childKey]=change;}};/**\r\n     * @return {!Array.<!Change>}\r\n     */ChildChangeAccumulator.prototype.getChanges=function(){return util.getValues(this.changeMap_);};return ChildChangeAccumulator;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */var NoCompleteChildSource_=/** @class */function(){function NoCompleteChildSource_(){}/**\r\n     * @inheritDoc\r\n     */NoCompleteChildSource_.prototype.getCompleteChild=function(childKey){return null;};/**\r\n     * @inheritDoc\r\n     */NoCompleteChildSource_.prototype.getChildAfterChild=function(index,child,reverse){return null;};return NoCompleteChildSource_;}();/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */var NO_COMPLETE_CHILD_SOURCE=new NoCompleteChildSource_();/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */var WriteTreeCompleteChildSource=/** @class */function(){/**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */function WriteTreeCompleteChildSource(writes_,viewCache_,optCompleteServerCache_){if(optCompleteServerCache_===void 0){optCompleteServerCache_=null;}this.writes_=writes_;this.viewCache_=viewCache_;this.optCompleteServerCache_=optCompleteServerCache_;}/**\r\n     * @inheritDoc\r\n     */WriteTreeCompleteChildSource.prototype.getCompleteChild=function(childKey){var node=this.viewCache_.getEventCache();if(node.isCompleteForChild(childKey)){return node.getNode().getImmediateChild(childKey);}else{var serverNode=this.optCompleteServerCache_!=null?new CacheNode(this.optCompleteServerCache_,true,false):this.viewCache_.getServerCache();return this.writes_.calcCompleteChild(childKey,serverNode);}};/**\r\n     * @inheritDoc\r\n     */WriteTreeCompleteChildSource.prototype.getChildAfterChild=function(index,child,reverse){var completeServerData=this.optCompleteServerCache_!=null?this.optCompleteServerCache_:this.viewCache_.getCompleteServerSnap();var nodes=this.writes_.calcIndexedSlice(completeServerData,child,1,reverse,index);if(nodes.length===0){return null;}else{return nodes[0];}};return WriteTreeCompleteChildSource;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @constructor\r\n * @struct\r\n */var ProcessorResult=/** @class */function(){/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */function ProcessorResult(viewCache,changes){this.viewCache=viewCache;this.changes=changes;}return ProcessorResult;}();/**\r\n * @constructor\r\n */var ViewProcessor=/** @class */function(){/**\r\n     * @param {!NodeFilter} filter_\r\n     */function ViewProcessor(filter_){this.filter_=filter_;}/**\r\n     * @param {!ViewCache} viewCache\r\n     */ViewProcessor.prototype.assertIndexed=function(viewCache){util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()),'Event snap not indexed');util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()),'Server snap not indexed');};/**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */ViewProcessor.prototype.applyOperation=function(oldViewCache,operation,writesCache,completeCache){var accumulator=new ChildChangeAccumulator();var newViewCache,filterServerNode;if(operation.type===OperationType.OVERWRITE){var overwrite=operation;if(overwrite.source.fromUser){newViewCache=this.applyUserOverwrite_(oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,accumulator);}else{util.assert(overwrite.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered  and the\n// update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n// again\nfilterServerNode=overwrite.source.tagged||oldViewCache.getServerCache().isFiltered()&&!overwrite.path.isEmpty();newViewCache=this.applyServerOverwrite_(oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.MERGE){var merge=operation;if(merge.source.fromUser){newViewCache=this.applyUserMerge_(oldViewCache,merge.path,merge.children,writesCache,completeCache,accumulator);}else{util.assert(merge.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered\nfilterServerNode=merge.source.tagged||oldViewCache.getServerCache().isFiltered();newViewCache=this.applyServerMerge_(oldViewCache,merge.path,merge.children,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.ACK_USER_WRITE){var ackUserWrite=operation;if(!ackUserWrite.revert){newViewCache=this.ackUserWrite_(oldViewCache,ackUserWrite.path,ackUserWrite.affectedTree,writesCache,completeCache,accumulator);}else{newViewCache=this.revertUserWrite_(oldViewCache,ackUserWrite.path,writesCache,completeCache,accumulator);}}else if(operation.type===OperationType.LISTEN_COMPLETE){newViewCache=this.listenComplete_(oldViewCache,operation.path,writesCache,accumulator);}else{throw util.assertionError('Unknown operation type: '+operation.type);}var changes=accumulator.getChanges();ViewProcessor.maybeAddValueEvent_(oldViewCache,newViewCache,changes);return new ProcessorResult(newViewCache,changes);};/**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */ViewProcessor.maybeAddValueEvent_=function(oldViewCache,newViewCache,accumulator){var eventSnap=newViewCache.getEventCache();if(eventSnap.isFullyInitialized()){var isLeafOrEmpty=eventSnap.getNode().isLeafNode()||eventSnap.getNode().isEmpty();var oldCompleteSnap=oldViewCache.getCompleteEventSnap();if(accumulator.length>0||!oldViewCache.getEventCache().isFullyInitialized()||isLeafOrEmpty&&!eventSnap.getNode().equals(/** @type {!Node} */oldCompleteSnap)||!eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())){accumulator.push(Change.valueChange(/** @type {!Node} */newViewCache.getCompleteEventSnap()));}}};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.generateEventCacheAfterServerEvent_=function(viewCache,changePath,writesCache,source,accumulator){var oldEventSnap=viewCache.getEventCache();if(writesCache.shadowingWrite(changePath)!=null){// we have a shadowing write, ignore changes\nreturn viewCache;}else{var newEventCache=void 0,serverNode=void 0;if(changePath.isEmpty()){// TODO: figure out how this plays with \"sliding ack windows\"\nutil.assert(viewCache.getServerCache().isFullyInitialized(),'If change path is empty, we must have complete server data');if(viewCache.getServerCache().isFiltered()){// We need to special case this, because we need to only apply writes to complete children, or\n// we might end up raising events for incomplete children. If the server data is filtered deep\n// writes cannot be guaranteed to be complete\nvar serverCache=viewCache.getCompleteServerSnap();var completeChildren=serverCache instanceof ChildrenNode?serverCache:ChildrenNode.EMPTY_NODE;var completeEventChildren=writesCache.calcCompleteEventChildren(completeChildren);newEventCache=this.filter_.updateFullNode(viewCache.getEventCache().getNode(),completeEventChildren,accumulator);}else{var completeNode=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());newEventCache=this.filter_.updateFullNode(viewCache.getEventCache().getNode(),completeNode,accumulator);}}else{var childKey=changePath.getFront();if(childKey=='.priority'){util.assert(changePath.getLength()==1,\"Can't have a priority with additional path components\");var oldEventNode=oldEventSnap.getNode();serverNode=viewCache.getServerCache().getNode();// we might have overwrites for this priority\nvar updatedPriority=writesCache.calcEventCacheAfterServerOverwrite(changePath,oldEventNode,serverNode);if(updatedPriority!=null){newEventCache=this.filter_.updatePriority(oldEventNode,updatedPriority);}else{// priority didn't change, keep old node\nnewEventCache=oldEventSnap.getNode();}}else{var childChangePath=changePath.popFront();// update child\nvar newEventChild=void 0;if(oldEventSnap.isCompleteForChild(childKey)){serverNode=viewCache.getServerCache().getNode();var eventChildUpdate=writesCache.calcEventCacheAfterServerOverwrite(changePath,oldEventSnap.getNode(),serverNode);if(eventChildUpdate!=null){newEventChild=oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath,eventChildUpdate);}else{// Nothing changed, just keep the old child\nnewEventChild=oldEventSnap.getNode().getImmediateChild(childKey);}}else{newEventChild=writesCache.calcCompleteChild(childKey,viewCache.getServerCache());}if(newEventChild!=null){newEventCache=this.filter_.updateChild(oldEventSnap.getNode(),childKey,newEventChild,childChangePath,source,accumulator);}else{// no complete child available or no change\nnewEventCache=oldEventSnap.getNode();}}}return viewCache.updateEventSnap(newEventCache,oldEventSnap.isFullyInitialized()||changePath.isEmpty(),this.filter_.filtersNodes());}};/**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.applyServerOverwrite_=function(oldViewCache,changePath,changedSnap,writesCache,completeCache,filterServerNode,accumulator){var oldServerSnap=oldViewCache.getServerCache();var newServerCache;var serverFilter=filterServerNode?this.filter_:this.filter_.getIndexedFilter();if(changePath.isEmpty()){newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),changedSnap,null);}else if(serverFilter.filtersNodes()&&!oldServerSnap.isFiltered()){// we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\nvar newServerNode=oldServerSnap.getNode().updateChild(changePath,changedSnap);newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),newServerNode,null);}else{var childKey=changePath.getFront();if(!oldServerSnap.isCompleteForPath(changePath)&&changePath.getLength()>1){// We don't update incomplete nodes with updates intended for other listeners\nreturn oldViewCache;}var childChangePath=changePath.popFront();var childNode=oldServerSnap.getNode().getImmediateChild(childKey);var newChildNode=childNode.updateChild(childChangePath,changedSnap);if(childKey=='.priority'){newServerCache=serverFilter.updatePriority(oldServerSnap.getNode(),newChildNode);}else{newServerCache=serverFilter.updateChild(oldServerSnap.getNode(),childKey,newChildNode,childChangePath,NO_COMPLETE_CHILD_SOURCE,null);}}var newViewCache=oldViewCache.updateServerSnap(newServerCache,oldServerSnap.isFullyInitialized()||changePath.isEmpty(),serverFilter.filtersNodes());var source=new WriteTreeCompleteChildSource(writesCache,newViewCache,completeCache);return this.generateEventCacheAfterServerEvent_(newViewCache,changePath,writesCache,source,accumulator);};/**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.applyUserOverwrite_=function(oldViewCache,changePath,changedSnap,writesCache,completeCache,accumulator){var oldEventSnap=oldViewCache.getEventCache();var newViewCache,newEventCache;var source=new WriteTreeCompleteChildSource(writesCache,oldViewCache,completeCache);if(changePath.isEmpty()){newEventCache=this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(),changedSnap,accumulator);newViewCache=oldViewCache.updateEventSnap(newEventCache,true,this.filter_.filtersNodes());}else{var childKey=changePath.getFront();if(childKey==='.priority'){newEventCache=this.filter_.updatePriority(oldViewCache.getEventCache().getNode(),changedSnap);newViewCache=oldViewCache.updateEventSnap(newEventCache,oldEventSnap.isFullyInitialized(),oldEventSnap.isFiltered());}else{var childChangePath=changePath.popFront();var oldChild=oldEventSnap.getNode().getImmediateChild(childKey);var newChild=void 0;if(childChangePath.isEmpty()){// Child overwrite, we can replace the child\nnewChild=changedSnap;}else{var childNode=source.getCompleteChild(childKey);if(childNode!=null){if(childChangePath.getBack()==='.priority'&&childNode.getChild(childChangePath.parent()).isEmpty()){// This is a priority update on an empty node. If this node exists on the server, the\n// server will send down the priority in the update, so ignore for now\nnewChild=childNode;}else{newChild=childNode.updateChild(childChangePath,changedSnap);}}else{// There is no complete child node available\nnewChild=ChildrenNode.EMPTY_NODE;}}if(!oldChild.equals(newChild)){var newEventSnap=this.filter_.updateChild(oldEventSnap.getNode(),childKey,newChild,childChangePath,source,accumulator);newViewCache=oldViewCache.updateEventSnap(newEventSnap,oldEventSnap.isFullyInitialized(),this.filter_.filtersNodes());}else{newViewCache=oldViewCache;}}}return newViewCache;};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */ViewProcessor.cacheHasChild_=function(viewCache,childKey){return viewCache.getEventCache().isCompleteForChild(childKey);};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.applyUserMerge_=function(viewCache,path,changedChildren,writesCache,serverCache,accumulator){var _this=this;// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;changedChildren.foreach(function(relativePath,childNode){var writePath=path.child(relativePath);if(ViewProcessor.cacheHasChild_(viewCache,writePath.getFront())){curViewCache=_this.applyUserOverwrite_(curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});changedChildren.foreach(function(relativePath,childNode){var writePath=path.child(relativePath);if(!ViewProcessor.cacheHasChild_(viewCache,writePath.getFront())){curViewCache=_this.applyUserOverwrite_(curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});return curViewCache;};/**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */ViewProcessor.prototype.applyMerge_=function(node,merge){merge.foreach(function(relativePath,childNode){node=node.updateChild(relativePath,childNode);});return node;};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.applyServerMerge_=function(viewCache,path,changedChildren,writesCache,serverCache,filterServerNode,accumulator){var _this=this;// If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n// wait for the complete data update coming soon.\nif(viewCache.getServerCache().getNode().isEmpty()&&!viewCache.getServerCache().isFullyInitialized()){return viewCache;}// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;var viewMergeTree;if(path.isEmpty()){viewMergeTree=changedChildren;}else{viewMergeTree=ImmutableTree.Empty.setTree(path,changedChildren);}var serverNode=viewCache.getServerCache().getNode();viewMergeTree.children.inorderTraversal(function(childKey,childTree){if(serverNode.hasChild(childKey)){var serverChild=viewCache.getServerCache().getNode().getImmediateChild(childKey);var newChild=_this.applyMerge_(serverChild,childTree);curViewCache=_this.applyServerOverwrite_(curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});viewMergeTree.children.inorderTraversal(function(childKey,childMergeTree){var isUnknownDeepMerge=!viewCache.getServerCache().isCompleteForChild(childKey)&&childMergeTree.value==null;if(!serverNode.hasChild(childKey)&&!isUnknownDeepMerge){var serverChild=viewCache.getServerCache().getNode().getImmediateChild(childKey);var newChild=_this.applyMerge_(serverChild,childMergeTree);curViewCache=_this.applyServerOverwrite_(curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});return curViewCache;};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.ackUserWrite_=function(viewCache,ackPath,affectedTree,writesCache,completeCache,accumulator){if(writesCache.shadowingWrite(ackPath)!=null){return viewCache;}// Only filter server node if it is currently filtered\nvar filterServerNode=viewCache.getServerCache().isFiltered();// Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n// now that it won't be shadowed.\nvar serverCache=viewCache.getServerCache();if(affectedTree.value!=null){// This is an overwrite.\nif(ackPath.isEmpty()&&serverCache.isFullyInitialized()||serverCache.isCompleteForPath(ackPath)){return this.applyServerOverwrite_(viewCache,ackPath,serverCache.getNode().getChild(ackPath),writesCache,completeCache,filterServerNode,accumulator);}else if(ackPath.isEmpty()){// This is a goofy edge case where we are acking data at this location but don't have full data.  We\n// should just re-apply whatever we have in our cache as a merge.\nvar changedChildren_1=ImmutableTree.Empty;serverCache.getNode().forEachChild(KEY_INDEX,function(name,node){changedChildren_1=changedChildren_1.set(new Path(name),node);});return this.applyServerMerge_(viewCache,ackPath,changedChildren_1,writesCache,completeCache,filterServerNode,accumulator);}else{return viewCache;}}else{// This is a merge.\nvar changedChildren_2=ImmutableTree.Empty;affectedTree.foreach(function(mergePath,value){var serverCachePath=ackPath.child(mergePath);if(serverCache.isCompleteForPath(serverCachePath)){changedChildren_2=changedChildren_2.set(mergePath,serverCache.getNode().getChild(serverCachePath));}});return this.applyServerMerge_(viewCache,ackPath,changedChildren_2,writesCache,completeCache,filterServerNode,accumulator);}};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.listenComplete_=function(viewCache,path,writesCache,accumulator){var oldServerNode=viewCache.getServerCache();var newViewCache=viewCache.updateServerSnap(oldServerNode.getNode(),oldServerNode.isFullyInitialized()||path.isEmpty(),oldServerNode.isFiltered());return this.generateEventCacheAfterServerEvent_(newViewCache,path,writesCache,NO_COMPLETE_CHILD_SOURCE,accumulator);};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.revertUserWrite_=function(viewCache,path,writesCache,completeServerCache,accumulator){var complete;if(writesCache.shadowingWrite(path)!=null){return viewCache;}else{var source=new WriteTreeCompleteChildSource(writesCache,viewCache,completeServerCache);var oldEventCache=viewCache.getEventCache().getNode();var newEventCache=void 0;if(path.isEmpty()||path.getFront()==='.priority'){var newNode=void 0;if(viewCache.getServerCache().isFullyInitialized()){newNode=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());}else{var serverChildren=viewCache.getServerCache().getNode();util.assert(serverChildren instanceof ChildrenNode,'serverChildren would be complete if leaf node');newNode=writesCache.calcCompleteEventChildren(serverChildren);}newNode=newNode;newEventCache=this.filter_.updateFullNode(oldEventCache,newNode,accumulator);}else{var childKey=path.getFront();var newChild=writesCache.calcCompleteChild(childKey,viewCache.getServerCache());if(newChild==null&&viewCache.getServerCache().isCompleteForChild(childKey)){newChild=oldEventCache.getImmediateChild(childKey);}if(newChild!=null){newEventCache=this.filter_.updateChild(oldEventCache,childKey,newChild,path.popFront(),source,accumulator);}else if(viewCache.getEventCache().getNode().hasChild(childKey)){// No complete child available, delete the existing one, if any\nnewEventCache=this.filter_.updateChild(oldEventCache,childKey,ChildrenNode.EMPTY_NODE,path.popFront(),source,accumulator);}else{newEventCache=oldEventCache;}if(newEventCache.isEmpty()&&viewCache.getServerCache().isFullyInitialized()){// We might have reverted all child writes. Maybe the old event was a leaf node\ncomplete=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());if(complete.isLeafNode()){newEventCache=this.filter_.updateFullNode(newEventCache,complete,accumulator);}}}complete=viewCache.getServerCache().isFullyInitialized()||writesCache.shadowingWrite(Path.Empty)!=null;return viewCache.updateEventSnap(newEventCache,complete,this.filter_.filtersNodes());}};return ViewProcessor;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */var EventGenerator=/** @class */function(){/**\r\n     *\r\n     * @param {!Query} query_\r\n     */function EventGenerator(query_){this.query_=query_;/**\r\n         * @private\r\n         * @type {!Index}\r\n         */this.index_=this.query_.getQueryParams().getIndex();}/**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */EventGenerator.prototype.generateEventsForChanges=function(changes,eventCache,eventRegistrations){var _this=this;var events=[];var moves=[];changes.forEach(function(change){if(change.type===Change.CHILD_CHANGED&&_this.index_.indexedValueChanged(change.oldSnap,change.snapshotNode)){moves.push(Change.childMovedChange(change.childName,change.snapshotNode));}});this.generateEventsForType_(events,Change.CHILD_REMOVED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_ADDED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_MOVED,moves,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_CHANGED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.VALUE,changes,eventRegistrations,eventCache);return events;};/**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */EventGenerator.prototype.generateEventsForType_=function(events,eventType,changes,registrations,eventCache){var _this=this;var filteredChanges=changes.filter(function(change){return change.type===eventType;});filteredChanges.sort(this.compareChanges_.bind(this));filteredChanges.forEach(function(change){var materializedChange=_this.materializeSingleChange_(change,eventCache);registrations.forEach(function(registration){if(registration.respondsTo(change.type)){events.push(registration.createEvent(materializedChange,_this.query_));}});});};/**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */EventGenerator.prototype.materializeSingleChange_=function(change,eventCache){if(change.type==='value'||change.type==='child_removed'){return change;}else{change.prevName=eventCache.getPredecessorChildName(/** @type {!string} */change.childName,change.snapshotNode,this.index_);return change;}};/**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */EventGenerator.prototype.compareChanges_=function(a,b){if(a.childName==null||b.childName==null){throw util.assertionError('Should only compare child_ events.');}var aWrapped=new NamedNode(a.childName,a.snapshotNode);var bWrapped=new NamedNode(b.childName,b.snapshotNode);return this.index_.compare(aWrapped,bWrapped);};return EventGenerator;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */var View=/** @class */function(){/**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */function View(query_,initialViewCache){this.query_=query_;this.eventRegistrations_=[];var params=this.query_.getQueryParams();var indexFilter=new IndexedFilter(params.getIndex());var filter=params.getNodeFilter();/**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */this.processor_=new ViewProcessor(filter);var initialServerCache=initialViewCache.getServerCache();var initialEventCache=initialViewCache.getEventCache();// Don't filter server node with other filter than index, wait for tagged listen\nvar serverSnap=indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE,initialServerCache.getNode(),null);var eventSnap=filter.updateFullNode(ChildrenNode.EMPTY_NODE,initialEventCache.getNode(),null);var newServerCache=new CacheNode(serverSnap,initialServerCache.isFullyInitialized(),indexFilter.filtersNodes());var newEventCache=new CacheNode(eventSnap,initialEventCache.isFullyInitialized(),filter.filtersNodes());/**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */this.viewCache_=new ViewCache(newEventCache,newServerCache);/**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */this.eventGenerator_=new EventGenerator(this.query_);}/**\r\n     * @return {!Query}\r\n     */View.prototype.getQuery=function(){return this.query_;};/**\r\n     * @return {?Node}\r\n     */View.prototype.getServerCache=function(){return this.viewCache_.getServerCache().getNode();};/**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */View.prototype.getCompleteServerCache=function(path){var cache=this.viewCache_.getCompleteServerSnap();if(cache){// If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n// we need to see if it contains the child we're interested in.\nif(this.query_.getQueryParams().loadsAllData()||!path.isEmpty()&&!cache.getImmediateChild(path.getFront()).isEmpty()){return cache.getChild(path);}}return null;};/**\r\n     * @return {boolean}\r\n     */View.prototype.isEmpty=function(){return this.eventRegistrations_.length===0;};/**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */View.prototype.addEventRegistration=function(eventRegistration){this.eventRegistrations_.push(eventRegistration);};/**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */View.prototype.removeEventRegistration=function(eventRegistration,cancelError){var cancelEvents=[];if(cancelError){util.assert(eventRegistration==null,'A cancel should cancel all event registrations.');var path_1=this.query_.path;this.eventRegistrations_.forEach(function(registration){cancelError/** @type {!Error} */=cancelError;var maybeEvent=registration.createCancelEvent(cancelError,path_1);if(maybeEvent){cancelEvents.push(maybeEvent);}});}if(eventRegistration){var remaining=[];for(var i=0;i<this.eventRegistrations_.length;++i){var existing=this.eventRegistrations_[i];if(!existing.matches(eventRegistration)){remaining.push(existing);}else if(eventRegistration.hasAnyCallback()){// We're removing just this one\nremaining=remaining.concat(this.eventRegistrations_.slice(i+1));break;}}this.eventRegistrations_=remaining;}else{this.eventRegistrations_=[];}return cancelEvents;};/**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */View.prototype.applyOperation=function(operation,writesCache,completeServerCache){if(operation.type===OperationType.MERGE&&operation.source.queryId!==null){util.assert(this.viewCache_.getCompleteServerSnap(),'We should always have a full cache before handling merges');util.assert(this.viewCache_.getCompleteEventSnap(),'Missing event cache, even though we have a server cache');}var oldViewCache=this.viewCache_;var result=this.processor_.applyOperation(oldViewCache,operation,writesCache,completeServerCache);this.processor_.assertIndexed(result.viewCache);util.assert(result.viewCache.getServerCache().isFullyInitialized()||!oldViewCache.getServerCache().isFullyInitialized(),'Once a server snap is complete, it should never go back');this.viewCache_=result.viewCache;return this.generateEventsForChanges_(result.changes,result.viewCache.getEventCache().getNode(),null);};/**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */View.prototype.getInitialEvents=function(registration){var eventSnap=this.viewCache_.getEventCache();var initialChanges=[];if(!eventSnap.getNode().isLeafNode()){var eventNode=eventSnap.getNode();eventNode.forEachChild(PRIORITY_INDEX,function(key,childNode){initialChanges.push(Change.childAddedChange(key,childNode));});}if(eventSnap.isFullyInitialized()){initialChanges.push(Change.valueChange(eventSnap.getNode()));}return this.generateEventsForChanges_(initialChanges,eventSnap.getNode(),registration);};/**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */View.prototype.generateEventsForChanges_=function(changes,eventCache,eventRegistration){var registrations=eventRegistration?[eventRegistration]:this.eventRegistrations_;return this.eventGenerator_.generateEventsForChanges(changes,eventCache,registrations);};return View;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __referenceConstructor$1;/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */var SyncPoint=/** @class */function(){function SyncPoint(){/**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */this.views_={};}Object.defineProperty(SyncPoint,\"__referenceConstructor\",{get:function get(){util.assert(__referenceConstructor$1,'Reference.ts has not been loaded');return __referenceConstructor$1;},set:function set(val){util.assert(!__referenceConstructor$1,'__referenceConstructor has already been defined');__referenceConstructor$1=val;},enumerable:true,configurable:true});/**\r\n     * @return {boolean}\r\n     */SyncPoint.prototype.isEmpty=function(){return util.isEmpty(this.views_);};/**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */SyncPoint.prototype.applyOperation=function(operation,writesCache,optCompleteServerCache){var queryId=operation.source.queryId;if(queryId!==null){var view=util.safeGet(this.views_,queryId);util.assert(view!=null,'SyncTree gave us an op for an invalid query.');return view.applyOperation(operation,writesCache,optCompleteServerCache);}else{var events_1=[];util.forEach(this.views_,function(key,view){events_1=events_1.concat(view.applyOperation(operation,writesCache,optCompleteServerCache));});return events_1;}};/**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncPoint.prototype.addEventRegistration=function(query,eventRegistration,writesCache,serverCache,serverCacheComplete){var queryId=query.queryIdentifier();var view=util.safeGet(this.views_,queryId);if(!view){// TODO: make writesCache take flag for complete server node\nvar eventCache=writesCache.calcCompleteEventCache(serverCacheComplete?serverCache:null);var eventCacheComplete=false;if(eventCache){eventCacheComplete=true;}else if(serverCache instanceof ChildrenNode){eventCache=writesCache.calcCompleteEventChildren(serverCache);eventCacheComplete=false;}else{eventCache=ChildrenNode.EMPTY_NODE;eventCacheComplete=false;}var viewCache=new ViewCache(new CacheNode(/** @type {!Node} */eventCache,eventCacheComplete,false),new CacheNode(/** @type {!Node} */serverCache,serverCacheComplete,false));view=new View(query,viewCache);this.views_[queryId]=view;}// This is guaranteed to exist now, we just created anything that was missing\nview.addEventRegistration(eventRegistration);return view.getInitialEvents(eventRegistration);};/**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */SyncPoint.prototype.removeEventRegistration=function(query,eventRegistration,cancelError){var queryId=query.queryIdentifier();var removed=[];var cancelEvents=[];var hadCompleteView=this.hasCompleteView();if(queryId==='default'){// When you do ref.off(...), we search all views for the registration to remove.\nvar self_1=this;util.forEach(this.views_,function(viewQueryId,view){cancelEvents=cancelEvents.concat(view.removeEventRegistration(eventRegistration,cancelError));if(view.isEmpty()){delete self_1.views_[viewQueryId];// We'll deal with complete views later.\nif(!view.getQuery().getQueryParams().loadsAllData()){removed.push(view.getQuery());}}});}else{// remove the callback from the specific view.\nvar view=util.safeGet(this.views_,queryId);if(view){cancelEvents=cancelEvents.concat(view.removeEventRegistration(eventRegistration,cancelError));if(view.isEmpty()){delete this.views_[queryId];// We'll deal with complete views later.\nif(!view.getQuery().getQueryParams().loadsAllData()){removed.push(view.getQuery());}}}}if(hadCompleteView&&!this.hasCompleteView()){// We removed our last complete view.\nremoved.push(new SyncPoint.__referenceConstructor(query.repo,query.path));}return{removed:removed,events:cancelEvents};};/**\r\n     * @return {!Array.<!View>}\r\n     */SyncPoint.prototype.getQueryViews=function(){var _this=this;var values=Object.keys(this.views_).map(function(key){return _this.views_[key];});return values.filter(function(view){return!view.getQuery().getQueryParams().loadsAllData();});};/**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */SyncPoint.prototype.getCompleteServerCache=function(path){var serverCache=null;util.forEach(this.views_,function(key,view){serverCache=serverCache||view.getCompleteServerCache(path);});return serverCache;};/**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */SyncPoint.prototype.viewForQuery=function(query){var params=query.getQueryParams();if(params.loadsAllData()){return this.getCompleteView();}else{var queryId=query.queryIdentifier();return util.safeGet(this.views_,queryId);}};/**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */SyncPoint.prototype.viewExistsForQuery=function(query){return this.viewForQuery(query)!=null;};/**\r\n     * @return {boolean}\r\n     */SyncPoint.prototype.hasCompleteView=function(){return this.getCompleteView()!=null;};/**\r\n     * @return {?View}\r\n     */SyncPoint.prototype.getCompleteView=function(){var completeView=util.findValue(this.views_,function(view){return view.getQuery().getQueryParams().loadsAllData();});return completeView||null;};return SyncPoint;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */var CompoundWrite=/** @class */function(){function CompoundWrite(writeTree_){this.writeTree_=writeTree_;}/**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */CompoundWrite.prototype.addWrite=function(path,node){if(path.isEmpty()){return new CompoundWrite(new ImmutableTree(node));}else{var rootmost=this.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){var rootMostPath=rootmost.path;var value=rootmost.value;var relativePath=Path.relativePath(rootMostPath,path);value=value.updateChild(relativePath,node);return new CompoundWrite(this.writeTree_.set(rootMostPath,value));}else{var subtree=new ImmutableTree(node);var newWriteTree=this.writeTree_.setTree(path,subtree);return new CompoundWrite(newWriteTree);}}};/**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */CompoundWrite.prototype.addWrites=function(path,updates){var newWrite=this;util.forEach(updates,function(childKey,node){newWrite=newWrite.addWrite(path.child(childKey),node);});return newWrite;};/**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */CompoundWrite.prototype.removeWrite=function(path){if(path.isEmpty()){return CompoundWrite.Empty;}else{var newWriteTree=this.writeTree_.setTree(path,ImmutableTree.Empty);return new CompoundWrite(newWriteTree);}};/**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */CompoundWrite.prototype.hasCompleteWrite=function(path){return this.getCompleteNode(path)!=null;};/**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */CompoundWrite.prototype.getCompleteNode=function(path){var rootmost=this.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path,path));}else{return null;}};/**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */CompoundWrite.prototype.getCompleteChildren=function(){var children=[];var node=this.writeTree_.value;if(node!=null){// If it's a leaf node, it has no children; so nothing to do.\nif(!node.isLeafNode()){node.forEachChild(PRIORITY_INDEX,function(childName,childNode){children.push(new NamedNode(childName,childNode));});}}else{this.writeTree_.children.inorderTraversal(function(childName,childTree){if(childTree.value!=null){children.push(new NamedNode(childName,childTree.value));}});}return children;};/**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */CompoundWrite.prototype.childCompoundWrite=function(path){if(path.isEmpty()){return this;}else{var shadowingNode=this.getCompleteNode(path);if(shadowingNode!=null){return new CompoundWrite(new ImmutableTree(shadowingNode));}else{return new CompoundWrite(this.writeTree_.subtree(path));}}};/**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */CompoundWrite.prototype.isEmpty=function(){return this.writeTree_.isEmpty();};/**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */CompoundWrite.prototype.apply=function(node){return CompoundWrite.applySubtreeWrite_(Path.Empty,this.writeTree_,node);};/**\r\n     * @type {!CompoundWrite}\r\n     */CompoundWrite.Empty=new CompoundWrite(new ImmutableTree(null));/**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */CompoundWrite.applySubtreeWrite_=function(relativePath,writeTree,node){if(writeTree.value!=null){// Since there a write is always a leaf, we're done here\nreturn node.updateChild(relativePath,writeTree.value);}else{var priorityWrite_1=null;writeTree.children.inorderTraversal(function(childKey,childTree){if(childKey==='.priority'){// Apply priorities at the end so we don't update priorities for either empty nodes or forget\n// to apply priorities to empty nodes that are later filled\nutil.assert(childTree.value!==null,'Priority writes must always be leaf nodes');priorityWrite_1=childTree.value;}else{node=CompoundWrite.applySubtreeWrite_(relativePath.child(childKey),childTree,node);}});// If there was a priority write, we only apply it if the node is not empty\nif(!node.getChild(relativePath).isEmpty()&&priorityWrite_1!==null){node=node.updateChild(relativePath.child('.priority'),priorityWrite_1);}return node;}};return CompoundWrite;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */var WriteTree=/** @class */function(){function WriteTree(){/**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */this.visibleWrites_=CompoundWrite.Empty;/**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */this.allWrites_=[];this.lastWriteId_=-1;}/**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */WriteTree.prototype.childWrites=function(path){return new WriteTreeRef(path,this);};/**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */WriteTree.prototype.addOverwrite=function(path,snap,writeId,visible){util.assert(writeId>this.lastWriteId_,'Stacking an older write on top of newer ones');if(visible===undefined){visible=true;}this.allWrites_.push({path:path,snap:snap,writeId:writeId,visible:visible});if(visible){this.visibleWrites_=this.visibleWrites_.addWrite(path,snap);}this.lastWriteId_=writeId;};/**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */WriteTree.prototype.addMerge=function(path,changedChildren,writeId){util.assert(writeId>this.lastWriteId_,'Stacking an older merge on top of newer ones');this.allWrites_.push({path:path,children:changedChildren,writeId:writeId,visible:true});this.visibleWrites_=this.visibleWrites_.addWrites(path,changedChildren);this.lastWriteId_=writeId;};/**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */WriteTree.prototype.getWrite=function(writeId){for(var i=0;i<this.allWrites_.length;i++){var record=this.allWrites_[i];if(record.writeId===writeId){return record;}}return null;};/**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */WriteTree.prototype.removeWrite=function(writeId){// Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n// out of order.\n//const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n//assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\nvar _this=this;var idx=this.allWrites_.findIndex(function(s){return s.writeId===writeId;});util.assert(idx>=0,'removeWrite called with nonexistent writeId.');var writeToRemove=this.allWrites_[idx];this.allWrites_.splice(idx,1);var removedWriteWasVisible=writeToRemove.visible;var removedWriteOverlapsWithOtherWrites=false;var i=this.allWrites_.length-1;while(removedWriteWasVisible&&i>=0){var currentWrite=this.allWrites_[i];if(currentWrite.visible){if(i>=idx&&this.recordContainsPath_(currentWrite,writeToRemove.path)){// The removed write was completely shadowed by a subsequent write.\nremovedWriteWasVisible=false;}else if(writeToRemove.path.contains(currentWrite.path)){// Either we're covering some writes or they're covering part of us (depending on which came first).\nremovedWriteOverlapsWithOtherWrites=true;}}i--;}if(!removedWriteWasVisible){return false;}else if(removedWriteOverlapsWithOtherWrites){// There's some shadowing going on. Just rebuild the visible writes from scratch.\nthis.resetTree_();return true;}else{// There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\nif(writeToRemove.snap){this.visibleWrites_=this.visibleWrites_.removeWrite(writeToRemove.path);}else{var children=writeToRemove.children;util.forEach(children,function(childName){_this.visibleWrites_=_this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));});}return true;}};/**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */WriteTree.prototype.getCompleteWriteData=function(path){return this.visibleWrites_.getCompleteNode(path);};/**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */WriteTree.prototype.calcCompleteEventCache=function(treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites){if(!writeIdsToExclude&&!includeHiddenWrites){var shadowingNode=this.visibleWrites_.getCompleteNode(treePath);if(shadowingNode!=null){return shadowingNode;}else{var subMerge=this.visibleWrites_.childCompoundWrite(treePath);if(subMerge.isEmpty()){return completeServerCache;}else if(completeServerCache==null&&!subMerge.hasCompleteWrite(Path.Empty)){// We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\nreturn null;}else{var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return subMerge.apply(layeredCache);}}}else{var merge=this.visibleWrites_.childCompoundWrite(treePath);if(!includeHiddenWrites&&merge.isEmpty()){return completeServerCache;}else{// If the server cache is null, and we don't have a complete cache, we need to return null\nif(!includeHiddenWrites&&completeServerCache==null&&!merge.hasCompleteWrite(Path.Empty)){return null;}else{var filter=function filter(write){return(write.visible||includeHiddenWrites)&&(!writeIdsToExclude||!~writeIdsToExclude.indexOf(write.writeId))&&(write.path.contains(treePath)||treePath.contains(write.path));};var mergeAtPath=WriteTree.layerTree_(this.allWrites_,filter,treePath);var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return mergeAtPath.apply(layeredCache);}}}};/**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */WriteTree.prototype.calcCompleteEventChildren=function(treePath,completeServerChildren){var completeChildren=ChildrenNode.EMPTY_NODE;var topLevelSet=this.visibleWrites_.getCompleteNode(treePath);if(topLevelSet){if(!topLevelSet.isLeafNode()){// we're shadowing everything. Return the children.\ntopLevelSet.forEachChild(PRIORITY_INDEX,function(childName,childSnap){completeChildren=completeChildren.updateImmediateChild(childName,childSnap);});}return completeChildren;}else if(completeServerChildren){// Layer any children we have on top of this\n// We know we don't have a top-level set, so just enumerate existing children\nvar merge_1=this.visibleWrites_.childCompoundWrite(treePath);completeServerChildren.forEachChild(PRIORITY_INDEX,function(childName,childNode){var node=merge_1.childCompoundWrite(new Path(childName)).apply(childNode);completeChildren=completeChildren.updateImmediateChild(childName,node);});// Add any complete children we have from the set\nmerge_1.getCompleteChildren().forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}else{// We don't have anything to layer on top of. Layer on any children we have\n// Note that we can return an empty snap if we have a defined delete\nvar merge=this.visibleWrites_.childCompoundWrite(treePath);merge.getCompleteChildren().forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}};/**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */WriteTree.prototype.calcEventCacheAfterServerOverwrite=function(treePath,childPath,existingEventSnap,existingServerSnap){util.assert(existingEventSnap||existingServerSnap,'Either existingEventSnap or existingServerSnap must exist');var path=treePath.child(childPath);if(this.visibleWrites_.hasCompleteWrite(path)){// At this point we can probably guarantee that we're in case 2, meaning no events\n// May need to check visibility while doing the findRootMostValueAndPath call\nreturn null;}else{// No complete shadowing. We're either partially shadowing or not shadowing at all.\nvar childMerge=this.visibleWrites_.childCompoundWrite(path);if(childMerge.isEmpty()){// We're not shadowing at all. Case 1\nreturn existingServerSnap.getChild(childPath);}else{// This could be more efficient if the serverNode + updates doesn't change the eventSnap\n// However this is tricky to find out, since user updates don't necessary change the server\n// snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n// adds nodes, but doesn't change any existing writes. It is therefore not enough to\n// only check if the updates change the serverNode.\n// Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\nreturn childMerge.apply(existingServerSnap.getChild(childPath));}}};/**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */WriteTree.prototype.calcCompleteChild=function(treePath,childKey,existingServerSnap){var path=treePath.child(childKey);var shadowingNode=this.visibleWrites_.getCompleteNode(path);if(shadowingNode!=null){return shadowingNode;}else{if(existingServerSnap.isCompleteForChild(childKey)){var childMerge=this.visibleWrites_.childCompoundWrite(path);return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));}else{return null;}}};/**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */WriteTree.prototype.shadowingWrite=function(path){return this.visibleWrites_.getCompleteNode(path);};/**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */WriteTree.prototype.calcIndexedSlice=function(treePath,completeServerData,startPost,count,reverse,index){var toIterate;var merge=this.visibleWrites_.childCompoundWrite(treePath);var shadowingNode=merge.getCompleteNode(Path.Empty);if(shadowingNode!=null){toIterate=shadowingNode;}else if(completeServerData!=null){toIterate=merge.apply(completeServerData);}else{// no children to iterate on\nreturn[];}toIterate=toIterate.withIndex(index);if(!toIterate.isEmpty()&&!toIterate.isLeafNode()){var nodes=[];var cmp=index.getCompare();var iter=reverse?toIterate.getReverseIteratorFrom(startPost,index):toIterate.getIteratorFrom(startPost,index);var next=iter.getNext();while(next&&nodes.length<count){if(cmp(next,startPost)!==0){nodes.push(next);}next=iter.getNext();}return nodes;}else{return[];}};/**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */WriteTree.prototype.recordContainsPath_=function(writeRecord,path){if(writeRecord.snap){return writeRecord.path.contains(path);}else{// findKey can return undefined, so use !! to coerce to boolean\nreturn!!util.findKey(writeRecord.children,function(childSnap,childName){return writeRecord.path.child(childName).contains(path);});}};/**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */WriteTree.prototype.resetTree_=function(){this.visibleWrites_=WriteTree.layerTree_(this.allWrites_,WriteTree.DefaultFilter_,Path.Empty);if(this.allWrites_.length>0){this.lastWriteId_=this.allWrites_[this.allWrites_.length-1].writeId;}else{this.lastWriteId_=-1;}};/**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */WriteTree.DefaultFilter_=function(write){return write.visible;};/**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */WriteTree.layerTree_=function(writes,filter,treeRoot){var compoundWrite=CompoundWrite.Empty;for(var i=0;i<writes.length;++i){var write=writes[i];// Theory, a later set will either:\n// a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n// b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\nif(filter(write)){var writePath=write.path;var relativePath=void 0;if(write.snap){if(treeRoot.contains(writePath)){relativePath=Path.relativePath(treeRoot,writePath);compoundWrite=compoundWrite.addWrite(relativePath,write.snap);}else if(writePath.contains(treeRoot)){relativePath=Path.relativePath(writePath,treeRoot);compoundWrite=compoundWrite.addWrite(Path.Empty,write.snap.getChild(relativePath));}else{// There is no overlap between root path and write path, ignore write\n}}else if(write.children){if(treeRoot.contains(writePath)){relativePath=Path.relativePath(treeRoot,writePath);compoundWrite=compoundWrite.addWrites(relativePath,write.children);}else if(writePath.contains(treeRoot)){relativePath=Path.relativePath(writePath,treeRoot);if(relativePath.isEmpty()){compoundWrite=compoundWrite.addWrites(Path.Empty,write.children);}else{var child=util.safeGet(write.children,relativePath.getFront());if(child){// There exists a child in this node that matches the root path\nvar deepNode=child.getChild(relativePath.popFront());compoundWrite=compoundWrite.addWrite(Path.Empty,deepNode);}}}else{// There is no overlap between root path and write path, ignore write\n}}else{throw util.assertionError('WriteRecord should have .snap or .children');}}}return compoundWrite;};return WriteTree;}();/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */var WriteTreeRef=/** @class */function(){/**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */function WriteTreeRef(path,writeTree){this.treePath_=path;this.writeTree_=writeTree;}/**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */WriteTreeRef.prototype.calcCompleteEventCache=function(completeServerCache,writeIdsToExclude,includeHiddenWrites){return this.writeTree_.calcCompleteEventCache(this.treePath_,completeServerCache,writeIdsToExclude,includeHiddenWrites);};/**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */WriteTreeRef.prototype.calcCompleteEventChildren=function(completeServerChildren){return this.writeTree_.calcCompleteEventChildren(this.treePath_,completeServerChildren);};/**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite=function(path,existingEventSnap,existingServerSnap){return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_,path,existingEventSnap,existingServerSnap);};/**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */WriteTreeRef.prototype.shadowingWrite=function(path){return this.writeTree_.shadowingWrite(this.treePath_.child(path));};/**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */WriteTreeRef.prototype.calcIndexedSlice=function(completeServerData,startPost,count,reverse,index){return this.writeTree_.calcIndexedSlice(this.treePath_,completeServerData,startPost,count,reverse,index);};/**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */WriteTreeRef.prototype.calcCompleteChild=function(childKey,existingServerCache){return this.writeTree_.calcCompleteChild(this.treePath_,childKey,existingServerCache);};/**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */WriteTreeRef.prototype.child=function(childName){return new WriteTreeRef(this.treePath_.child(childName),this.writeTree_);};return WriteTreeRef;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */var SyncTree=/** @class */function(){/**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */function SyncTree(listenProvider_){this.listenProvider_=listenProvider_;/**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */this.syncPointTree_=ImmutableTree.Empty;/**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */this.pendingWriteTree_=new WriteTree();this.tagToQueryMap_={};this.queryToTagMap_={};}/**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.applyUserOverwrite=function(path,newData,writeId,visible){// Record pending write.\nthis.pendingWriteTree_.addOverwrite(path,newData,writeId,visible);if(!visible){return[];}else{return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User,path,newData));}};/**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.applyUserMerge=function(path,changedChildren,writeId){// Record pending merge.\nthis.pendingWriteTree_.addMerge(path,changedChildren,writeId);var changeTree=ImmutableTree.fromObject(changedChildren);return this.applyOperationToSyncPoints_(new Merge(OperationSource.User,path,changeTree));};/**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.ackUserWrite=function(writeId,revert){if(revert===void 0){revert=false;}var write=this.pendingWriteTree_.getWrite(writeId);var needToReevaluate=this.pendingWriteTree_.removeWrite(writeId);if(!needToReevaluate){return[];}else{var affectedTree_1=ImmutableTree.Empty;if(write.snap!=null){// overwrite\naffectedTree_1=affectedTree_1.set(Path.Empty,true);}else{util.forEach(write.children,function(pathString,node){affectedTree_1=affectedTree_1.set(new Path(pathString),node);});}return this.applyOperationToSyncPoints_(new AckUserWrite(write.path,affectedTree_1,revert));}};/**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.applyServerOverwrite=function(path,newData){return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server,path,newData));};/**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.applyServerMerge=function(path,changedChildren){var changeTree=ImmutableTree.fromObject(changedChildren);return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server,path,changeTree));};/**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.applyListenComplete=function(path){return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server,path));};/**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.applyTaggedQueryOverwrite=function(path,snap,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey!=null){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var op=new Overwrite(OperationSource.forServerTaggedQuery(queryId),relativePath,snap);return this.applyTaggedOperation_(queryPath,op);}else{// Query must have been removed already\nreturn[];}};/**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.applyTaggedQueryMerge=function(path,changedChildren,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var changeTree=ImmutableTree.fromObject(changedChildren);var op=new Merge(OperationSource.forServerTaggedQuery(queryId),relativePath,changeTree);return this.applyTaggedOperation_(queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}};/**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.applyTaggedListenComplete=function(path,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var op=new ListenComplete(OperationSource.forServerTaggedQuery(queryId),relativePath);return this.applyTaggedOperation_(queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}};/**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncTree.prototype.addEventRegistration=function(query,eventRegistration){var path=query.path;var serverCache=null;var foundAncestorDefaultView=false;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nthis.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=Path.relativePath(pathToSyncPoint,path);serverCache=serverCache||sp.getCompleteServerCache(relativePath);foundAncestorDefaultView=foundAncestorDefaultView||sp.hasCompleteView();});var syncPoint=this.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();this.syncPointTree_=this.syncPointTree_.set(path,syncPoint);}else{foundAncestorDefaultView=foundAncestorDefaultView||syncPoint.hasCompleteView();serverCache=serverCache||syncPoint.getCompleteServerCache(Path.Empty);}var serverCacheComplete;if(serverCache!=null){serverCacheComplete=true;}else{serverCacheComplete=false;serverCache=ChildrenNode.EMPTY_NODE;var subtree=this.syncPointTree_.subtree(path);subtree.foreachChild(function(childName,childSyncPoint){var completeCache=childSyncPoint.getCompleteServerCache(Path.Empty);if(completeCache){serverCache=serverCache.updateImmediateChild(childName,completeCache);}});}var viewAlreadyExists=syncPoint.viewExistsForQuery(query);if(!viewAlreadyExists&&!query.getQueryParams().loadsAllData()){// We need to track a tag for this query\nvar queryKey=SyncTree.makeQueryKey_(query);util.assert(!(queryKey in this.queryToTagMap_),'View does not exist, but we have a tag');var tag=SyncTree.getNextQueryTag_();this.queryToTagMap_[queryKey]=tag;// Coerce to string to avoid sparse arrays.\nthis.tagToQueryMap_['_'+tag]=queryKey;}var writesCache=this.pendingWriteTree_.childWrites(path);var events=syncPoint.addEventRegistration(query,eventRegistration,writesCache,serverCache,serverCacheComplete);if(!viewAlreadyExists&&!foundAncestorDefaultView){var view/** @type !View */=syncPoint.viewForQuery(query);events=events.concat(this.setupListener_(query,view));}return events;};/**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */SyncTree.prototype.removeEventRegistration=function(query,eventRegistration,cancelError){var _this=this;// Find the syncPoint first. Then deal with whether or not it has matching listeners\nvar path=query.path;var maybeSyncPoint=this.syncPointTree_.get(path);var cancelEvents=[];// A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n// other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n// not loadsAllData().\nif(maybeSyncPoint&&(query.queryIdentifier()==='default'||maybeSyncPoint.viewExistsForQuery(query))){/**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */var removedAndEvents=maybeSyncPoint.removeEventRegistration(query,eventRegistration,cancelError);if(maybeSyncPoint.isEmpty()){this.syncPointTree_=this.syncPointTree_.remove(path);}var removed=removedAndEvents.removed;cancelEvents=removedAndEvents.events;// We may have just removed one of many listeners and can short-circuit this whole process\n// We may also not have removed a default listener, in which case all of the descendant listeners should already be\n// properly set up.\n//\n// Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n// queryId === 'default'\nvar removingDefault=-1!==removed.findIndex(function(query){return query.getQueryParams().loadsAllData();});var covered=this.syncPointTree_.findOnPath(path,function(relativePath,parentSyncPoint){return parentSyncPoint.hasCompleteView();});if(removingDefault&&!covered){var subtree=this.syncPointTree_.subtree(path);// There are potentially child listeners. Determine what if any listens we need to send before executing the\n// removal\nif(!subtree.isEmpty()){// We need to fold over our subtree and collect the listeners to send\nvar newViews=this.collectDistinctViewsForSubTree_(subtree);// Ok, we've collected all the listens we need. Set them up.\nfor(var i=0;i<newViews.length;++i){var view=newViews[i],newQuery=view.getQuery();var listener=this.createListenerForView_(view);this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery),this.tagForQuery_(newQuery),listener.hashFn,listener.onComplete);}}else{// There's nothing below us, so nothing we need to start listening on\n}}// If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n// The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n// Also, note that if we have a cancelError, it's already been removed at the provider level.\nif(!covered&&removed.length>0&&!cancelError){// If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n// default. Otherwise, we need to iterate through and cancel each individual query\nif(removingDefault){// We don't tag default listeners\nvar defaultTag=null;this.listenProvider_.stopListening(SyncTree.queryForListening_(query),defaultTag);}else{removed.forEach(function(queryToRemove){var tagToRemove=_this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];_this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove),tagToRemove);});}}// Now, clear all of the tags we're tracking for the removed listens\nthis.removeTags_(removed);}else{// No-op, this listener must've been already removed\n}return cancelEvents;};/**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */SyncTree.prototype.calcCompleteEventCache=function(path,writeIdsToExclude){var includeHiddenSets=true;var writeTree=this.pendingWriteTree_;var serverCache=this.syncPointTree_.findOnPath(path,function(pathSoFar,syncPoint){var relativePath=Path.relativePath(pathSoFar,path);var serverCache=syncPoint.getCompleteServerCache(relativePath);if(serverCache){return serverCache;}});return writeTree.calcCompleteEventCache(path,serverCache,writeIdsToExclude,includeHiddenSets);};/**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */SyncTree.prototype.collectDistinctViewsForSubTree_=function(subtree){return subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(maybeChildSyncPoint&&maybeChildSyncPoint.hasCompleteView()){var completeView=maybeChildSyncPoint.getCompleteView();return[completeView];}else{// No complete view here, flatten any deeper listens into an array\nvar views_1=[];if(maybeChildSyncPoint){views_1=maybeChildSyncPoint.getQueryViews();}util.forEach(childMap,function(key,childViews){views_1=views_1.concat(childViews);});return views_1;}});};/**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */SyncTree.prototype.removeTags_=function(queries){for(var j=0;j<queries.length;++j){var removedQuery=queries[j];if(!removedQuery.getQueryParams().loadsAllData()){// We should have a tag for this\nvar removedQueryKey=SyncTree.makeQueryKey_(removedQuery);var removedQueryTag=this.queryToTagMap_[removedQueryKey];delete this.queryToTagMap_[removedQueryKey];delete this.tagToQueryMap_['_'+removedQueryTag];}}};/**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */SyncTree.queryForListening_=function(query){if(query.getQueryParams().loadsAllData()&&!query.getQueryParams().isDefault()){// We treat queries that load all data as default queries\n// Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n// from Query\nreturn(/** @type {!Query} */query.getRef());}else{return query;}};/**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */SyncTree.prototype.setupListener_=function(query,view){var path=query.path;var tag=this.tagForQuery_(query);var listener=this.createListenerForView_(view);var events=this.listenProvider_.startListening(SyncTree.queryForListening_(query),tag,listener.hashFn,listener.onComplete);var subtree=this.syncPointTree_.subtree(path);// The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n// may need to shadow other listens as well.\nif(tag){util.assert(!subtree.value.hasCompleteView(),\"If we're adding a query, it shouldn't be shadowed\");}else{// Shadow everything at or below this location, this is a default listener.\nvar queriesToStop=subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(!relativePath.isEmpty()&&maybeChildSyncPoint&&maybeChildSyncPoint.hasCompleteView()){return[maybeChildSyncPoint.getCompleteView().getQuery()];}else{// No default listener here, flatten any deeper queries into an array\nvar queries_1=[];if(maybeChildSyncPoint){queries_1=queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function(view){return view.getQuery();}));}util.forEach(childMap,function(key,childQueries){queries_1=queries_1.concat(childQueries);});return queries_1;}});for(var i=0;i<queriesToStop.length;++i){var queryToStop=queriesToStop[i];this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop),this.tagForQuery_(queryToStop));}}return events;};/**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */SyncTree.prototype.createListenerForView_=function(view){var _this=this;var query=view.getQuery();var tag=this.tagForQuery_(query);return{hashFn:function hashFn(){var cache=view.getServerCache()||ChildrenNode.EMPTY_NODE;return cache.hash();},onComplete:function onComplete(status){if(status==='ok'){if(tag){return _this.applyTaggedListenComplete(query.path,tag);}else{return _this.applyListenComplete(query.path);}}else{// If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n// Note that this may need to be scoped to just this listener if we change permissions on filtered children\nvar error$$1=errorForServerCode(status,query);return _this.removeEventRegistration(query,/*eventRegistration*/null,error$$1);}}};};/**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */SyncTree.makeQueryKey_=function(query){return query.path.toString()+'$'+query.queryIdentifier();};/**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */SyncTree.parseQueryKey_=function(queryKey){var splitIndex=queryKey.indexOf('$');util.assert(splitIndex!==-1&&splitIndex<queryKey.length-1,'Bad queryKey.');return{queryId:queryKey.substr(splitIndex+1),path:new Path(queryKey.substr(0,splitIndex))};};/**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */SyncTree.prototype.queryKeyForTag_=function(tag){return this.tagToQueryMap_['_'+tag];};/**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */SyncTree.prototype.tagForQuery_=function(query){var queryKey=SyncTree.makeQueryKey_(query);return util.safeGet(this.queryToTagMap_,queryKey);};/**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */SyncTree.getNextQueryTag_=function(){return SyncTree.nextQueryTag_++;};/**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */SyncTree.prototype.applyTaggedOperation_=function(queryPath,operation){var syncPoint=this.syncPointTree_.get(queryPath);util.assert(syncPoint,\"Missing sync point for query tag that we're tracking\");var writesCache=this.pendingWriteTree_.childWrites(queryPath);return syncPoint.applyOperation(operation,writesCache,/*serverCache=*/null);};/**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */SyncTree.prototype.applyOperationToSyncPoints_=function(operation){return this.applyOperationHelper_(operation,this.syncPointTree_,/*serverCache=*/null,this.pendingWriteTree_.childWrites(Path.Empty));};/**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */SyncTree.prototype.applyOperationHelper_=function(operation,syncPointTree,serverCache,writesCache){if(operation.path.isEmpty()){return this.applyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache);}else{var syncPoint=syncPointTree.get(Path.Empty);// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPoint.getCompleteServerCache(Path.Empty);}var events=[];var childName=operation.path.getFront();var childOperation=operation.operationForChild(childName);var childTree=syncPointTree.children.get(childName);if(childTree&&childOperation){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writesCache.child(childName);events=events.concat(this.applyOperationHelper_(childOperation,childTree,childServerCache,childWritesCache));}if(syncPoint){events=events.concat(syncPoint.applyOperation(operation,writesCache,serverCache));}return events;}};/**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */SyncTree.prototype.applyOperationDescendantsHelper_=function(operation,syncPointTree,serverCache,writesCache){var _this=this;var syncPoint=syncPointTree.get(Path.Empty);// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPoint.getCompleteServerCache(Path.Empty);}var events=[];syncPointTree.children.inorderTraversal(function(childName,childTree){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writesCache.child(childName);var childOperation=operation.operationForChild(childName);if(childOperation){events=events.concat(_this.applyOperationDescendantsHelper_(childOperation,childTree,childServerCache,childWritesCache));}});if(syncPoint){events=events.concat(syncPoint.applyOperation(operation,writesCache,serverCache));}return events;};/**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */SyncTree.nextQueryTag_=1;return SyncTree;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */var SnapshotHolder=/** @class */function(){function SnapshotHolder(){this.rootNode_=ChildrenNode.EMPTY_NODE;}SnapshotHolder.prototype.getNode=function(path){return this.rootNode_.getChild(path);};SnapshotHolder.prototype.updateSnapshot=function(path,newSnapshotNode){this.rootNode_=this.rootNode_.updateChild(path,newSnapshotNode);};return SnapshotHolder;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */var AuthTokenProvider=/** @class */function(){/**\r\n     * @param {!FirebaseApp} app_\r\n     */function AuthTokenProvider(app_){this.app_=app_;}/**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */AuthTokenProvider.prototype.getToken=function(forceRefresh){return this.app_['INTERNAL']['getToken'](forceRefresh).then(null,// .catch\nfunction(error$$1){// TODO: Need to figure out all the cases this is raised and whether\n// this makes sense.\nif(error$$1&&error$$1.code==='auth/token-not-initialized'){log('Got auth/token-not-initialized error.  Treating as null token.');return null;}else{return Promise.reject(error$$1);}});};AuthTokenProvider.prototype.addTokenChangeListener=function(listener){// TODO: We might want to wrap the listener and call it with no args to\n// avoid a leaky abstraction, but that makes removing the listener harder.\nthis.app_['INTERNAL']['addAuthTokenListener'](listener);};AuthTokenProvider.prototype.removeTokenChangeListener=function(listener){this.app_['INTERNAL']['removeAuthTokenListener'](listener);};AuthTokenProvider.prototype.notifyForInvalidToken=function(){var errorMessage='Provided authentication credentials for the app named \"'+this.app_.name+'\" are invalid. This usually indicates your app was not '+'initialized correctly. ';if('credential'in this.app_.options){errorMessage+='Make sure the \"credential\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else if('serviceAccount'in this.app_.options){errorMessage+='Make sure the \"serviceAccount\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else{errorMessage+='Make sure the \"apiKey\" and \"databaseURL\" properties provided to '+'initializeApp() match the values provided for your app at '+'https://console.firebase.google.com/.';}warn(errorMessage);};return AuthTokenProvider;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */var StatsCollection=/** @class */function(){function StatsCollection(){this.counters_={};}StatsCollection.prototype.incrementCounter=function(name,amount){if(amount===void 0){amount=1;}if(!util.contains(this.counters_,name))this.counters_[name]=0;this.counters_[name]+=amount;};StatsCollection.prototype.get=function(){return util.deepCopy(this.counters_);};return StatsCollection;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var StatsManager=/** @class */function(){function StatsManager(){}StatsManager.getCollection=function(repoInfo){var hashString=repoInfo.toString();if(!this.collections_[hashString]){this.collections_[hashString]=new StatsCollection();}return this.collections_[hashString];};StatsManager.getOrCreateReporter=function(repoInfo,creatorFunction){var hashString=repoInfo.toString();if(!this.reporters_[hashString]){this.reporters_[hashString]=creatorFunction();}return this.reporters_[hashString];};StatsManager.collections_={};StatsManager.reporters_={};return StatsManager;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */var StatsListener=/** @class */function(){function StatsListener(collection_){this.collection_=collection_;this.last_=null;}StatsListener.prototype.get=function(){var newStats=this.collection_.get();var delta=util.clone(newStats);if(this.last_){util.forEach(this.last_,function(stat,value){delta[stat]=delta[stat]-value;});}this.last_=newStats;return delta;};return StatsListener;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME=10*1000;var FIRST_STATS_MAX_TIME=30*1000;// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL=5*60*1000;/**\r\n * @constructor\r\n */var StatsReporter=/** @class */function(){/**\r\n     * @param collection\r\n     * @param server_\r\n     */function StatsReporter(collection,server_){this.server_=server_;this.statsToReport_={};this.statsListener_=new StatsListener(collection);var timeout=FIRST_STATS_MIN_TIME+(FIRST_STATS_MAX_TIME-FIRST_STATS_MIN_TIME)*Math.random();setTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(timeout));}StatsReporter.prototype.includeStat=function(stat){this.statsToReport_[stat]=true;};StatsReporter.prototype.reportStats_=function(){var _this=this;var stats=this.statsListener_.get();var reportedStats={};var haveStatsToReport=false;util.forEach(stats,function(stat,value){if(value>0&&util.contains(_this.statsToReport_,stat)){reportedStats[stat]=value;haveStatsToReport=true;}});if(haveStatsToReport){this.server_.reportStats(reportedStats);}// queue our next run.\nsetTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(Math.random()*2*REPORT_STATS_INTERVAL));};return StatsReporter;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */var EventQueue=/** @class */function(){function EventQueue(){/**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */this.eventLists_=[];/**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */this.recursionDepth_=0;}/**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */EventQueue.prototype.queueEvents=function(eventDataList){// We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\nvar currList=null;for(var i=0;i<eventDataList.length;i++){var eventData=eventDataList[i];var eventPath=eventData.getPath();if(currList!==null&&!eventPath.equals(currList.getPath())){this.eventLists_.push(currList);currList=null;}if(currList===null){currList=new EventList(eventPath);}currList.add(eventData);}if(currList){this.eventLists_.push(currList);}};/**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */EventQueue.prototype.raiseEventsAtPath=function(path,eventDataList){this.queueEvents(eventDataList);this.raiseQueuedEventsMatchingPredicate_(function(eventPath){return eventPath.equals(path);});};/**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */EventQueue.prototype.raiseEventsForChangedPath=function(changedPath,eventDataList){this.queueEvents(eventDataList);this.raiseQueuedEventsMatchingPredicate_(function(eventPath){return eventPath.contains(changedPath)||changedPath.contains(eventPath);});};/**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */EventQueue.prototype.raiseQueuedEventsMatchingPredicate_=function(predicate){this.recursionDepth_++;var sentAll=true;for(var i=0;i<this.eventLists_.length;i++){var eventList=this.eventLists_[i];if(eventList){var eventPath=eventList.getPath();if(predicate(eventPath)){this.eventLists_[i].raise();this.eventLists_[i]=null;}else{sentAll=false;}}}if(sentAll){this.eventLists_=[];}this.recursionDepth_--;};return EventQueue;}();/**\r\n * @param {!Path} path\r\n * @constructor\r\n */var EventList=/** @class */function(){function EventList(path_){this.path_=path_;/**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */this.events_=[];}/**\r\n     * @param {!Event} eventData\r\n     */EventList.prototype.add=function(eventData){this.events_.push(eventData);};/**\r\n     * Iterates through the list and raises each event\r\n     */EventList.prototype.raise=function(){for(var i=0;i<this.events_.length;i++){var eventData=this.events_[i];if(eventData!==null){this.events_[i]=null;var eventFn=eventData.getEventRunner();if(logger$1){log('event: '+eventData.toString());}exceptionGuard(eventFn);}}};/**\r\n     * @return {!Path}\r\n     */EventList.prototype.getPath=function(){return this.path_;};return EventList;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */var EventEmitter=/** @class */function(){/**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */function EventEmitter(allowedEvents_){this.allowedEvents_=allowedEvents_;this.listeners_={};util.assert(Array.isArray(allowedEvents_)&&allowedEvents_.length>0,'Requires a non-empty array');}/**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */EventEmitter.prototype.trigger=function(eventType){var var_args=[];for(var _i=1;_i<arguments.length;_i++){var_args[_i-1]=arguments[_i];}if(Array.isArray(this.listeners_[eventType])){// Clone the list, since callbacks could add/remove listeners.\nvar listeners=this.listeners_[eventType].slice();for(var i=0;i<listeners.length;i++){listeners[i].callback.apply(listeners[i].context,var_args);}}};EventEmitter.prototype.on=function(eventType,callback,context){this.validateEventType_(eventType);this.listeners_[eventType]=this.listeners_[eventType]||[];this.listeners_[eventType].push({callback:callback,context:context});var eventData=this.getInitialEvent(eventType);if(eventData){callback.apply(context,eventData);}};EventEmitter.prototype.off=function(eventType,callback,context){this.validateEventType_(eventType);var listeners=this.listeners_[eventType]||[];for(var i=0;i<listeners.length;i++){if(listeners[i].callback===callback&&(!context||context===listeners[i].context)){listeners.splice(i,1);return;}}};EventEmitter.prototype.validateEventType_=function(eventType){util.assert(this.allowedEvents_.find(function(et){return et===eventType;}),'Unknown event: '+eventType);};return EventEmitter;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * @extends {EventEmitter}\r\n */var VisibilityMonitor=/** @class */function(_super){tslib_1.__extends(VisibilityMonitor,_super);function VisibilityMonitor(){var _this=_super.call(this,['visible'])||this;var hidden;var visibilityChange;if(typeof document!=='undefined'&&typeof document.addEventListener!=='undefined'){if(typeof document['hidden']!=='undefined'){// Opera 12.10 and Firefox 18 and later support\nvisibilityChange='visibilitychange';hidden='hidden';}else if(typeof document['mozHidden']!=='undefined'){visibilityChange='mozvisibilitychange';hidden='mozHidden';}else if(typeof document['msHidden']!=='undefined'){visibilityChange='msvisibilitychange';hidden='msHidden';}else if(typeof document['webkitHidden']!=='undefined'){visibilityChange='webkitvisibilitychange';hidden='webkitHidden';}}// Initially, we always assume we are visible. This ensures that in browsers\n// without page visibility support or in cases where we are never visible\n// (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n// reconnects\n_this.visible_=true;if(visibilityChange){document.addEventListener(visibilityChange,function(){var visible=!document[hidden];if(visible!==_this.visible_){_this.visible_=visible;_this.trigger('visible',visible);}},false);}return _this;}VisibilityMonitor.getInstance=function(){return new VisibilityMonitor();};/**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */VisibilityMonitor.prototype.getInitialEvent=function(eventType){util.assert(eventType==='visible','Unknown event type: '+eventType);return[this.visible_];};return VisibilityMonitor;}(EventEmitter);/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */var OnlineMonitor=/** @class */function(_super){tslib_1.__extends(OnlineMonitor,_super);function OnlineMonitor(){var _this=_super.call(this,['online'])||this;_this.online_=true;// We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n// https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n// It would seem that the 'online' event does not always fire consistently. So we disable it\n// for Cordova.\nif(typeof window!=='undefined'&&typeof window.addEventListener!=='undefined'&&!util.isMobileCordova()){window.addEventListener('online',function(){if(!_this.online_){_this.online_=true;_this.trigger('online',true);}},false);window.addEventListener('offline',function(){if(_this.online_){_this.online_=false;_this.trigger('online',false);}},false);}return _this;}OnlineMonitor.getInstance=function(){return new OnlineMonitor();};/**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */OnlineMonitor.prototype.getInitialEvent=function(eventType){util.assert(eventType==='online','Unknown event type: '+eventType);return[this.online_];};/**\r\n     * @return {boolean}\r\n     */OnlineMonitor.prototype.currentlyOnline=function(){return this.online_;};return OnlineMonitor;}(EventEmitter);/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */var PacketReceiver=/** @class */function(){/**\r\n     * @param onMessage_\r\n     */function PacketReceiver(onMessage_){this.onMessage_=onMessage_;this.pendingResponses=[];this.currentResponseNum=0;this.closeAfterResponse=-1;this.onClose=null;}PacketReceiver.prototype.closeAfter=function(responseNum,callback){this.closeAfterResponse=responseNum;this.onClose=callback;if(this.closeAfterResponse<this.currentResponseNum){this.onClose();this.onClose=null;}};/**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */PacketReceiver.prototype.handleResponse=function(requestNum,data){var _this=this;this.pendingResponses[requestNum]=data;var _loop_1=function _loop_1(){var toProcess=this_1.pendingResponses[this_1.currentResponseNum];delete this_1.pendingResponses[this_1.currentResponseNum];var _loop_2=function _loop_2(i){if(toProcess[i]){exceptionGuard(function(){_this.onMessage_(toProcess[i]);});}};for(var i=0;i<toProcess.length;++i){_loop_2(i);}if(this_1.currentResponseNum===this_1.closeAfterResponse){if(this_1.onClose){this_1.onClose();this_1.onClose=null;}return\"break\";}this_1.currentResponseNum++;};var this_1=this;while(this.pendingResponses[this.currentResponseNum]){var state_1=_loop_1();if(state_1===\"break\")break;}};return PacketReceiver;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */// URL query parameters associated with longpolling\nvar FIREBASE_LONGPOLL_START_PARAM='start';var FIREBASE_LONGPOLL_CLOSE_COMMAND='close';var FIREBASE_LONGPOLL_COMMAND_CB_NAME='pLPCommand';var FIREBASE_LONGPOLL_DATA_CB_NAME='pRTLPCB';var FIREBASE_LONGPOLL_ID_PARAM='id';var FIREBASE_LONGPOLL_PW_PARAM='pw';var FIREBASE_LONGPOLL_SERIAL_PARAM='ser';var FIREBASE_LONGPOLL_CALLBACK_ID_PARAM='cb';var FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM='seg';var FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET='ts';var FIREBASE_LONGPOLL_DATA_PARAM='d';var FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM='disconn';var FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM='dframe';//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE=1870;var SEG_HEADER_SIZE=30;//ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE=MAX_URL_DATA_SIZE-SEG_HEADER_SIZE;/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */var KEEPALIVE_REQUEST_INTERVAL=25000;/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */var LP_CONNECT_TIMEOUT=30000;/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */var BrowserPollConnection=/** @class */function(){/**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */function BrowserPollConnection(connId,repoInfo,transportSessionId,lastSessionId){this.connId=connId;this.repoInfo=repoInfo;this.transportSessionId=transportSessionId;this.lastSessionId=lastSessionId;this.bytesSent=0;this.bytesReceived=0;this.everConnected_=false;this.log_=logWrapper(connId);this.stats_=StatsManager.getCollection(repoInfo);this.urlFn=function(params){return repoInfo.connectionURL(LONG_POLLING,params);};}/**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */BrowserPollConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.curSegmentNum=0;this.onDisconnect_=onDisconnect;this.myPacketOrderer=new PacketReceiver(onMessage);this.isClosed_=false;this.connectTimeoutTimer_=setTimeout(function(){_this.log_('Timed out trying to connect.');// Make sure we clear the host cache\n_this.onClosed_();_this.connectTimeoutTimer_=null;},Math.floor(LP_CONNECT_TIMEOUT));// Ensure we delay the creation of the iframe until the DOM is loaded.\nexecuteWhenDOMReady(function(){if(_this.isClosed_)return;//Set up a callback that gets triggered once a connection is set up.\n_this.scriptTagHolder=new FirebaseIFrameScriptHolder(function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var command=args[0],arg1=args[1],arg2=args[2];_this.incrementIncomingBytes_(args);if(!_this.scriptTagHolder)return;// we closed the connection.\nif(_this.connectTimeoutTimer_){clearTimeout(_this.connectTimeoutTimer_);_this.connectTimeoutTimer_=null;}_this.everConnected_=true;if(command==FIREBASE_LONGPOLL_START_PARAM){_this.id=arg1;_this.password=arg2;}else if(command===FIREBASE_LONGPOLL_CLOSE_COMMAND){// Don't clear the host cache. We got a response from the server, so we know it's reachable\nif(arg1){// We aren't expecting any more data (other than what the server's already in the process of sending us\n// through our already open polls), so don't send any more.\n_this.scriptTagHolder.sendNewPolls=false;// arg1 in this case is the last response number sent by the server. We should try to receive\n// all of the responses up to this one before closing\n_this.myPacketOrderer.closeAfter(arg1,function(){_this.onClosed_();});}else{_this.onClosed_();}}else{throw new Error('Unrecognized command received: '+command);}},function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var pN=args[0],data=args[1];_this.incrementIncomingBytes_(args);_this.myPacketOrderer.handleResponse(pN,data);},function(){_this.onClosed_();},_this.urlFn);//Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n//from cache.\nvar urlParams={};urlParams[FIREBASE_LONGPOLL_START_PARAM]='t';urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=Math.floor(Math.random()*100000000);if(_this.scriptTagHolder.uniqueCallbackIdentifier)urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM]=_this.scriptTagHolder.uniqueCallbackIdentifier;urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(_this.transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=_this.transportSessionId;}if(_this.lastSessionId){urlParams[LAST_SESSION_PARAM]=_this.lastSessionId;}if(!util.isNodeSdk()&&typeof location!=='undefined'&&location.href&&location.href.indexOf(FORGE_DOMAIN)!==-1){urlParams[REFERER_PARAM]=FORGE_REF;}var connectURL=_this.urlFn(urlParams);_this.log_('Connecting via long-poll to '+connectURL);_this.scriptTagHolder.addTag(connectURL,function(){/* do nothing */});});};/**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */BrowserPollConnection.prototype.start=function(){this.scriptTagHolder.startLongPoll(this.id,this.password);this.addDisconnectPingFrame(this.id,this.password);};/**\r\n     * Forces long polling to be considered as a potential transport\r\n     */BrowserPollConnection.forceAllow=function(){BrowserPollConnection.forceAllow_=true;};/**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */BrowserPollConnection.forceDisallow=function(){BrowserPollConnection.forceDisallow_=true;};// Static method, use string literal so it can be accessed in a generic way\nBrowserPollConnection.isAvailable=function(){// NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n// the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\nreturn BrowserPollConnection.forceAllow_||!BrowserPollConnection.forceDisallow_&&typeof document!=='undefined'&&document.createElement!=null&&!isChromeExtensionContentScript()&&!isWindowsStoreApp()&&!util.isNodeSdk();};/**\r\n     * No-op for polling\r\n     */BrowserPollConnection.prototype.markConnectionHealthy=function(){};/**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */BrowserPollConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.scriptTagHolder){this.scriptTagHolder.close();this.scriptTagHolder=null;}//remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\nif(this.myDisconnFrame){document.body.removeChild(this.myDisconnFrame);this.myDisconnFrame=null;}if(this.connectTimeoutTimer_){clearTimeout(this.connectTimeoutTimer_);this.connectTimeoutTimer_=null;}};/**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */BrowserPollConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('Longpoll is closing itself');this.shutdown_();if(this.onDisconnect_){this.onDisconnect_(this.everConnected_);this.onDisconnect_=null;}}};/**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */BrowserPollConnection.prototype.close=function(){if(!this.isClosed_){this.log_('Longpoll is being closed.');this.shutdown_();}};/**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */BrowserPollConnection.prototype.send=function(data){var dataStr=util.stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//first, lets get the base64-encoded data\nvar base64data=util.base64Encode(dataStr);//We can only fit a certain amount in each URL, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(base64data,MAX_PAYLOAD_SIZE);//Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n//of segments so that we can reassemble the packet on the server.\nfor(var i=0;i<dataSegs.length;i++){this.scriptTagHolder.enqueueSegment(this.curSegmentNum,dataSegs.length,dataSegs[i]);this.curSegmentNum++;}};/**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */BrowserPollConnection.prototype.addDisconnectPingFrame=function(id,pw){if(util.isNodeSdk())return;this.myDisconnFrame=document.createElement('iframe');var urlParams={};urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM]='t';urlParams[FIREBASE_LONGPOLL_ID_PARAM]=id;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=pw;this.myDisconnFrame.src=this.urlFn(urlParams);this.myDisconnFrame.style.display='none';document.body.appendChild(this.myDisconnFrame);};/**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */BrowserPollConnection.prototype.incrementIncomingBytes_=function(args){// TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\nvar bytesReceived=util.stringify(args).length;this.bytesReceived+=bytesReceived;this.stats_.incrementCounter('bytes_received',bytesReceived);};return BrowserPollConnection;}();/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/var FirebaseIFrameScriptHolder=/** @class */function(){/**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */function FirebaseIFrameScriptHolder(commandCB,onMessageCB,onDisconnect,urlFn){this.onDisconnect=onDisconnect;this.urlFn=urlFn;//We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n//problems in some browsers.\n/**\r\n         * @type {CountedSet.<number, number>}\r\n         */this.outstandingRequests=new CountedSet();//A queue of the pending segments waiting for transmission to the server.\nthis.pendingSegs=[];//A serial number. We use this for two things:\n// 1) A way to ensure the browser doesn't cache responses to polls\n// 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n//    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n//    JSONP code in the order it was added to the iframe.\nthis.currentSerial=Math.floor(Math.random()*100000000);// This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n// incoming data from the server that we're waiting for).\nthis.sendNewPolls=true;if(!util.isNodeSdk()){//Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n//iframes where we put the long-polling script tags. We have two callbacks:\n//   1) Command Callback - Triggered for control issues, like starting a connection.\n//   2) Message Callback - Triggered when new data arrives.\nthis.uniqueCallbackIdentifier=LUIDGenerator();window[FIREBASE_LONGPOLL_COMMAND_CB_NAME+this.uniqueCallbackIdentifier]=commandCB;window[FIREBASE_LONGPOLL_DATA_CB_NAME+this.uniqueCallbackIdentifier]=onMessageCB;//Create an iframe for us to add script tags to.\nthis.myIFrame=FirebaseIFrameScriptHolder.createIFrame_();// Set the iframe's contents.\nvar script='';// if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n// for ie9, but ie8 needs to do it again in the document itself.\nif(this.myIFrame.src&&this.myIFrame.src.substr(0,'javascript:'.length)==='javascript:'){var currentDomain=document.domain;script='<script>document.domain=\"'+currentDomain+'\";</script>';}var iframeContents='<html><body>'+script+'</body></html>';try{this.myIFrame.doc.open();this.myIFrame.doc.write(iframeContents);this.myIFrame.doc.close();}catch(e){log('frame writing exception');if(e.stack){log(e.stack);}log(e);}}else{this.commandCB=commandCB;this.onMessageCB=onMessageCB;}}/**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */FirebaseIFrameScriptHolder.createIFrame_=function(){var iframe=document.createElement('iframe');iframe.style.display='none';// This is necessary in order to initialize the document inside the iframe\nif(document.body){document.body.appendChild(iframe);try{// If document.domain has been modified in IE, this will throw an error, and we need to set the\n// domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n// Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\nvar a=iframe.contentWindow.document;if(!a){// Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\nlog('No IE domain setting required');}}catch(e){var domain=document.domain;iframe.src=\"javascript:void((function(){document.open();document.domain='\"+domain+\"';document.close();})())\";}}else{// LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n// never gets hit.\nthrow'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';}// Get the document of the iframe in a browser-specific way.\nif(iframe.contentDocument){iframe.doc=iframe.contentDocument;// Firefox, Opera, Safari\n}else if(iframe.contentWindow){iframe.doc=iframe.contentWindow.document;// Internet Explorer\n}else if(iframe.document){iframe.doc=iframe.document;//others?\n}return iframe;};/**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */FirebaseIFrameScriptHolder.prototype.close=function(){var _this=this;//Mark this iframe as dead, so no new requests are sent.\nthis.alive=false;if(this.myIFrame){//We have to actually remove all of the html inside this iframe before removing it from the\n//window, or IE will continue loading and executing the script tags we've already added, which\n//can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\nthis.myIFrame.doc.body.innerHTML='';setTimeout(function(){if(_this.myIFrame!==null){document.body.removeChild(_this.myIFrame);_this.myIFrame=null;}},Math.floor(0));}if(util.isNodeSdk()&&this.myID){var urlParams={};urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM]='t';urlParams[FIREBASE_LONGPOLL_ID_PARAM]=this.myID;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=this.myPW;var theURL=this.urlFn(urlParams);FirebaseIFrameScriptHolder.nodeRestRequest(theURL);}// Protect from being called recursively.\nvar onDisconnect=this.onDisconnect;if(onDisconnect){this.onDisconnect=null;onDisconnect();}};/**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */FirebaseIFrameScriptHolder.prototype.startLongPoll=function(id,pw){this.myID=id;this.myPW=pw;this.alive=true;//send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\nwhile(this.newRequest_()){}};/**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */FirebaseIFrameScriptHolder.prototype.newRequest_=function(){// We keep one outstanding request open all the time to receive data, but if we need to send data\n// (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n// close the old request.\nif(this.alive&&this.sendNewPolls&&this.outstandingRequests.count()<(this.pendingSegs.length>0?2:1)){//construct our url\nthis.currentSerial++;var urlParams={};urlParams[FIREBASE_LONGPOLL_ID_PARAM]=this.myID;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=this.myPW;urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=this.currentSerial;var theURL=this.urlFn(urlParams);//Now add as much data as we can.\nvar curDataString='';var i=0;while(this.pendingSegs.length>0){//first, lets see if the next segment will fit.\nvar nextSeg=this.pendingSegs[0];if(nextSeg.d.length+SEG_HEADER_SIZE+curDataString.length<=MAX_URL_DATA_SIZE){//great, the segment will fit. Lets append it.\nvar theSeg=this.pendingSegs.shift();curDataString=curDataString+'&'+FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM+i+'='+theSeg.seg+'&'+FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET+i+'='+theSeg.ts+'&'+FIREBASE_LONGPOLL_DATA_PARAM+i+'='+theSeg.d;i++;}else{break;}}theURL=theURL+curDataString;this.addLongPollTag_(theURL,this.currentSerial);return true;}else{return false;}};/**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */FirebaseIFrameScriptHolder.prototype.enqueueSegment=function(segnum,totalsegs,data){//add this to the queue of segments to send.\nthis.pendingSegs.push({seg:segnum,ts:totalsegs,d:data});//send the data immediately if there isn't already data being transmitted, unless\n//startLongPoll hasn't been called yet.\nif(this.alive){this.newRequest_();}};/**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */FirebaseIFrameScriptHolder.prototype.addLongPollTag_=function(url,serial){var _this=this;//remember that we sent this request.\nthis.outstandingRequests.add(serial,1);var doNewRequest=function doNewRequest(){_this.outstandingRequests.remove(serial);_this.newRequest_();};// If this request doesn't return on its own accord (by the server sending us some data), we'll\n// create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\nvar keepaliveTimeout=setTimeout(doNewRequest,Math.floor(KEEPALIVE_REQUEST_INTERVAL));var readyStateCB=function readyStateCB(){// Request completed.  Cancel the keepalive.\nclearTimeout(keepaliveTimeout);// Trigger a new request so we can continue receiving data.\ndoNewRequest();};this.addTag(url,readyStateCB);};/**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */FirebaseIFrameScriptHolder.prototype.addTag=function(url,loadCB){var _this=this;if(util.isNodeSdk()){this.doNodeLongPoll(url,loadCB);}else{setTimeout(function(){try{// if we're already closed, don't add this poll\nif(!_this.sendNewPolls)return;var newScript_1=_this.myIFrame.doc.createElement('script');newScript_1.type='text/javascript';newScript_1.async=true;newScript_1.src=url;newScript_1.onload=newScript_1.onreadystatechange=function(){var rstate=newScript_1.readyState;if(!rstate||rstate==='loaded'||rstate==='complete'){newScript_1.onload=newScript_1.onreadystatechange=null;if(newScript_1.parentNode){newScript_1.parentNode.removeChild(newScript_1);}loadCB();}};newScript_1.onerror=function(){log('Long-poll script failed to load: '+url);_this.sendNewPolls=false;_this.close();};_this.myIFrame.doc.body.appendChild(newScript_1);}catch(e){// TODO: we should make this error visible somehow\n}},Math.floor(1));}};return FirebaseIFrameScriptHolder;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var WEBSOCKET_MAX_FRAME_SIZE=16384;var WEBSOCKET_KEEPALIVE_INTERVAL=45000;var WebSocketImpl=null;if(typeof MozWebSocket!=='undefined'){WebSocketImpl=MozWebSocket;}else if(typeof WebSocket!=='undefined'){WebSocketImpl=WebSocket;}/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */var WebSocketConnection=/** @class */function(){/**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */function WebSocketConnection(connId,repoInfo,transportSessionId,lastSessionId){this.connId=connId;this.keepaliveTimer=null;this.frames=null;this.totalFrames=0;this.bytesSent=0;this.bytesReceived=0;this.log_=logWrapper(this.connId);this.stats_=StatsManager.getCollection(repoInfo);this.connURL=WebSocketConnection.connectionURL_(repoInfo,transportSessionId,lastSessionId);}/**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */WebSocketConnection.connectionURL_=function(repoInfo,transportSessionId,lastSessionId){var urlParams={};urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(!util.isNodeSdk()&&typeof location!=='undefined'&&location.href&&location.href.indexOf(FORGE_DOMAIN)!==-1){urlParams[REFERER_PARAM]=FORGE_REF;}if(transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=transportSessionId;}if(lastSessionId){urlParams[LAST_SESSION_PARAM]=lastSessionId;}return repoInfo.connectionURL(WEBSOCKET,urlParams);};/**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */WebSocketConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.onDisconnect=onDisconnect;this.onMessage=onMessage;this.log_('Websocket connecting to '+this.connURL);this.everConnected_=false;// Assume failure until proven otherwise.\nPersistentStorage.set('previous_websocket_failure',true);try{if(util.isNodeSdk()){var device=util.CONSTANTS.NODE_ADMIN?'AdminNode':'Node';// UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\nvar options={headers:{'User-Agent':\"Firebase/\"+PROTOCOL_VERSION+\"/\"+firebase.SDK_VERSION+\"/\"+process.platform+\"/\"+device}};// Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\nvar env=process['env'];var proxy=this.connURL.indexOf('wss://')==0?env['HTTPS_PROXY']||env['https_proxy']:env['HTTP_PROXY']||env['http_proxy'];if(proxy){options['proxy']={origin:proxy};}this.mySock=new WebSocketImpl(this.connURL,[],options);}else{this.mySock=new WebSocketImpl(this.connURL);}}catch(e){this.log_('Error instantiating WebSocket.');var error$$1=e.message||e.data;if(error$$1){this.log_(error$$1);}this.onClosed_();return;}this.mySock.onopen=function(){_this.log_('Websocket connected.');_this.everConnected_=true;};this.mySock.onclose=function(){_this.log_('Websocket connection was disconnected.');_this.mySock=null;_this.onClosed_();};this.mySock.onmessage=function(m){_this.handleIncomingFrame(m);};this.mySock.onerror=function(e){_this.log_('WebSocket error.  Closing connection.');var error$$1=e.message||e.data;if(error$$1){_this.log_(error$$1);}_this.onClosed_();};};/**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */WebSocketConnection.prototype.start=function(){};WebSocketConnection.forceDisallow=function(){WebSocketConnection.forceDisallow_=true;};WebSocketConnection.isAvailable=function(){var isOldAndroid=false;if(typeof navigator!=='undefined'&&navigator.userAgent){var oldAndroidRegex=/Android ([0-9]{0,}\\.[0-9]{0,})/;var oldAndroidMatch=navigator.userAgent.match(oldAndroidRegex);if(oldAndroidMatch&&oldAndroidMatch.length>1){if(parseFloat(oldAndroidMatch[1])<4.4){isOldAndroid=true;}}}return!isOldAndroid&&WebSocketImpl!==null&&!WebSocketConnection.forceDisallow_;};/**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */WebSocketConnection.previouslyFailed=function(){// If our persistent storage is actually only in-memory storage,\n// we default to assuming that it previously failed to be safe.\nreturn PersistentStorage.isInMemoryStorage||PersistentStorage.get('previous_websocket_failure')===true;};WebSocketConnection.prototype.markConnectionHealthy=function(){PersistentStorage.remove('previous_websocket_failure');};WebSocketConnection.prototype.appendFrame_=function(data){this.frames.push(data);if(this.frames.length==this.totalFrames){var fullMess=this.frames.join('');this.frames=null;var jsonMess=util.jsonEval(fullMess);//handle the message\nthis.onMessage(jsonMess);}};/**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */WebSocketConnection.prototype.handleNewFrameCount_=function(frameCount){this.totalFrames=frameCount;this.frames=[];};/**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */WebSocketConnection.prototype.extractFrameCount_=function(data){util.assert(this.frames===null,'We already have a frame buffer');// TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n// currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\nif(data.length<=6){var frameCount=Number(data);if(!isNaN(frameCount)){this.handleNewFrameCount_(frameCount);return null;}}this.handleNewFrameCount_(1);return data;};/**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */WebSocketConnection.prototype.handleIncomingFrame=function(mess){if(this.mySock===null)return;// Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\nvar data=mess['data'];this.bytesReceived+=data.length;this.stats_.incrementCounter('bytes_received',data.length);this.resetKeepAlive();if(this.frames!==null){// we're buffering\nthis.appendFrame_(data);}else{// try to parse out a frame count, otherwise, assume 1 and process it\nvar remainingData=this.extractFrameCount_(data);if(remainingData!==null){this.appendFrame_(remainingData);}}};/**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */WebSocketConnection.prototype.send=function(data){this.resetKeepAlive();var dataStr=util.stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//We can only fit a certain amount in each websocket frame, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(dataStr,WEBSOCKET_MAX_FRAME_SIZE);//Send the length header\nif(dataSegs.length>1){this.sendString_(String(dataSegs.length));}//Send the actual data in segments.\nfor(var i=0;i<dataSegs.length;i++){this.sendString_(dataSegs[i]);}};WebSocketConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.keepaliveTimer){clearInterval(this.keepaliveTimer);this.keepaliveTimer=null;}if(this.mySock){this.mySock.close();this.mySock=null;}};WebSocketConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('WebSocket is closing itself');this.shutdown_();// since this is an internal close, trigger the close listener\nif(this.onDisconnect){this.onDisconnect(this.everConnected_);this.onDisconnect=null;}}};/**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */WebSocketConnection.prototype.close=function(){if(!this.isClosed_){this.log_('WebSocket is being closed');this.shutdown_();}};/**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */WebSocketConnection.prototype.resetKeepAlive=function(){var _this=this;clearInterval(this.keepaliveTimer);this.keepaliveTimer=setInterval(function(){//If there has been no websocket activity for a while, send a no-op\nif(_this.mySock){_this.sendString_('0');}_this.resetKeepAlive();},Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));};/**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */WebSocketConnection.prototype.sendString_=function(str){// Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n// calls for some unknown reason.  We treat these as an error and disconnect.\n// See https://app.asana.com/0/58926111402292/68021340250410\ntry{this.mySock.send(str);}catch(e){this.log_('Exception thrown from WebSocket.send():',e.message||e.data,'Closing connection.');setTimeout(this.onClosed_.bind(this),0);}};/**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */WebSocketConnection.responsesRequiredToBeHealthy=2;/**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */WebSocketConnection.healthyTimeout=30000;return WebSocketConnection;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */var TransportManager=/** @class */function(){/**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */function TransportManager(repoInfo){this.initTransports_(repoInfo);}Object.defineProperty(TransportManager,\"ALL_TRANSPORTS\",{/**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */get:function get(){return[BrowserPollConnection,WebSocketConnection];},enumerable:true,configurable:true});/**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */TransportManager.prototype.initTransports_=function(repoInfo){var isWebSocketsAvailable=WebSocketConnection&&WebSocketConnection['isAvailable']();var isSkipPollConnection=isWebSocketsAvailable&&!WebSocketConnection.previouslyFailed();if(repoInfo.webSocketOnly){if(!isWebSocketsAvailable)warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");isSkipPollConnection=true;}if(isSkipPollConnection){this.transports_=[WebSocketConnection];}else{var transports_1=this.transports_=[];each(TransportManager.ALL_TRANSPORTS,function(i,transport){if(transport&&transport['isAvailable']()){transports_1.push(transport);}});}};/**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */TransportManager.prototype.initialTransport=function(){if(this.transports_.length>0){return this.transports_[0];}else{throw new Error('No transports available');}};/**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */TransportManager.prototype.upgradeTransport=function(){if(this.transports_.length>1){return this.transports_[1];}else{return null;}};return TransportManager;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */// Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT=60000;// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS=5000;// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE=10*1024;var BYTES_RECEIVED_HEALTHY_OVERRIDE=100*1024;var MESSAGE_TYPE='t';var MESSAGE_DATA='d';var CONTROL_SHUTDOWN='s';var CONTROL_RESET='r';var CONTROL_ERROR='e';var CONTROL_PONG='o';var SWITCH_ACK='a';var END_TRANSMISSION='n';var PING='p';var SERVER_HELLO='h';/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */var Connection=/** @class */function(){/**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */function Connection(id,repoInfo_,onMessage_,onReady_,onDisconnect_,onKill_,lastSessionId){this.id=id;this.repoInfo_=repoInfo_;this.onMessage_=onMessage_;this.onReady_=onReady_;this.onDisconnect_=onDisconnect_;this.onKill_=onKill_;this.lastSessionId=lastSessionId;this.connectionCount=0;this.pendingDataMessages=[];this.state_=0/* CONNECTING */;this.log_=logWrapper('c:'+this.id+':');this.transportManager_=new TransportManager(repoInfo_);this.log_('Connection created');this.start_();}/**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */Connection.prototype.start_=function(){var _this=this;var conn=this.transportManager_.initialTransport();this.conn_=new conn(this.nextTransportId_(),this.repoInfo_,undefined,this.lastSessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.primaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessageReceived=this.connReceiver_(this.conn_);var onConnectionLost=this.disconnReceiver_(this.conn_);this.tx_=this.conn_;this.rx_=this.conn_;this.secondaryConn_=null;this.isHealthy_=false;/*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */setTimeout(function(){// this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n_this.conn_&&_this.conn_.open(onMessageReceived,onConnectionLost);},Math.floor(0));var healthyTimeout_ms=conn['healthyTimeout']||0;if(healthyTimeout_ms>0){this.healthyTimeout_=setTimeoutNonBlocking(function(){_this.healthyTimeout_=null;if(!_this.isHealthy_){if(_this.conn_&&_this.conn_.bytesReceived>BYTES_RECEIVED_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has received '+_this.conn_.bytesReceived+' bytes.  Marking connection healthy.');_this.isHealthy_=true;_this.conn_.markConnectionHealthy();}else if(_this.conn_&&_this.conn_.bytesSent>BYTES_SENT_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has sent '+_this.conn_.bytesSent+' bytes.  Leaving connection alive.');// NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n// the server.\n}else{_this.log_('Closing unhealthy connection after timeout.');_this.close();}}},Math.floor(healthyTimeout_ms));}};/**\r\n     * @return {!string}\r\n     * @private\r\n     */Connection.prototype.nextTransportId_=function(){return'c:'+this.id+':'+this.connectionCount++;};Connection.prototype.disconnReceiver_=function(conn){var _this=this;return function(everConnected){if(conn===_this.conn_){_this.onConnectionLost_(everConnected);}else if(conn===_this.secondaryConn_){_this.log_('Secondary connection lost.');_this.onSecondaryConnectionLost_();}else{_this.log_('closing an old connection');}};};Connection.prototype.connReceiver_=function(conn){var _this=this;return function(message){if(_this.state_!=2/* DISCONNECTED */){if(conn===_this.rx_){_this.onPrimaryMessageReceived_(message);}else if(conn===_this.secondaryConn_){_this.onSecondaryMessageReceived_(message);}else{_this.log_('message on old connection');}}};};/**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */Connection.prototype.sendRequest=function(dataMsg){// wrap in a data message envelope and send it on\nvar msg={t:'d',d:dataMsg};this.sendData_(msg);};Connection.prototype.tryCleanupConnection=function(){if(this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_){this.log_('cleaning up and promoting a connection: '+this.secondaryConn_.connId);this.conn_=this.secondaryConn_;this.secondaryConn_=null;// the server will shutdown the old connection\n}};Connection.prototype.onSecondaryControl_=function(controlData){if(MESSAGE_TYPE in controlData){var cmd=controlData[MESSAGE_TYPE];if(cmd===SWITCH_ACK){this.upgradeIfSecondaryHealthy_();}else if(cmd===CONTROL_RESET){// Most likely the session wasn't valid. Abandon the switch attempt\nthis.log_('Got a reset on secondary, closing it');this.secondaryConn_.close();// If we were already using this connection for something, than we need to fully close\nif(this.tx_===this.secondaryConn_||this.rx_===this.secondaryConn_){this.close();}}else if(cmd===CONTROL_PONG){this.log_('got pong on secondary.');this.secondaryResponsesRequired_--;this.upgradeIfSecondaryHealthy_();}}};Connection.prototype.onSecondaryMessageReceived_=function(parsedData){var layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer=='c'){this.onSecondaryControl_(data);}else if(layer=='d'){// got a data message, but we're still second connection. Need to buffer it up\nthis.pendingDataMessages.push(data);}else{throw new Error('Unknown protocol layer: '+layer);}};Connection.prototype.upgradeIfSecondaryHealthy_=function(){if(this.secondaryResponsesRequired_<=0){this.log_('Secondary connection is healthy.');this.isHealthy_=true;this.secondaryConn_.markConnectionHealthy();this.proceedWithUpgrade_();}else{// Send a ping to make sure the connection is healthy.\nthis.log_('sending ping on secondary.');this.secondaryConn_.send({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.proceedWithUpgrade_=function(){// tell this connection to consider itself open\nthis.secondaryConn_.start();// send ack\nthis.log_('sending client ack on secondary');this.secondaryConn_.send({t:'c',d:{t:SWITCH_ACK,d:{}}});// send end packet on primary transport, switch to sending on this one\n// can receive on this one, buffer responses until end received on primary transport\nthis.log_('Ending transmission on primary');this.conn_.send({t:'c',d:{t:END_TRANSMISSION,d:{}}});this.tx_=this.secondaryConn_;this.tryCleanupConnection();};Connection.prototype.onPrimaryMessageReceived_=function(parsedData){// Must refer to parsedData properties in quotes, so closure doesn't touch them.\nvar layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer=='c'){this.onControl_(data);}else if(layer=='d'){this.onDataMessage_(data);}};Connection.prototype.onDataMessage_=function(message){this.onPrimaryResponse_();// We don't do anything with data messages, just kick them up a level\nthis.onMessage_(message);};Connection.prototype.onPrimaryResponse_=function(){if(!this.isHealthy_){this.primaryResponsesRequired_--;if(this.primaryResponsesRequired_<=0){this.log_('Primary connection is healthy.');this.isHealthy_=true;this.conn_.markConnectionHealthy();}}};Connection.prototype.onControl_=function(controlData){var cmd=requireKey(MESSAGE_TYPE,controlData);if(MESSAGE_DATA in controlData){var payload=controlData[MESSAGE_DATA];if(cmd===SERVER_HELLO){this.onHandshake_(payload);}else if(cmd===END_TRANSMISSION){this.log_('recvd end transmission on primary');this.rx_=this.secondaryConn_;for(var i=0;i<this.pendingDataMessages.length;++i){this.onDataMessage_(this.pendingDataMessages[i]);}this.pendingDataMessages=[];this.tryCleanupConnection();}else if(cmd===CONTROL_SHUTDOWN){// This was previously the 'onKill' callback passed to the lower-level connection\n// payload in this case is the reason for the shutdown. Generally a human-readable error\nthis.onConnectionShutdown_(payload);}else if(cmd===CONTROL_RESET){// payload in this case is the host we should contact\nthis.onReset_(payload);}else if(cmd===CONTROL_ERROR){error('Server Error: '+payload);}else if(cmd===CONTROL_PONG){this.log_('got pong on primary.');this.onPrimaryResponse_();this.sendPingOnPrimaryIfNecessary_();}else{error('Unknown control packet command: '+cmd);}}};/**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */Connection.prototype.onHandshake_=function(handshake){var timestamp=handshake.ts;var version=handshake.v;var host=handshake.h;this.sessionId=handshake.s;this.repoInfo_.updateHost(host);// if we've already closed the connection, then don't bother trying to progress further\nif(this.state_==0/* CONNECTING */){this.conn_.start();this.onConnectionEstablished_(this.conn_,timestamp);if(PROTOCOL_VERSION!==version){warn('Protocol version mismatch detected');}// TODO: do we want to upgrade? when? maybe a delay?\nthis.tryStartUpgrade_();}};Connection.prototype.tryStartUpgrade_=function(){var conn=this.transportManager_.upgradeTransport();if(conn){this.startUpgrade_(conn);}};Connection.prototype.startUpgrade_=function(conn){var _this=this;this.secondaryConn_=new conn(this.nextTransportId_(),this.repoInfo_,this.sessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.secondaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessage=this.connReceiver_(this.secondaryConn_);var onDisconnect=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(onMessage,onDisconnect);// If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\nsetTimeoutNonBlocking(function(){if(_this.secondaryConn_){_this.log_('Timed out trying to upgrade.');_this.secondaryConn_.close();}},Math.floor(UPGRADE_TIMEOUT));};Connection.prototype.onReset_=function(host){this.log_('Reset packet received.  New host: '+host);this.repoInfo_.updateHost(host);// TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n// We don't currently support resets after the connection has already been established\nif(this.state_===1/* CONNECTED */){this.close();}else{// Close whatever connections we have open and start again.\nthis.closeConnections_();this.start_();}};Connection.prototype.onConnectionEstablished_=function(conn,timestamp){var _this=this;this.log_('Realtime connection established.');this.conn_=conn;this.state_=1/* CONNECTED */;if(this.onReady_){this.onReady_(timestamp,this.sessionId);this.onReady_=null;}// If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n// send some pings.\nif(this.primaryResponsesRequired_===0){this.log_('Primary connection is healthy.');this.isHealthy_=true;}else{setTimeoutNonBlocking(function(){_this.sendPingOnPrimaryIfNecessary_();},Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));}};Connection.prototype.sendPingOnPrimaryIfNecessary_=function(){// If the connection isn't considered healthy yet, we'll send a noop ping packet request.\nif(!this.isHealthy_&&this.state_===1/* CONNECTED */){this.log_('sending ping on primary.');this.sendData_({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.onSecondaryConnectionLost_=function(){var conn=this.secondaryConn_;this.secondaryConn_=null;if(this.tx_===conn||this.rx_===conn){// we are relying on this connection already in some capacity. Therefore, a failure is real\nthis.close();}};/**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */Connection.prototype.onConnectionLost_=function(everConnected){this.conn_=null;// NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n// called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\nif(!everConnected&&this.state_===0/* CONNECTING */){this.log_('Realtime connection failed.');// Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\nif(this.repoInfo_.isCacheableHost()){PersistentStorage.remove('host:'+this.repoInfo_.host);// reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\nthis.repoInfo_.internalHost=this.repoInfo_.host;}}else if(this.state_===1/* CONNECTED */){this.log_('Realtime connection lost.');}this.close();};/**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */Connection.prototype.onConnectionShutdown_=function(reason){this.log_('Connection shutdown command received. Shutting down...');if(this.onKill_){this.onKill_(reason);this.onKill_=null;}// We intentionally don't want to fire onDisconnect (kill is a different case),\n// so clear the callback.\nthis.onDisconnect_=null;this.close();};Connection.prototype.sendData_=function(data){if(this.state_!==1/* CONNECTED */){throw'Connection is not connected';}else{this.tx_.send(data);}};/**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */Connection.prototype.close=function(){if(this.state_!==2/* DISCONNECTED */){this.log_('Closing realtime connection.');this.state_=2/* DISCONNECTED */;this.closeConnections_();if(this.onDisconnect_){this.onDisconnect_();this.onDisconnect_=null;}}};/**\r\n     *\r\n     * @private\r\n     */Connection.prototype.closeConnections_=function(){this.log_('Shutting down all connections');if(this.conn_){this.conn_.close();this.conn_=null;}if(this.secondaryConn_){this.secondaryConn_.close();this.secondaryConn_=null;}if(this.healthyTimeout_){clearTimeout(this.healthyTimeout_);this.healthyTimeout_=null;}};return Connection;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */var ServerActions=/** @class */function(){function ServerActions(){}/**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */ServerActions.prototype.put=function(pathString,data,onComplete,hash){};/**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */ServerActions.prototype.merge=function(pathString,data,onComplete,hash){};/**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */ServerActions.prototype.refreshAuthToken=function(token){};/**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */ServerActions.prototype.onDisconnectPut=function(pathString,data,onComplete){};/**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */ServerActions.prototype.onDisconnectMerge=function(pathString,data,onComplete){};/**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */ServerActions.prototype.onDisconnectCancel=function(pathString,onComplete){};/**\r\n     * @param {Object.<string, *>} stats\r\n     */ServerActions.prototype.reportStats=function(stats){};return ServerActions;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var RECONNECT_MIN_DELAY=1000;var RECONNECT_MAX_DELAY_DEFAULT=60*5*1000;// 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS=30*1000;// 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER=1.3;var RECONNECT_DELAY_RESET_TIMEOUT=30000;// Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON='server_kill';// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD=3;/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */var PersistentConnection=/** @class */function(_super){tslib_1.__extends(PersistentConnection,_super);/**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */function PersistentConnection(repoInfo_,onDataUpdate_,onConnectStatus_,onServerInfoUpdate_,authTokenProvider_,authOverride_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.onDataUpdate_=onDataUpdate_;_this.onConnectStatus_=onConnectStatus_;_this.onServerInfoUpdate_=onServerInfoUpdate_;_this.authTokenProvider_=authTokenProvider_;_this.authOverride_=authOverride_;// Used for diagnostic logging.\n_this.id=PersistentConnection.nextPersistentConnectionId_++;_this.log_=logWrapper('p:'+_this.id+':');/** @private {Object} */_this.interruptReasons_={};_this.listens_={};_this.outstandingPuts_=[];_this.outstandingPutCount_=0;_this.onDisconnectRequestQueue_=[];_this.connected_=false;_this.reconnectDelay_=RECONNECT_MIN_DELAY;_this.maxReconnectDelay_=RECONNECT_MAX_DELAY_DEFAULT;_this.securityDebugCallback_=null;_this.lastSessionId=null;/** @private {number|null} */_this.establishConnectionTimer_=null;/** @private {boolean} */_this.visible_=false;// Before we get connected, we keep a queue of pending messages to send.\n_this.requestCBHash_={};_this.requestNumber_=0;/** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */_this.realtime_=null;/** @private {string|null} */_this.authToken_=null;_this.forceTokenRefresh_=false;_this.invalidAuthTokenCount_=0;_this.firstConnection_=true;_this.lastConnectionAttemptTime_=null;_this.lastConnectionEstablishedTime_=null;if(authOverride_&&!util.isNodeSdk()){throw new Error('Auth override specified in options, but not supported on non Node.js platforms');}_this.scheduleConnect_(0);VisibilityMonitor.getInstance().on('visible',_this.onVisible_,_this);if(repoInfo_.host.indexOf('fblocal')===-1){OnlineMonitor.getInstance().on('online',_this.onOnline_,_this);}return _this;}/**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */PersistentConnection.prototype.sendRequest=function(action,body,onResponse){var curReqNum=++this.requestNumber_;var msg={r:curReqNum,a:action,b:body};this.log_(util.stringify(msg));util.assert(this.connected_,\"sendRequest call when we're not connected not allowed.\");this.realtime_.sendRequest(msg);if(onResponse){this.requestCBHash_[curReqNum]=onResponse;}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.listen=function(query,currentHashFn,tag,onComplete){var queryId=query.queryIdentifier();var pathString=query.path.toString();this.log_('Listen called for '+pathString+' '+queryId);this.listens_[pathString]=this.listens_[pathString]||{};util.assert(query.getQueryParams().isDefault()||!query.getQueryParams().loadsAllData(),'listen() called for non-default but complete query');util.assert(!this.listens_[pathString][queryId],'listen() called twice for same path/queryId.');var listenSpec={onComplete:onComplete,hashFn:currentHashFn,query:query,tag:tag};this.listens_[pathString][queryId]=listenSpec;if(this.connected_){this.sendListen_(listenSpec);}};/**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */PersistentConnection.prototype.sendListen_=function(listenSpec){var _this=this;var query=listenSpec.query;var pathString=query.path.toString();var queryId=query.queryIdentifier();this.log_('Listen on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='q';// Only bother to send query if it's non-default.\nif(listenSpec.tag){req['q']=query.queryObject();req['t']=listenSpec.tag;}req[/*hash*/'h']=listenSpec.hashFn();this.sendRequest(action,req,function(message){var payload=message[/*data*/'d'];var status=message[/*status*/'s'];// print warnings in any case...\nPersistentConnection.warnOnListenWarnings_(payload,query);var currentListenSpec=_this.listens_[pathString]&&_this.listens_[pathString][queryId];// only trigger actions if the listen hasn't been removed and readded\nif(currentListenSpec===listenSpec){_this.log_('listen response',message);if(status!=='ok'){_this.removeListen_(pathString,queryId);}if(listenSpec.onComplete){listenSpec.onComplete(status,payload);}}});};/**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */PersistentConnection.warnOnListenWarnings_=function(payload,query){if(payload&&typeof payload==='object'&&util.contains(payload,'w')){var warnings=util.safeGet(payload,'w');if(Array.isArray(warnings)&&~warnings.indexOf('no_index')){var indexSpec='\".indexOn\": \"'+query.getQueryParams().getIndex().toString()+'\"';var indexPath=query.path.toString();warn(\"Using an unspecified index. Your data will be downloaded and \"+(\"filtered on the client. Consider adding \"+indexSpec+\" at \")+(indexPath+\" to your security rules for better performance.\"));}}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.refreshAuthToken=function(token){this.authToken_=token;this.log_('Auth token refreshed');if(this.authToken_){this.tryAuth();}else{//If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n//the credential so we dont become authenticated next time we connect.\nif(this.connected_){this.sendRequest('unauth',{},function(){});}}this.reduceReconnectDelayIfAdminCredential_(token);};/**\r\n     * @param {!string} credential\r\n     * @private\r\n     */PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_=function(credential){// NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n// Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\nvar isFirebaseSecret=credential&&credential.length===40;if(isFirebaseSecret||util.isAdmin(credential)){this.log_('Admin auth credential detected.  Reducing max reconnect time.');this.maxReconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;}};/**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */PersistentConnection.prototype.tryAuth=function(){var _this=this;if(this.connected_&&this.authToken_){var token_1=this.authToken_;var authMethod=util.isValidFormat(token_1)?'auth':'gauth';var requestData={cred:token_1};if(this.authOverride_===null){requestData['noauth']=true;}else if(typeof this.authOverride_==='object'){requestData['authvar']=this.authOverride_;}this.sendRequest(authMethod,requestData,function(res){var status=res[/*status*/'s'];var data=res[/*data*/'d']||'error';if(_this.authToken_===token_1){if(status==='ok'){_this.invalidAuthTokenCount_=0;}else{// Triggers reconnect and force refresh for auth token\n_this.onAuthRevoked_(status,data);}}});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.unlisten=function(query,tag){var pathString=query.path.toString();var queryId=query.queryIdentifier();this.log_('Unlisten called for '+pathString+' '+queryId);util.assert(query.getQueryParams().isDefault()||!query.getQueryParams().loadsAllData(),'unlisten() called for non-default but complete query');var listen=this.removeListen_(pathString,queryId);if(listen&&this.connected_){this.sendUnlisten_(pathString,queryId,query.queryObject(),tag);}};PersistentConnection.prototype.sendUnlisten_=function(pathString,queryId,queryObj,tag){this.log_('Unlisten on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='n';// Only bother sending queryId if it's non-default.\nif(tag){req['q']=queryObj;req['t']=tag;}this.sendRequest(action,req);};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectPut=function(pathString,data,onComplete){if(this.connected_){this.sendOnDisconnect_('o',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'o',data:data,onComplete:onComplete});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectMerge=function(pathString,data,onComplete){if(this.connected_){this.sendOnDisconnect_('om',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'om',data:data,onComplete:onComplete});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectCancel=function(pathString,onComplete){if(this.connected_){this.sendOnDisconnect_('oc',pathString,null,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'oc',data:null,onComplete:onComplete});}};PersistentConnection.prototype.sendOnDisconnect_=function(action,pathString,data,onComplete){var request={/*path*/p:pathString,/*data*/d:data};this.log_('onDisconnect '+action,request);this.sendRequest(action,request,function(response){if(onComplete){setTimeout(function(){onComplete(response[/*status*/'s'],response[/* data */'d']);},Math.floor(0));}});};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){this.putInternal('p',pathString,data,onComplete,hash);};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.merge=function(pathString,data,onComplete,hash){this.putInternal('m',pathString,data,onComplete,hash);};PersistentConnection.prototype.putInternal=function(action,pathString,data,onComplete,hash){var request={/*path*/p:pathString,/*data*/d:data};if(hash!==undefined)request[/*hash*/'h']=hash;// TODO: Only keep track of the most recent put for a given path?\nthis.outstandingPuts_.push({action:action,request:request,onComplete:onComplete});this.outstandingPutCount_++;var index=this.outstandingPuts_.length-1;if(this.connected_){this.sendPut_(index);}else{this.log_('Buffering put: '+pathString);}};PersistentConnection.prototype.sendPut_=function(index){var _this=this;var action=this.outstandingPuts_[index].action;var request=this.outstandingPuts_[index].request;var onComplete=this.outstandingPuts_[index].onComplete;this.outstandingPuts_[index].queued=this.connected_;this.sendRequest(action,request,function(message){_this.log_(action+' response',message);delete _this.outstandingPuts_[index];_this.outstandingPutCount_--;// Clean up array occasionally.\nif(_this.outstandingPutCount_===0){_this.outstandingPuts_=[];}if(onComplete)onComplete(message[/*status*/'s'],message[/* data */'d']);});};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.reportStats=function(stats){var _this=this;// If we're not connected, we just drop the stats.\nif(this.connected_){var request={/*counters*/c:stats};this.log_('reportStats',request);this.sendRequest(/*stats*/'s',request,function(result){var status=result[/*status*/'s'];if(status!=='ok'){var errorReason=result[/* data */'d'];_this.log_('reportStats','Error sending stats: '+errorReason);}});}};/**\r\n     * @param {*} message\r\n     * @private\r\n     */PersistentConnection.prototype.onDataMessage_=function(message){if('r'in message){// this is a response\nthis.log_('from server: '+util.stringify(message));var reqNum=message['r'];var onResponse=this.requestCBHash_[reqNum];if(onResponse){delete this.requestCBHash_[reqNum];onResponse(message[/*body*/'b']);}}else if('error'in message){throw'A server-side error has occurred: '+message['error'];}else if('a'in message){// a and b are action and body, respectively\nthis.onDataPush_(message['a'],message['b']);}};PersistentConnection.prototype.onDataPush_=function(action,body){this.log_('handleServerMessage',action,body);if(action==='d')this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge*/false,body['t']);else if(action==='m')this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge=*/true,body['t']);else if(action==='c')this.onListenRevoked_(body[/*path*/'p'],body[/*query*/'q']);else if(action==='ac')this.onAuthRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);else if(action==='sd')this.onSecurityDebugPacket_(body);else error('Unrecognized action received from server: '+util.stringify(action)+'\\nAre you using the latest client?');};PersistentConnection.prototype.onReady_=function(timestamp,sessionId){this.log_('connection ready');this.connected_=true;this.lastConnectionEstablishedTime_=new Date().getTime();this.handleTimestamp_(timestamp);this.lastSessionId=sessionId;if(this.firstConnection_){this.sendConnectStats_();}this.restoreState_();this.firstConnection_=false;this.onConnectStatus_(true);};PersistentConnection.prototype.scheduleConnect_=function(timeout){var _this=this;util.assert(!this.realtime_,\"Scheduling a connect when we're already connected/ing?\");if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);}// NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n// Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\nthis.establishConnectionTimer_=setTimeout(function(){_this.establishConnectionTimer_=null;_this.establishConnection_();},Math.floor(timeout));};/**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */PersistentConnection.prototype.onVisible_=function(visible){// NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\nif(visible&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_){this.log_('Window became visible.  Reducing delay.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}this.visible_=visible;};PersistentConnection.prototype.onOnline_=function(online){if(online){this.log_('Browser went online.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}else{this.log_('Browser went offline.  Killing connection.');if(this.realtime_){this.realtime_.close();}}};PersistentConnection.prototype.onRealtimeDisconnect_=function(){this.log_('data client disconnected');this.connected_=false;this.realtime_=null;// Since we don't know if our sent transactions succeeded or not, we need to cancel them.\nthis.cancelSentTransactions_();// Clear out the pending requests.\nthis.requestCBHash_={};if(this.shouldReconnect_()){if(!this.visible_){this.log_(\"Window isn't visible.  Delaying reconnect.\");this.reconnectDelay_=this.maxReconnectDelay_;this.lastConnectionAttemptTime_=new Date().getTime();}else if(this.lastConnectionEstablishedTime_){// If we've been connected long enough, reset reconnect delay to minimum.\nvar timeSinceLastConnectSucceeded=new Date().getTime()-this.lastConnectionEstablishedTime_;if(timeSinceLastConnectSucceeded>RECONNECT_DELAY_RESET_TIMEOUT)this.reconnectDelay_=RECONNECT_MIN_DELAY;this.lastConnectionEstablishedTime_=null;}var timeSinceLastConnectAttempt=new Date().getTime()-this.lastConnectionAttemptTime_;var reconnectDelay=Math.max(0,this.reconnectDelay_-timeSinceLastConnectAttempt);reconnectDelay=Math.random()*reconnectDelay;this.log_('Trying to reconnect in '+reconnectDelay+'ms');this.scheduleConnect_(reconnectDelay);// Adjust reconnect delay for next time.\nthis.reconnectDelay_=Math.min(this.maxReconnectDelay_,this.reconnectDelay_*RECONNECT_DELAY_MULTIPLIER);}this.onConnectStatus_(false);};PersistentConnection.prototype.establishConnection_=function(){if(this.shouldReconnect_()){this.log_('Making a connection attempt');this.lastConnectionAttemptTime_=new Date().getTime();this.lastConnectionEstablishedTime_=null;var onDataMessage_1=this.onDataMessage_.bind(this);var onReady_1=this.onReady_.bind(this);var onDisconnect_1=this.onRealtimeDisconnect_.bind(this);var connId_1=this.id+':'+PersistentConnection.nextConnectionId_++;var self_1=this;var lastSessionId_1=this.lastSessionId;var canceled_1=false;var connection_1=null;var closeFn_1=function closeFn_1(){if(connection_1){connection_1.close();}else{canceled_1=true;onDisconnect_1();}};var sendRequestFn=function sendRequestFn(msg){util.assert(connection_1,\"sendRequest call when we're not connected not allowed.\");connection_1.sendRequest(msg);};this.realtime_={close:closeFn_1,sendRequest:sendRequestFn};var forceRefresh=this.forceTokenRefresh_;this.forceTokenRefresh_=false;// First fetch auth token, and establish connection after fetching the token was successful\nthis.authTokenProvider_.getToken(forceRefresh).then(function(result){if(!canceled_1){log('getToken() completed. Creating connection.');self_1.authToken_=result&&result.accessToken;connection_1=new Connection(connId_1,self_1.repoInfo_,onDataMessage_1,onReady_1,onDisconnect_1,/* onKill= */function(reason){warn(reason+' ('+self_1.repoInfo_.toString()+')');self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);},lastSessionId_1);}else{log('getToken() completed but was canceled');}}).then(null,function(error$$1){self_1.log_('Failed to get token: '+error$$1);if(!canceled_1){if(util.CONSTANTS.NODE_ADMIN){// This may be a critical error for the Admin Node.js SDK, so log a warning.\n// But getToken() may also just have temporarily failed, so we still want to\n// continue retrying.\nwarn(error$$1);}closeFn_1();}});}};/**\r\n     * @param {string} reason\r\n     */PersistentConnection.prototype.interrupt=function(reason){log('Interrupting connection for reason: '+reason);this.interruptReasons_[reason]=true;if(this.realtime_){this.realtime_.close();}else{if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);this.establishConnectionTimer_=null;}if(this.connected_){this.onRealtimeDisconnect_();}}};/**\r\n     * @param {string} reason\r\n     */PersistentConnection.prototype.resume=function(reason){log('Resuming connection for reason: '+reason);delete this.interruptReasons_[reason];if(util.isEmpty(this.interruptReasons_)){this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}};PersistentConnection.prototype.handleTimestamp_=function(timestamp){var delta=timestamp-new Date().getTime();this.onServerInfoUpdate_({serverTimeOffset:delta});};PersistentConnection.prototype.cancelSentTransactions_=function(){for(var i=0;i<this.outstandingPuts_.length;i++){var put=this.outstandingPuts_[i];if(put&&/*hash*/'h'in put.request&&put.queued){if(put.onComplete)put.onComplete('disconnect');delete this.outstandingPuts_[i];this.outstandingPutCount_--;}}// Clean up array occasionally.\nif(this.outstandingPutCount_===0)this.outstandingPuts_=[];};/**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */PersistentConnection.prototype.onListenRevoked_=function(pathString,query){// Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\nvar queryId;if(!query){queryId='default';}else{queryId=query.map(function(q){return ObjectToUniqueKey(q);}).join('$');}var listen=this.removeListen_(pathString,queryId);if(listen&&listen.onComplete)listen.onComplete('permission_denied');};/**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */PersistentConnection.prototype.removeListen_=function(pathString,queryId){var normalizedPathString=new Path(pathString).toString();// normalize path.\nvar listen;if(this.listens_[normalizedPathString]!==undefined){listen=this.listens_[normalizedPathString][queryId];delete this.listens_[normalizedPathString][queryId];if(util.getCount(this.listens_[normalizedPathString])===0){delete this.listens_[normalizedPathString];}}else{// all listens for this path has already been removed\nlisten=undefined;}return listen;};PersistentConnection.prototype.onAuthRevoked_=function(statusCode,explanation){log('Auth token revoked: '+statusCode+'/'+explanation);this.authToken_=null;this.forceTokenRefresh_=true;this.realtime_.close();if(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAuthTokenCount_++;if(this.invalidAuthTokenCount_>=INVALID_AUTH_TOKEN_THRESHOLD){// Set a long reconnect delay because recovery is unlikely\nthis.reconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;// Notify the auth token provider that the token is invalid, which will log\n// a warning\nthis.authTokenProvider_.notifyForInvalidToken();}}};PersistentConnection.prototype.onSecurityDebugPacket_=function(body){if(this.securityDebugCallback_){this.securityDebugCallback_(body);}else{if('msg'in body){console.log('FIREBASE: '+body['msg'].replace('\\n','\\nFIREBASE: '));}}};PersistentConnection.prototype.restoreState_=function(){var _this=this;//Re-authenticate ourselves if we have a credential stored.\nthis.tryAuth();// Puts depend on having received the corresponding data update from the server before they complete, so we must\n// make sure to send listens before puts.\nutil.forEach(this.listens_,function(pathString,queries){util.forEach(queries,function(key,listenSpec){_this.sendListen_(listenSpec);});});for(var i=0;i<this.outstandingPuts_.length;i++){if(this.outstandingPuts_[i])this.sendPut_(i);}while(this.onDisconnectRequestQueue_.length){var request=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(request.action,request.pathString,request.data,request.onComplete);}};/**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */PersistentConnection.prototype.sendConnectStats_=function(){var stats={};var clientName='js';if(util.CONSTANTS.NODE_ADMIN){clientName='admin_node';}else if(util.CONSTANTS.NODE_CLIENT){clientName='node';}stats['sdk.'+clientName+'.'+firebase.SDK_VERSION.replace(/\\./g,'-')]=1;if(util.isMobileCordova()){stats['framework.cordova']=1;}else if(util.isReactNative()){stats['framework.reactnative']=1;}this.reportStats(stats);};/**\r\n     * @return {boolean}\r\n     * @private\r\n     */PersistentConnection.prototype.shouldReconnect_=function(){var online=OnlineMonitor.getInstance().currentlyOnline();return util.isEmpty(this.interruptReasons_)&&online;};/**\r\n     * @private\r\n     */PersistentConnection.nextPersistentConnectionId_=0;/**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */PersistentConnection.nextConnectionId_=0;return PersistentConnection;}(ServerActions);/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */var ReadonlyRestClient=/** @class */function(_super){tslib_1.__extends(ReadonlyRestClient,_super);/**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */function ReadonlyRestClient(repoInfo_,onDataUpdate_,authTokenProvider_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.onDataUpdate_=onDataUpdate_;_this.authTokenProvider_=authTokenProvider_;/** @private {function(...[*])} */_this.log_=logWrapper('p:rest:');/**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */_this.listens_={};return _this;}ReadonlyRestClient.prototype.reportStats=function(stats){throw new Error('Method not implemented.');};/**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */ReadonlyRestClient.getListenId_=function(query,tag){if(tag!==undefined){return'tag$'+tag;}else{util.assert(query.getQueryParams().isDefault(),\"should have a tag if it's not a default query.\");return query.path.toString();}};/** @inheritDoc */ReadonlyRestClient.prototype.listen=function(query,currentHashFn,tag,onComplete){var _this=this;var pathString=query.path.toString();this.log_('Listen called for '+pathString+' '+query.queryIdentifier());// Mark this listener so we can tell if it's removed.\nvar listenId=ReadonlyRestClient.getListenId_(query,tag);var thisListen={};this.listens_[listenId]=thisListen;var queryStringParameters=query.getQueryParams().toRestQueryStringParameters();this.restRequest_(pathString+'.json',queryStringParameters,function(error$$1,result){var data=result;if(error$$1===404){data=null;error$$1=null;}if(error$$1===null){_this.onDataUpdate_(pathString,data,/*isMerge=*/false,tag);}if(util.safeGet(_this.listens_,listenId)===thisListen){var status_1;if(!error$$1){status_1='ok';}else if(error$$1==401){status_1='permission_denied';}else{status_1='rest_error:'+error$$1;}onComplete(status_1,null);}});};/** @inheritDoc */ReadonlyRestClient.prototype.unlisten=function(query,tag){var listenId=ReadonlyRestClient.getListenId_(query,tag);delete this.listens_[listenId];};/** @inheritDoc */ReadonlyRestClient.prototype.refreshAuthToken=function(token){// no-op since we just always call getToken.\n};/**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */ReadonlyRestClient.prototype.restRequest_=function(pathString,queryStringParameters,callback){var _this=this;if(queryStringParameters===void 0){queryStringParameters={};}queryStringParameters['format']='export';this.authTokenProvider_.getToken(/*forceRefresh=*/false).then(function(authTokenData){var authToken=authTokenData&&authTokenData.accessToken;if(authToken){queryStringParameters['auth']=authToken;}var url=(_this.repoInfo_.secure?'https://':'http://')+_this.repoInfo_.host+pathString+'?'+'ns='+_this.repoInfo_.namespace+util.querystring(queryStringParameters);_this.log_('Sending REST request for '+url);var xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(callback&&xhr.readyState===4){_this.log_('REST Response for '+url+' received. status:',xhr.status,'response:',xhr.responseText);var res=null;if(xhr.status>=200&&xhr.status<300){try{res=util.jsonEval(xhr.responseText);}catch(e){warn('Failed to parse JSON response for '+url+': '+xhr.responseText);}callback(null,res);}else{// 401 and 404 are expected.\nif(xhr.status!==401&&xhr.status!==404){warn('Got unsuccessful REST response for '+url+' Status: '+xhr.status);}callback(xhr.status);}callback=null;}};xhr.open('GET',url,/*asynchronous=*/true);xhr.send();});};return ReadonlyRestClient;}(ServerActions);/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var INTERRUPT_REASON='repo_interrupt';/**\r\n * A connection to a single data repository.\r\n */var Repo=/** @class */function(){/**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */function Repo(repoInfo_,forceRestClient,app){var _this=this;this.repoInfo_=repoInfo_;this.app=app;this.dataUpdateCount=0;this.statsListener_=null;this.eventQueue_=new EventQueue();this.nextWriteId_=1;this.interceptServerDataCallback_=null;// A list of data pieces and paths to be set when this client disconnects.\nthis.onDisconnect_=new SparseSnapshotTree();/**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */this.persistentConnection_=null;/** @type {!AuthTokenProvider} */var authTokenProvider=new AuthTokenProvider(app);this.stats_=StatsManager.getCollection(repoInfo_);if(forceRestClient||beingCrawled()){this.server_=new ReadonlyRestClient(this.repoInfo_,this.onDataUpdate_.bind(this),authTokenProvider);// Minor hack: Fire onConnect immediately, since there's no actual connection.\nsetTimeout(this.onConnectStatus_.bind(this,true),0);}else{var authOverride=app.options['databaseAuthVariableOverride'];// Validate authOverride\nif(typeof authOverride!=='undefined'&&authOverride!==null){if(typeof authOverride!=='object'){throw new Error('Only objects are supported for option databaseAuthVariableOverride');}try{util.stringify(authOverride);}catch(e){throw new Error('Invalid authOverride provided: '+e);}}this.persistentConnection_=new PersistentConnection(this.repoInfo_,this.onDataUpdate_.bind(this),this.onConnectStatus_.bind(this),this.onServerInfoUpdate_.bind(this),authTokenProvider,authOverride);this.server_=this.persistentConnection_;}authTokenProvider.addTokenChangeListener(function(token){_this.server_.refreshAuthToken(token);});// In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n// we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\nthis.statsReporter_=StatsManager.getOrCreateReporter(repoInfo_,function(){return new StatsReporter(_this.stats_,_this.server_);});this.transactions_init_();// Used for .info.\nthis.infoData_=new SnapshotHolder();this.infoSyncTree_=new SyncTree({startListening:function startListening(query,tag,currentHashFn,onComplete){var infoEvents=[];var node=_this.infoData_.getNode(query.path);// This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n// on initial data...\nif(!node.isEmpty()){infoEvents=_this.infoSyncTree_.applyServerOverwrite(query.path,node);setTimeout(function(){onComplete('ok');},0);}return infoEvents;},stopListening:function stopListening(){}});this.updateInfo_('connected',false);this.serverSyncTree_=new SyncTree({startListening:function startListening(query,tag,currentHashFn,onComplete){_this.server_.listen(query,currentHashFn,tag,function(status,data){var events=onComplete(status,data);_this.eventQueue_.raiseEventsForChangedPath(query.path,events);});// No synchronous events for network-backed sync trees\nreturn[];},stopListening:function stopListening(query,tag){_this.server_.unlisten(query,tag);}});}/**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */Repo.prototype.toString=function(){return(this.repoInfo_.secure?'https://':'http://')+this.repoInfo_.host;};/**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */Repo.prototype.name=function(){return this.repoInfo_.namespace;};/**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */Repo.prototype.serverTime=function(){var offsetNode=this.infoData_.getNode(new Path('.info/serverTimeOffset'));var offset=offsetNode.val()||0;return new Date().getTime()+offset;};/**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */Repo.prototype.generateServerValues=function(){return generateWithValues({timestamp:this.serverTime()});};/**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */Repo.prototype.onDataUpdate_=function(pathString,data,isMerge,tag){// For testing.\nthis.dataUpdateCount++;var path=new Path(pathString);data=this.interceptServerDataCallback_?this.interceptServerDataCallback_(pathString,data):data;var events=[];if(tag){if(isMerge){var taggedChildren=util.map(data,function(raw){return nodeFromJSON$1(raw);});events=this.serverSyncTree_.applyTaggedQueryMerge(path,taggedChildren,tag);}else{var taggedSnap=nodeFromJSON$1(data);events=this.serverSyncTree_.applyTaggedQueryOverwrite(path,taggedSnap,tag);}}else if(isMerge){var changedChildren=util.map(data,function(raw){return nodeFromJSON$1(raw);});events=this.serverSyncTree_.applyServerMerge(path,changedChildren);}else{var snap=nodeFromJSON$1(data);events=this.serverSyncTree_.applyServerOverwrite(path,snap);}var affectedPath=path;if(events.length>0){// Since we have a listener outstanding for each transaction, receiving any events\n// is a proxy for some change having occurred.\naffectedPath=this.rerunTransactions_(path);}this.eventQueue_.raiseEventsForChangedPath(affectedPath,events);};/**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */Repo.prototype.interceptServerData_=function(callback){this.interceptServerDataCallback_=callback;};/**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */Repo.prototype.onConnectStatus_=function(connectStatus){this.updateInfo_('connected',connectStatus);if(connectStatus===false){this.runOnDisconnectEvents_();}};/**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */Repo.prototype.onServerInfoUpdate_=function(updates){var _this=this;each(updates,function(value,key){_this.updateInfo_(key,value);});};/**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */Repo.prototype.updateInfo_=function(pathString,value){var path=new Path('/.info/'+pathString);var newNode=nodeFromJSON$1(value);this.infoData_.updateSnapshot(path,newNode);var events=this.infoSyncTree_.applyServerOverwrite(path,newNode);this.eventQueue_.raiseEventsForChangedPath(path,events);};/**\r\n     * @return {!number}\r\n     * @private\r\n     */Repo.prototype.getNextWriteId_=function(){return this.nextWriteId_++;};/**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */Repo.prototype.setWithPriority=function(path,newVal,newPriority,onComplete){var _this=this;this.log_('set',{path:path.toString(),value:newVal,priority:newPriority});// TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n// (b) store unresolved paths on JSON parse\nvar serverValues=this.generateServerValues();var newNodeUnresolved=nodeFromJSON$1(newVal,newPriority);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,serverValues);var writeId=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserOverwrite(path,newNode,writeId,true);this.eventQueue_.queueEvents(events);this.server_.put(path.toString(),newNodeUnresolved.val(/*export=*/true),function(status,errorReason){var success=status==='ok';if(!success){warn('set at '+path+' failed: '+status);}var clearEvents=_this.serverSyncTree_.ackUserWrite(writeId,!success);_this.eventQueue_.raiseEventsForChangedPath(path,clearEvents);_this.callOnCompleteCallback(onComplete,status,errorReason);});var affectedPath=this.abortTransactions_(path);this.rerunTransactions_(affectedPath);// We queued the events above, so just flush the queue here\nthis.eventQueue_.raiseEventsForChangedPath(affectedPath,[]);};/**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */Repo.prototype.update=function(path,childrenToMerge,onComplete){var _this=this;this.log_('update',{path:path.toString(),value:childrenToMerge});// Start with our existing data and merge each child into it.\nvar empty=true;var serverValues=this.generateServerValues();var changedChildren={};util.forEach(childrenToMerge,function(changedKey,changedValue){empty=false;var newNodeUnresolved=nodeFromJSON$1(changedValue);changedChildren[changedKey]=resolveDeferredValueSnapshot(newNodeUnresolved,serverValues);});if(!empty){var writeId_1=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserMerge(path,changedChildren,writeId_1);this.eventQueue_.queueEvents(events);this.server_.merge(path.toString(),childrenToMerge,function(status,errorReason){var success=status==='ok';if(!success){warn('update at '+path+' failed: '+status);}var clearEvents=_this.serverSyncTree_.ackUserWrite(writeId_1,!success);var affectedPath=clearEvents.length>0?_this.rerunTransactions_(path):path;_this.eventQueue_.raiseEventsForChangedPath(affectedPath,clearEvents);_this.callOnCompleteCallback(onComplete,status,errorReason);});util.forEach(childrenToMerge,function(changedPath){var affectedPath=_this.abortTransactions_(path.child(changedPath));_this.rerunTransactions_(affectedPath);});// We queued the events above, so just flush the queue here\nthis.eventQueue_.raiseEventsForChangedPath(path,[]);}else{log(\"update() called with empty data.  Don't do anything.\");this.callOnCompleteCallback(onComplete,'ok');}};/**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */Repo.prototype.runOnDisconnectEvents_=function(){var _this=this;this.log_('onDisconnectEvents');var serverValues=this.generateServerValues();var resolvedOnDisconnectTree=resolveDeferredValueTree(this.onDisconnect_,serverValues);var events=[];resolvedOnDisconnectTree.forEachTree(Path.Empty,function(path,snap){events=events.concat(_this.serverSyncTree_.applyServerOverwrite(path,snap));var affectedPath=_this.abortTransactions_(path);_this.rerunTransactions_(affectedPath);});this.onDisconnect_=new SparseSnapshotTree();this.eventQueue_.raiseEventsForChangedPath(Path.Empty,events);};/**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */Repo.prototype.onDisconnectCancel=function(path,onComplete){var _this=this;this.server_.onDisconnectCancel(path.toString(),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.forget(path);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};/**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */Repo.prototype.onDisconnectSet=function(path,value,onComplete){var _this=this;var newNode=nodeFromJSON$1(value);this.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.remember(path,newNode);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};/**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */Repo.prototype.onDisconnectSetWithPriority=function(path,value,priority,onComplete){var _this=this;var newNode=nodeFromJSON$1(value,priority);this.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.remember(path,newNode);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};/**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */Repo.prototype.onDisconnectUpdate=function(path,childrenToMerge,onComplete){var _this=this;if(util.isEmpty(childrenToMerge)){log(\"onDisconnect().update() called with empty data.  Don't do anything.\");this.callOnCompleteCallback(onComplete,'ok');return;}this.server_.onDisconnectMerge(path.toString(),childrenToMerge,function(status,errorReason){if(status==='ok'){util.forEach(childrenToMerge,function(childName,childNode){var newChildNode=nodeFromJSON$1(childNode);_this.onDisconnect_.remember(path.child(childName),newChildNode);});}_this.callOnCompleteCallback(onComplete,status,errorReason);});};/**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */Repo.prototype.addEventCallbackForQuery=function(query,eventRegistration){var events;if(query.path.getFront()==='.info'){events=this.infoSyncTree_.addEventRegistration(query,eventRegistration);}else{events=this.serverSyncTree_.addEventRegistration(query,eventRegistration);}this.eventQueue_.raiseEventsAtPath(query.path,events);};/**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */Repo.prototype.removeEventCallbackForQuery=function(query,eventRegistration){// These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n// a little bit by handling the return values anyways.\nvar events;if(query.path.getFront()==='.info'){events=this.infoSyncTree_.removeEventRegistration(query,eventRegistration);}else{events=this.serverSyncTree_.removeEventRegistration(query,eventRegistration);}this.eventQueue_.raiseEventsAtPath(query.path,events);};Repo.prototype.interrupt=function(){if(this.persistentConnection_){this.persistentConnection_.interrupt(INTERRUPT_REASON);}};Repo.prototype.resume=function(){if(this.persistentConnection_){this.persistentConnection_.resume(INTERRUPT_REASON);}};Repo.prototype.stats=function(showDelta){if(showDelta===void 0){showDelta=false;}if(typeof console==='undefined')return;var stats;if(showDelta){if(!this.statsListener_)this.statsListener_=new StatsListener(this.stats_);stats=this.statsListener_.get();}else{stats=this.stats_.get();}var longestName=Object.keys(stats).reduce(function(previousValue,currentValue){return Math.max(currentValue.length,previousValue);},0);util.forEach(stats,function(stat,value){// pad stat names to be the same length (plus 2 extra spaces).\nfor(var i=stat.length;i<longestName+2;i++){stat+=' ';}console.log(stat+value);});};Repo.prototype.statsIncrementCounter=function(metric){this.stats_.incrementCounter(metric);this.statsReporter_.includeStat(metric);};/**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */Repo.prototype.log_=function(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var prefix='';if(this.persistentConnection_){prefix=this.persistentConnection_.id+':';}log.apply(void 0,[prefix].concat(var_args));};/**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */Repo.prototype.callOnCompleteCallback=function(callback,status,errorReason){if(callback){exceptionGuard(function(){if(status=='ok'){callback(null);}else{var code=(status||'error').toUpperCase();var message=code;if(errorReason)message+=': '+errorReason;var error$$1=new Error(message);error$$1.code=code;callback(error$$1);}});}};Object.defineProperty(Repo.prototype,\"database\",{get:function get(){return this.__database||(this.__database=new Database(this));},enumerable:true,configurable:true});return Repo;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */var RangedFilter=/** @class */function(){/**\r\n     * @param {!QueryParams} params\r\n     */function RangedFilter(params){this.indexedFilter_=new IndexedFilter(params.getIndex());this.index_=params.getIndex();this.startPost_=RangedFilter.getStartPost_(params);this.endPost_=RangedFilter.getEndPost_(params);}/**\r\n     * @return {!NamedNode}\r\n     */RangedFilter.prototype.getStartPost=function(){return this.startPost_;};/**\r\n     * @return {!NamedNode}\r\n     */RangedFilter.prototype.getEndPost=function(){return this.endPost_;};/**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */RangedFilter.prototype.matches=function(node){return this.index_.compare(this.getStartPost(),node)<=0&&this.index_.compare(node,this.getEndPost())<=0;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}return this.indexedFilter_.updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(newSnap.isLeafNode()){// Make sure we have a children node with the correct index, not a leaf node;\nnewSnap=ChildrenNode.EMPTY_NODE;}var filtered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var self=this;newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!self.matches(new NamedNode(key,childNode))){filtered=filtered.updateImmediateChild(key,ChildrenNode.EMPTY_NODE);}});return this.indexedFilter_.updateFullNode(oldSnap,filtered,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.filtersNodes=function(){return true;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.getIndexedFilter=function(){return this.indexedFilter_;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.getIndex=function(){return this.index_;};/**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */RangedFilter.getStartPost_=function(params){if(params.hasStart()){var startName=params.getIndexStartName();return params.getIndex().makePost(params.getIndexStartValue(),startName);}else{return params.getIndex().minPost();}};/**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */RangedFilter.getEndPost_=function(params){if(params.hasEnd()){var endName=params.getIndexEndName();return params.getIndex().makePost(params.getIndexEndValue(),endName);}else{return params.getIndex().maxPost();}};return RangedFilter;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */var LimitedFilter=/** @class */function(){/**\r\n     * @param {!QueryParams} params\r\n     */function LimitedFilter(params){this.rangedFilter_=new RangedFilter(params);this.index_=params.getIndex();this.limit_=params.getLimit();this.reverse_=!params.isViewFromLeft();}/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.rangedFilter_.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}if(snap.getImmediateChild(key).equals(newChild)){// No change\nreturn snap;}else if(snap.numChildren()<this.limit_){return this.rangedFilter_.getIndexedFilter().updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}else{return this.fullLimitUpdateChild_(snap,key,newChild,source,optChangeAccumulator);}};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){var filtered;if(newSnap.isLeafNode()||newSnap.isEmpty()){// Make sure we have a children node with the correct index, not a leaf node;\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);}else{if(this.limit_*2<newSnap.numChildren()&&newSnap.isIndexed(this.index_)){// Easier to build up a snapshot, since what we're given has more than twice the elements we want\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);// anchor to the startPost, endPost, or last element as appropriate\nvar iterator=void 0;if(this.reverse_){iterator=newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_);}else{iterator=newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);}var count=0;while(iterator.hasNext()&&count<this.limit_){var next=iterator.getNext();var inRange=void 0;if(this.reverse_){inRange=this.index_.compare(this.rangedFilter_.getStartPost(),next)<=0;}else{inRange=this.index_.compare(next,this.rangedFilter_.getEndPost())<=0;}if(inRange){filtered=filtered.updateImmediateChild(next.name,next.node);count++;}else{// if we have reached the end post, we cannot keep adding elemments\nbreak;}}}else{// The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\nfiltered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var startPost=void 0;var endPost=void 0;var cmp=void 0;var iterator=void 0;if(this.reverse_){iterator=filtered.getReverseIterator(this.index_);startPost=this.rangedFilter_.getEndPost();endPost=this.rangedFilter_.getStartPost();var indexCompare_1=this.index_.getCompare();cmp=function cmp(a,b){return indexCompare_1(b,a);};}else{iterator=filtered.getIterator(this.index_);startPost=this.rangedFilter_.getStartPost();endPost=this.rangedFilter_.getEndPost();cmp=this.index_.getCompare();}var count=0;var foundStartPost=false;while(iterator.hasNext()){var next=iterator.getNext();if(!foundStartPost&&cmp(startPost,next)<=0){// start adding\nfoundStartPost=true;}var inRange=foundStartPost&&count<this.limit_&&cmp(next,endPost)<=0;if(inRange){count++;}else{filtered=filtered.updateImmediateChild(next.name,ChildrenNode.EMPTY_NODE);}}}}return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap,filtered,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.filtersNodes=function(){return true;};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.getIndexedFilter=function(){return this.rangedFilter_.getIndexedFilter();};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.getIndex=function(){return this.index_;};/**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */LimitedFilter.prototype.fullLimitUpdateChild_=function(snap,childKey,childSnap,source,changeAccumulator){// TODO: rename all cache stuff etc to general snap terminology\nvar cmp;if(this.reverse_){var indexCmp_1=this.index_.getCompare();cmp=function cmp(a,b){return indexCmp_1(b,a);};}else{cmp=this.index_.getCompare();}var oldEventCache=snap;util.assert(oldEventCache.numChildren()==this.limit_,'');var newChildNamedNode=new NamedNode(childKey,childSnap);var windowBoundary=this.reverse_?oldEventCache.getFirstChild(this.index_):oldEventCache.getLastChild(this.index_);var inRange=this.rangedFilter_.matches(newChildNamedNode);if(oldEventCache.hasChild(childKey)){var oldChildSnap=oldEventCache.getImmediateChild(childKey);var nextChild=source.getChildAfterChild(this.index_,windowBoundary,this.reverse_);while(nextChild!=null&&(nextChild.name==childKey||oldEventCache.hasChild(nextChild.name))){// There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n// been applied to the limited filter yet. Ignore this next child which will be updated later in\n// the limited filter...\nnextChild=source.getChildAfterChild(this.index_,nextChild,this.reverse_);}var compareNext=nextChild==null?1:cmp(nextChild,newChildNamedNode);var remainsInWindow=inRange&&!childSnap.isEmpty()&&compareNext>=0;if(remainsInWindow){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childChangedChange(childKey,childSnap,oldChildSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap);}else{if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childRemovedChange(childKey,oldChildSnap));}var newEventCache=oldEventCache.updateImmediateChild(childKey,ChildrenNode.EMPTY_NODE);var nextChildInRange=nextChild!=null&&this.rangedFilter_.matches(nextChild);if(nextChildInRange){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name,nextChild.node));}return newEventCache.updateImmediateChild(nextChild.name,nextChild.node);}else{return newEventCache;}}}else if(childSnap.isEmpty()){// we're deleting a node, but it was not in the window, so ignore it\nreturn snap;}else if(inRange){if(cmp(windowBoundary,newChildNamedNode)>=0){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name,windowBoundary.node));changeAccumulator.trackChildChange(Change.childAddedChange(childKey,childSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap).updateImmediateChild(windowBoundary.name,ChildrenNode.EMPTY_NODE);}else{return snap;}}else{return snap;}};return LimitedFilter;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */var QueryParams=/** @class */function(){function QueryParams(){this.limitSet_=false;this.startSet_=false;this.startNameSet_=false;this.endSet_=false;this.endNameSet_=false;this.limit_=0;this.viewFrom_='';this.indexStartValue_=null;this.indexStartName_='';this.indexEndValue_=null;this.indexEndName_='';this.index_=PRIORITY_INDEX;}/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.hasStart=function(){return this.startSet_;};/**\r\n     * @return {boolean} True if it would return from left.\r\n     */QueryParams.prototype.isViewFromLeft=function(){if(this.viewFrom_===''){// limit(), rather than limitToFirst or limitToLast was called.\n// This means that only one of startSet_ and endSet_ is true. Use them\n// to calculate which side of the view to anchor to. If neither is set,\n// anchor to the end.\nreturn this.startSet_;}else{return this.viewFrom_===QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;}};/**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */QueryParams.prototype.getIndexStartValue=function(){util.assert(this.startSet_,'Only valid if start has been set');return this.indexStartValue_;};/**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */QueryParams.prototype.getIndexStartName=function(){util.assert(this.startSet_,'Only valid if start has been set');if(this.startNameSet_){return this.indexStartName_;}else{return MIN_NAME;}};/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.hasEnd=function(){return this.endSet_;};/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */QueryParams.prototype.getIndexEndValue=function(){util.assert(this.endSet_,'Only valid if end has been set');return this.indexEndValue_;};/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */QueryParams.prototype.getIndexEndName=function(){util.assert(this.endSet_,'Only valid if end has been set');if(this.endNameSet_){return this.indexEndName_;}else{return MAX_NAME;}};/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.hasLimit=function(){return this.limitSet_;};/**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */QueryParams.prototype.hasAnchoredLimit=function(){return this.limitSet_&&this.viewFrom_!=='';};/**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */QueryParams.prototype.getLimit=function(){util.assert(this.limitSet_,'Only valid if limit has been set');return this.limit_;};/**\r\n     * @return {!Index}\r\n     */QueryParams.prototype.getIndex=function(){return this.index_;};/**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */QueryParams.prototype.copy_=function(){var copy=new QueryParams();copy.limitSet_=this.limitSet_;copy.limit_=this.limit_;copy.startSet_=this.startSet_;copy.indexStartValue_=this.indexStartValue_;copy.startNameSet_=this.startNameSet_;copy.indexStartName_=this.indexStartName_;copy.endSet_=this.endSet_;copy.indexEndValue_=this.indexEndValue_;copy.endNameSet_=this.endNameSet_;copy.indexEndName_=this.indexEndName_;copy.index_=this.index_;copy.viewFrom_=this.viewFrom_;return copy;};/**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.limit=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_='';return newParams;};/**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.limitToFirst=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;return newParams;};/**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.limitToLast=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;return newParams;};/**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.startAt=function(indexValue,key){var newParams=this.copy_();newParams.startSet_=true;if(!(indexValue!==undefined)){indexValue=null;}newParams.indexStartValue_=indexValue;if(key!=null){newParams.startNameSet_=true;newParams.indexStartName_=key;}else{newParams.startNameSet_=false;newParams.indexStartName_='';}return newParams;};/**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.endAt=function(indexValue,key){var newParams=this.copy_();newParams.endSet_=true;if(!(indexValue!==undefined)){indexValue=null;}newParams.indexEndValue_=indexValue;if(key!==undefined){newParams.endNameSet_=true;newParams.indexEndName_=key;}else{newParams.endNameSet_=false;newParams.indexEndName_='';}return newParams;};/**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.orderBy=function(index){var newParams=this.copy_();newParams.index_=index;return newParams;};/**\r\n     * @return {!Object}\r\n     */QueryParams.prototype.getQueryObject=function(){var WIRE_PROTOCOL_CONSTANTS=QueryParams.WIRE_PROTOCOL_CONSTANTS_;var obj={};if(this.startSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE]=this.indexStartValue_;if(this.startNameSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME]=this.indexStartName_;}}if(this.endSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE]=this.indexEndValue_;if(this.endNameSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME]=this.indexEndName_;}}if(this.limitSet_){obj[WIRE_PROTOCOL_CONSTANTS.LIMIT]=this.limit_;var viewFrom=this.viewFrom_;if(viewFrom===''){if(this.isViewFromLeft()){viewFrom=WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;}else{viewFrom=WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;}}obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM]=viewFrom;}// For now, priority index is the default, so we only specify if it's some other index\nif(this.index_!==PRIORITY_INDEX){obj[WIRE_PROTOCOL_CONSTANTS.INDEX]=this.index_.toString();}return obj;};/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.loadsAllData=function(){return!(this.startSet_||this.endSet_||this.limitSet_);};/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.isDefault=function(){return this.loadsAllData()&&this.index_==PRIORITY_INDEX;};/**\r\n     * @return {!NodeFilter}\r\n     */QueryParams.prototype.getNodeFilter=function(){if(this.loadsAllData()){return new IndexedFilter(this.getIndex());}else if(this.hasLimit()){return new LimitedFilter(this);}else{return new RangedFilter(this);}};/**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */QueryParams.prototype.toRestQueryStringParameters=function(){var REST_CONSTANTS=QueryParams.REST_QUERY_CONSTANTS_;var qs={};if(this.isDefault()){return qs;}var orderBy;if(this.index_===PRIORITY_INDEX){orderBy=REST_CONSTANTS.PRIORITY_INDEX;}else if(this.index_===VALUE_INDEX){orderBy=REST_CONSTANTS.VALUE_INDEX;}else if(this.index_===KEY_INDEX){orderBy=REST_CONSTANTS.KEY_INDEX;}else{util.assert(this.index_ instanceof PathIndex,'Unrecognized index type!');orderBy=this.index_.toString();}qs[REST_CONSTANTS.ORDER_BY]=util.stringify(orderBy);if(this.startSet_){qs[REST_CONSTANTS.START_AT]=util.stringify(this.indexStartValue_);if(this.startNameSet_){qs[REST_CONSTANTS.START_AT]+=','+util.stringify(this.indexStartName_);}}if(this.endSet_){qs[REST_CONSTANTS.END_AT]=util.stringify(this.indexEndValue_);if(this.endNameSet_){qs[REST_CONSTANTS.END_AT]+=','+util.stringify(this.indexEndName_);}}if(this.limitSet_){if(this.isViewFromLeft()){qs[REST_CONSTANTS.LIMIT_TO_FIRST]=this.limit_;}else{qs[REST_CONSTANTS.LIMIT_TO_LAST]=this.limit_;}}return qs;};/**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */QueryParams.WIRE_PROTOCOL_CONSTANTS_={INDEX_START_VALUE:'sp',INDEX_START_NAME:'sn',INDEX_END_VALUE:'ep',INDEX_END_NAME:'en',LIMIT:'l',VIEW_FROM:'vf',VIEW_FROM_LEFT:'l',VIEW_FROM_RIGHT:'r',INDEX:'i'};/**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */QueryParams.REST_QUERY_CONSTANTS_={ORDER_BY:'orderBy',PRIORITY_INDEX:'$priority',VALUE_INDEX:'$value',KEY_INDEX:'$key',START_AT:'startAt',END_AT:'endAt',LIMIT_TO_FIRST:'limitToFirst',LIMIT_TO_LAST:'limitToLast'};/**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */QueryParams.DEFAULT=new QueryParams();return QueryParams;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Reference=/** @class */function(_super){tslib_1.__extends(Reference,_super);/**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */function Reference(repo,path){var _this=this;if(!(repo instanceof Repo)){throw new Error('new Reference() no longer supported - use app.database().');}// call Query's constructor, passing in the repo and path.\n_this=_super.call(this,repo,path,QueryParams.DEFAULT,false)||this;return _this;}/** @return {?string} */Reference.prototype.getKey=function(){util.validateArgCount('Reference.key',0,0,arguments.length);if(this.path.isEmpty())return null;else return this.path.getBack();};/**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */Reference.prototype.child=function(pathString){util.validateArgCount('Reference.child',1,1,arguments.length);if(typeof pathString==='number'){pathString=String(pathString);}else if(!(pathString instanceof Path)){if(this.path.getFront()===null)validateRootPathString('Reference.child',1,pathString,false);else validatePathString('Reference.child',1,pathString,false);}return new Reference(this.repo,this.path.child(pathString));};/** @return {?Reference} */Reference.prototype.getParent=function(){util.validateArgCount('Reference.parent',0,0,arguments.length);var parentPath=this.path.parent();return parentPath===null?null:new Reference(this.repo,parentPath);};/** @return {!Reference} */Reference.prototype.getRoot=function(){util.validateArgCount('Reference.root',0,0,arguments.length);var ref=this;while(ref.getParent()!==null){ref=ref.getParent();}return ref;};/** @return {!Database} */Reference.prototype.databaseProp=function(){return this.repo.database;};/**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.set=function(newVal,onComplete){util.validateArgCount('Reference.set',1,2,arguments.length);validateWritablePath('Reference.set',this.path);validateFirebaseDataArg('Reference.set',1,newVal,this.path,false);util.validateCallback('Reference.set',2,onComplete,true);var deferred=new util.Deferred();this.repo.setWithPriority(this.path,newVal,/*priority=*/null,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.update=function(objectToMerge,onComplete){util.validateArgCount('Reference.update',1,2,arguments.length);validateWritablePath('Reference.update',this.path);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to Firebase.update() is deprecated. '+'Use set() if you want to overwrite the existing data, or '+'an Object with integer keys if you really do want to '+'only update some of the children.');}validateFirebaseMergeDataArg('Reference.update',1,objectToMerge,this.path,false);util.validateCallback('Reference.update',2,onComplete,true);var deferred=new util.Deferred();this.repo.update(this.path,objectToMerge,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.setWithPriority=function(newVal,newPriority,onComplete){util.validateArgCount('Reference.setWithPriority',2,3,arguments.length);validateWritablePath('Reference.setWithPriority',this.path);validateFirebaseDataArg('Reference.setWithPriority',1,newVal,this.path,false);validatePriority('Reference.setWithPriority',2,newPriority,false);util.validateCallback('Reference.setWithPriority',3,onComplete,true);if(this.getKey()==='.length'||this.getKey()==='.keys')throw'Reference.setWithPriority failed: '+this.getKey()+' is a read-only object.';var deferred=new util.Deferred();this.repo.setWithPriority(this.path,newVal,newPriority,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.remove=function(onComplete){util.validateArgCount('Reference.remove',0,1,arguments.length);validateWritablePath('Reference.remove',this.path);util.validateCallback('Reference.remove',1,onComplete,true);return this.set(null,onComplete);};/**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */Reference.prototype.transaction=function(transactionUpdate,onComplete,applyLocally){util.validateArgCount('Reference.transaction',1,3,arguments.length);validateWritablePath('Reference.transaction',this.path);util.validateCallback('Reference.transaction',1,transactionUpdate,false);util.validateCallback('Reference.transaction',2,onComplete,true);// NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n// to expose it.\nvalidateBoolean('Reference.transaction',3,applyLocally,true);if(this.getKey()==='.length'||this.getKey()==='.keys')throw'Reference.transaction failed: '+this.getKey()+' is a read-only object.';if(applyLocally===undefined)applyLocally=true;var deferred=new util.Deferred();if(typeof onComplete==='function'){deferred.promise.catch(function(){});}var promiseComplete=function promiseComplete(error$$1,committed,snapshot){if(error$$1){deferred.reject(error$$1);}else{deferred.resolve(new TransactionResult(committed,snapshot));}if(typeof onComplete==='function'){onComplete(error$$1,committed,snapshot);}};this.repo.startTransaction(this.path,transactionUpdate,promiseComplete,applyLocally);return deferred.promise;};/**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.setPriority=function(priority,onComplete){util.validateArgCount('Reference.setPriority',1,2,arguments.length);validateWritablePath('Reference.setPriority',this.path);validatePriority('Reference.setPriority',1,priority,false);util.validateCallback('Reference.setPriority',2,onComplete,true);var deferred=new util.Deferred();this.repo.setWithPriority(this.path.child('.priority'),priority,null,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */Reference.prototype.push=function(value,onComplete){util.validateArgCount('Reference.push',0,2,arguments.length);validateWritablePath('Reference.push',this.path);validateFirebaseDataArg('Reference.push',1,value,this.path,true);util.validateCallback('Reference.push',2,onComplete,true);var now=this.repo.serverTime();var name=nextPushId(now);// push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n// We use child() to create handles to two different references. The first is turned into a\n// ThennableReference below by adding then() and catch() methods and is used as the\n// return value of push(). The second remains a regular Reference and is used as the fulfilled\n// value of the first ThennableReference.\nvar thennablePushRef=this.child(name);var pushRef=this.child(name);var promise;if(value!=null){promise=thennablePushRef.set(value,onComplete).then(function(){return pushRef;});}else{promise=Promise.resolve(pushRef);}thennablePushRef.then=promise.then.bind(promise);thennablePushRef.catch=promise.then.bind(promise,undefined);if(typeof onComplete==='function'){promise.catch(function(){});}return thennablePushRef;};/**\r\n     * @return {!OnDisconnect}\r\n     */Reference.prototype.onDisconnect=function(){validateWritablePath('Reference.onDisconnect',this.path);return new OnDisconnect(this.repo,this.path);};Object.defineProperty(Reference.prototype,\"database\",{get:function get(){return this.databaseProp();},enumerable:true,configurable:true});Object.defineProperty(Reference.prototype,\"key\",{get:function get(){return this.getKey();},enumerable:true,configurable:true});Object.defineProperty(Reference.prototype,\"parent\",{get:function get(){return this.getParent();},enumerable:true,configurable:true});Object.defineProperty(Reference.prototype,\"root\",{get:function get(){return this.getRoot();},enumerable:true,configurable:true});return Reference;}(Query);/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */Query.__referenceConstructor=Reference;SyncPoint.__referenceConstructor=Reference;/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Node in a Tree.\r\n */var TreeNode=/** @class */function(){function TreeNode(){// TODO: Consider making accessors that create children and value lazily or\n// separate Internal / Leaf 'types'.\nthis.children={};this.childCount=0;this.value=null;}return TreeNode;}();/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */var Tree=/** @class */function(){/**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */function Tree(name_,parent_,node_){if(name_===void 0){name_='';}if(parent_===void 0){parent_=null;}if(node_===void 0){node_=new TreeNode();}this.name_=name_;this.parent_=parent_;this.node_=node_;}/**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */Tree.prototype.subTree=function(pathObj){// TODO: Require pathObj to be Path?\nvar path=pathObj instanceof Path?pathObj:new Path(pathObj);var child=this,next;while((next=path.getFront())!==null){var childNode=util.safeGet(child.node_.children,next)||new TreeNode();child=new Tree(next,child,childNode);path=path.popFront();}return child;};/**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */Tree.prototype.getValue=function(){return this.node_.value;};/**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */Tree.prototype.setValue=function(value){util.assert(typeof value!=='undefined','Cannot set value to undefined');this.node_.value=value;this.updateParents_();};/**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */Tree.prototype.clear=function(){this.node_.value=null;this.node_.children={};this.node_.childCount=0;this.updateParents_();};/**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */Tree.prototype.hasChildren=function(){return this.node_.childCount>0;};/**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */Tree.prototype.isEmpty=function(){return this.getValue()===null&&!this.hasChildren();};/**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */Tree.prototype.forEachChild=function(action){var _this=this;util.forEach(this.node_.children,function(child,childTree){action(new Tree(child,_this,childTree));});};/**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */Tree.prototype.forEachDescendant=function(action,includeSelf,childrenFirst){if(includeSelf&&!childrenFirst)action(this);this.forEachChild(function(child){child.forEachDescendant(action,/*includeSelf=*/true,childrenFirst);});if(includeSelf&&childrenFirst)action(this);};/**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */Tree.prototype.forEachAncestor=function(action,includeSelf){var node=includeSelf?this:this.parent();while(node!==null){if(action(node)){return true;}node=node.parent();}return false;};/**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */Tree.prototype.forEachImmediateDescendantWithValue=function(action){this.forEachChild(function(child){if(child.getValue()!==null)action(child);else child.forEachImmediateDescendantWithValue(action);});};/**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */Tree.prototype.path=function(){return new Path(this.parent_===null?this.name_:this.parent_.path()+'/'+this.name_);};/**\r\n     * @return {string} The name of the tree node.\r\n     */Tree.prototype.name=function(){return this.name_;};/**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */Tree.prototype.parent=function(){return this.parent_;};/**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */Tree.prototype.updateParents_=function(){if(this.parent_!==null)this.parent_.updateChild_(this.name_,this);};/**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */Tree.prototype.updateChild_=function(childName,child){var childEmpty=child.isEmpty();var childExists=util.contains(this.node_.children,childName);if(childEmpty&&childExists){delete this.node_.children[childName];this.node_.childCount--;this.updateParents_();}else if(!childEmpty&&!childExists){this.node_.children[childName]=child.node_;this.node_.childCount++;this.updateParents_();}};return Tree;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n/**\r\n * @enum {number}\r\n */var TransactionStatus;(function(TransactionStatus){// We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n// server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n// mismatched hash.\nTransactionStatus[TransactionStatus[\"RUN\"]=0]=\"RUN\";// We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n// or rejected yet).\nTransactionStatus[TransactionStatus[\"SENT\"]=1]=\"SENT\";// Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n// removed when we get a chance to prune completed ones.\nTransactionStatus[TransactionStatus[\"COMPLETED\"]=2]=\"COMPLETED\";// Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n// If it comes back as unsuccessful, we'll abort it.\nTransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"]=3]=\"SENT_NEEDS_ABORT\";// Temporary state used to mark transactions that need to be aborted.\nTransactionStatus[TransactionStatus[\"NEEDS_ABORT\"]=4]=\"NEEDS_ABORT\";})(TransactionStatus||(TransactionStatus={}));/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */Repo.MAX_TRANSACTION_RETRIES_=25;/**\r\n * Setup the transaction data structures\r\n * @private\r\n */Repo.prototype.transactions_init_=function(){/**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */this.transactionQueueTree_=new Tree();};/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */Repo.prototype.startTransaction=function(path,transactionUpdate,onComplete,applyLocally){this.log_('transaction on '+path);// Add a watch to make sure we get server updates.\nvar valueCallback=function valueCallback(){};var watchRef=new Reference(this,path);watchRef.on('value',valueCallback);var unwatcher=function unwatcher(){watchRef.off('value',valueCallback);};// Initialize transaction.\nvar transaction={path:path,update:transactionUpdate,onComplete:onComplete,// One of TransactionStatus enums.\nstatus:null,// Used when combining transactions at different locations to figure out which one goes first.\norder:LUIDGenerator(),// Whether to raise local events for this transaction.\napplyLocally:applyLocally,// Count of how many times we've retried the transaction.\nretryCount:0,// Function to call to clean up our .on() listener.\nunwatcher:unwatcher,// Stores why a transaction was aborted.\nabortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null};// Run transaction initially.\nvar currentState=this.getLatestState_(path);transaction.currentInputSnapshot=currentState;var newVal=transaction.update(currentState.val());if(newVal===undefined){// Abort transaction.\ntransaction.unwatcher();transaction.currentOutputSnapshotRaw=null;transaction.currentOutputSnapshotResolved=null;if(transaction.onComplete){// We just set the input snapshot, so this cast should be safe\nvar snapshot=new DataSnapshot(transaction.currentInputSnapshot,new Reference(this,transaction.path),PRIORITY_INDEX);transaction.onComplete(null,false,snapshot);}}else{validateFirebaseData('transaction failed: Data returned ',newVal,transaction.path);// Mark as run and add to our queue.\ntransaction.status=TransactionStatus.RUN;var queueNode=this.transactionQueueTree_.subTree(path);var nodeQueue=queueNode.getValue()||[];nodeQueue.push(transaction);queueNode.setValue(nodeQueue);// Update visibleData and raise events\n// Note: We intentionally raise events after updating all of our transaction state, since the user could\n// start new transactions from the event callbacks.\nvar priorityForNode=void 0;if(typeof newVal==='object'&&newVal!==null&&util.contains(newVal,'.priority')){priorityForNode=util.safeGet(newVal,'.priority');util.assert(isValidPriority(priorityForNode),'Invalid priority returned by transaction. '+'Priority must be a valid string, finite number, server value, or null.');}else{var currentNode=this.serverSyncTree_.calcCompleteEventCache(path)||ChildrenNode.EMPTY_NODE;priorityForNode=currentNode.getPriority().val();}priorityForNode/** @type {null|number|string} */=priorityForNode;var serverValues=this.generateServerValues();var newNodeUnresolved=nodeFromJSON$1(newVal,priorityForNode);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,serverValues);transaction.currentOutputSnapshotRaw=newNodeUnresolved;transaction.currentOutputSnapshotResolved=newNode;transaction.currentWriteId=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserOverwrite(path,newNode,transaction.currentWriteId,transaction.applyLocally);this.eventQueue_.raiseEventsForChangedPath(path,events);this.sendReadyTransactions_();}};/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */Repo.prototype.getLatestState_=function(path,excludeSets){return this.serverSyncTree_.calcCompleteEventCache(path,excludeSets)||ChildrenNode.EMPTY_NODE;};/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */Repo.prototype.sendReadyTransactions_=function(node){var _this=this;if(node===void 0){node=this.transactionQueueTree_;}// Before recursing, make sure any completed transactions are removed.\nif(!node){this.pruneCompletedTransactionsBelowNode_(node);}if(node.getValue()!==null){var queue=this.buildTransactionQueue_(node);util.assert(queue.length>0,'Sending zero length transaction queue');var allRun=queue.every(function(transaction){return transaction.status===TransactionStatus.RUN;});// If they're all run (and not sent), we can send them.  Else, we must wait.\nif(allRun){this.sendTransactionQueue_(node.path(),queue);}}else if(node.hasChildren()){node.forEachChild(function(childNode){_this.sendReadyTransactions_(childNode);});}};/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */Repo.prototype.sendTransactionQueue_=function(path,queue){var _this=this;// Mark transactions as sent and increment retry count!\nvar setsToIgnore=queue.map(function(txn){return txn.currentWriteId;});var latestState=this.getLatestState_(path,setsToIgnore);var snapToSend=latestState;var latestHash=latestState.hash();for(var i=0;i<queue.length;i++){var txn=queue[i];util.assert(txn.status===TransactionStatus.RUN,'tryToSendTransactionQueue_: items in queue should all be run.');txn.status=TransactionStatus.SENT;txn.retryCount++;var relativePath=Path.relativePath(path,txn.path);// If we've gotten to this point, the output snapshot must be defined.\nsnapToSend=snapToSend.updateChild(relativePath/**@type {!Node} */,txn.currentOutputSnapshotRaw);}var dataToSend=snapToSend.val(true);var pathToSend=path;// Send the put.\nthis.server_.put(pathToSend.toString(),dataToSend,function(status){_this.log_('transaction put response',{path:pathToSend.toString(),status:status});var events=[];if(status==='ok'){// Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n// the callback could trigger more transactions or sets.\nvar callbacks=[];for(var i=0;i<queue.length;i++){queue[i].status=TransactionStatus.COMPLETED;events=events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));if(queue[i].onComplete){// We never unset the output snapshot, and given that this transaction is complete, it should be set\nvar node=queue[i].currentOutputSnapshotResolved;var ref=new Reference(_this,queue[i].path);var snapshot=new DataSnapshot(node,ref,PRIORITY_INDEX);callbacks.push(queue[i].onComplete.bind(null,null,true,snapshot));}queue[i].unwatcher();}// Now remove the completed transactions.\n_this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));// There may be pending transactions that we can now send.\n_this.sendReadyTransactions_();_this.eventQueue_.raiseEventsForChangedPath(path,events);// Finally, trigger onComplete callbacks.\nfor(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}else{// transactions are no longer sent.  Update their status appropriately.\nif(status==='datastale'){for(var i=0;i<queue.length;i++){if(queue[i].status===TransactionStatus.SENT_NEEDS_ABORT)queue[i].status=TransactionStatus.NEEDS_ABORT;else queue[i].status=TransactionStatus.RUN;}}else{warn('transaction at '+pathToSend.toString()+' failed: '+status);for(var i=0;i<queue.length;i++){queue[i].status=TransactionStatus.NEEDS_ABORT;queue[i].abortReason=status;}}_this.rerunTransactions_(path);}},latestHash);};/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */Repo.prototype.rerunTransactions_=function(changedPath){var rootMostTransactionNode=this.getAncestorTransactionNode_(changedPath);var path=rootMostTransactionNode.path();var queue=this.buildTransactionQueue_(rootMostTransactionNode);this.rerunTransactionQueue_(queue,path);return path;};/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */Repo.prototype.rerunTransactionQueue_=function(queue,path){if(queue.length===0){return;// Nothing to do!\n}// Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n// the callback could trigger more transactions or sets.\nvar callbacks=[];var events=[];// Ignore all of the sets we're going to re-run.\nvar txnsToRerun=queue.filter(function(q){return q.status===TransactionStatus.RUN;});var setsToIgnore=txnsToRerun.map(function(q){return q.currentWriteId;});for(var i=0;i<queue.length;i++){var transaction=queue[i];var relativePath=Path.relativePath(path,transaction.path);var abortTransaction=false,abortReason=void 0;util.assert(relativePath!==null,'rerunTransactionsUnderNode_: relativePath should not be null.');if(transaction.status===TransactionStatus.NEEDS_ABORT){abortTransaction=true;abortReason=transaction.abortReason;events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}else if(transaction.status===TransactionStatus.RUN){if(transaction.retryCount>=Repo.MAX_TRANSACTION_RETRIES_){abortTransaction=true;abortReason='maxretry';events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}else{// This code reruns a transaction\nvar currentNode=this.getLatestState_(transaction.path,setsToIgnore);transaction.currentInputSnapshot=currentNode;var newData=queue[i].update(currentNode.val());if(newData!==undefined){validateFirebaseData('transaction failed: Data returned ',newData,transaction.path);var newDataNode=nodeFromJSON$1(newData);var hasExplicitPriority=typeof newData==='object'&&newData!=null&&util.contains(newData,'.priority');if(!hasExplicitPriority){// Keep the old priority if there wasn't a priority explicitly specified.\nnewDataNode=newDataNode.updatePriority(currentNode.getPriority());}var oldWriteId=transaction.currentWriteId;var serverValues=this.generateServerValues();var newNodeResolved=resolveDeferredValueSnapshot(newDataNode,serverValues);transaction.currentOutputSnapshotRaw=newDataNode;transaction.currentOutputSnapshotResolved=newNodeResolved;transaction.currentWriteId=this.getNextWriteId_();// Mutates setsToIgnore in place\nsetsToIgnore.splice(setsToIgnore.indexOf(oldWriteId),1);events=events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path,newNodeResolved,transaction.currentWriteId,transaction.applyLocally));events=events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId,true));}else{abortTransaction=true;abortReason='nodata';events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}}}this.eventQueue_.raiseEventsForChangedPath(path,events);events=[];if(abortTransaction){// Abort.\nqueue[i].status=TransactionStatus.COMPLETED;// Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n// So defer the unwatcher until we're done.\n(function(unwatcher){setTimeout(unwatcher,Math.floor(0));})(queue[i].unwatcher);if(queue[i].onComplete){if(abortReason==='nodata'){var ref=new Reference(this,queue[i].path);// We set this field immediately, so it's safe to cast to an actual snapshot\nvar lastInput/** @type {!Node} */=queue[i].currentInputSnapshot;var snapshot=new DataSnapshot(lastInput,ref,PRIORITY_INDEX);callbacks.push(queue[i].onComplete.bind(null,null,false,snapshot));}else{callbacks.push(queue[i].onComplete.bind(null,new Error(abortReason),false,null));}}}}// Clean up completed transactions.\nthis.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);// Now fire callbacks, now that we're in a good, known state.\nfor(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}// Try to send the transaction result to the server.\nthis.sendReadyTransactions_();};/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */Repo.prototype.getAncestorTransactionNode_=function(path){var front;// Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\nvar transactionNode=this.transactionQueueTree_;while((front=path.getFront())!==null&&transactionNode.getValue()===null){transactionNode=transactionNode.subTree(front);path=path.popFront();}return transactionNode;};/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */Repo.prototype.buildTransactionQueue_=function(transactionNode){// Walk any child transaction queues and aggregate them into a single queue.\nvar transactionQueue=[];this.aggregateTransactionQueuesForNode_(transactionNode,transactionQueue);// Sort them by the order the transactions were created.\ntransactionQueue.sort(function(a,b){return a.order-b.order;});return transactionQueue;};/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */Repo.prototype.aggregateTransactionQueuesForNode_=function(node,queue){var _this=this;var nodeQueue=node.getValue();if(nodeQueue!==null){for(var i=0;i<nodeQueue.length;i++){queue.push(nodeQueue[i]);}}node.forEachChild(function(child){_this.aggregateTransactionQueuesForNode_(child,queue);});};/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */Repo.prototype.pruneCompletedTransactionsBelowNode_=function(node){var _this=this;var queue=node.getValue();if(queue){var to=0;for(var from=0;from<queue.length;from++){if(queue[from].status!==TransactionStatus.COMPLETED){queue[to]=queue[from];to++;}}queue.length=to;node.setValue(queue.length>0?queue:null);}node.forEachChild(function(childNode){_this.pruneCompletedTransactionsBelowNode_(childNode);});};/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */Repo.prototype.abortTransactions_=function(path){var _this=this;var affectedPath=this.getAncestorTransactionNode_(path).path();var transactionNode=this.transactionQueueTree_.subTree(path);transactionNode.forEachAncestor(function(node){_this.abortTransactionsOnNode_(node);});this.abortTransactionsOnNode_(transactionNode);transactionNode.forEachDescendant(function(node){_this.abortTransactionsOnNode_(node);});return affectedPath;};/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */Repo.prototype.abortTransactionsOnNode_=function(node){var queue=node.getValue();if(queue!==null){// Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n// the callback could trigger more transactions or sets.\nvar callbacks=[];// Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n// can be immediately aborted and removed.\nvar events=[];var lastSent=-1;for(var i=0;i<queue.length;i++){if(queue[i].status===TransactionStatus.SENT_NEEDS_ABORT){// Already marked.  No action needed.\n}else if(queue[i].status===TransactionStatus.SENT){util.assert(lastSent===i-1,'All SENT items should be at beginning of queue.');lastSent=i;// Mark transaction for abort when it comes back.\nqueue[i].status=TransactionStatus.SENT_NEEDS_ABORT;queue[i].abortReason='set';}else{util.assert(queue[i].status===TransactionStatus.RUN,'Unexpected transaction status in abort');// We can abort it immediately.\nqueue[i].unwatcher();events=events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId,true));if(queue[i].onComplete){var snapshot=null;callbacks.push(queue[i].onComplete.bind(null,new Error('set'),false,snapshot));}}}if(lastSent===-1){// We're not waiting for any sent transactions.  We can clear the queue.\nnode.setValue(null);}else{// Remove the transactions we aborted.\nqueue.length=lastSent+1;}// Now fire the callbacks.\nthis.eventQueue_.raiseEventsForChangedPath(node.path(),events);for(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}};/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//** @const {string} */var DATABASE_URL_OPTION='databaseURL';var _staticInstance;/**\r\n * Creates and caches Repo instances.\r\n */var RepoManager=/** @class */function(){function RepoManager(){/**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */this.repos_={};/**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */this.useRestClient_=false;}RepoManager.getInstance=function(){if(!_staticInstance){_staticInstance=new RepoManager();}return _staticInstance;};// TODO(koss): Remove these functions unless used in tests?\nRepoManager.prototype.interrupt=function(){for(var appName in this.repos_){for(var dbUrl in this.repos_[appName]){this.repos_[appName][dbUrl].interrupt();}}};RepoManager.prototype.resume=function(){for(var appName in this.repos_){for(var dbUrl in this.repos_[appName]){this.repos_[appName][dbUrl].resume();}}};/**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */RepoManager.prototype.databaseFromApp=function(app,url){var dbUrl=url||app.options[DATABASE_URL_OPTION];if(dbUrl===undefined){fatal(\"Can't determine Firebase Database URL.  Be sure to include \"+DATABASE_URL_OPTION+' option when calling firebase.initializeApp().');}var parsedUrl=parseRepoInfo(dbUrl);var repoInfo=parsedUrl.repoInfo;validateUrl('Invalid Firebase Database URL',1,parsedUrl);if(!parsedUrl.path.isEmpty()){fatal('Database URL must point to the root of a Firebase Database '+'(not including a child path).');}var repo=this.createRepo(repoInfo,app);return repo.database;};/**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */RepoManager.prototype.deleteRepo=function(repo){var appRepos=util.safeGet(this.repos_,repo.app.name);// This should never happen...\nif(!appRepos||util.safeGet(appRepos,repo.repoInfo_.toURLString())!==repo){fatal(\"Database \"+repo.app.name+\"(\"+repo.repoInfo_+\") has already been deleted.\");}repo.interrupt();delete appRepos[repo.repoInfo_.toURLString()];};/**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */RepoManager.prototype.createRepo=function(repoInfo,app){var appRepos=util.safeGet(this.repos_,app.name);if(!appRepos){appRepos={};this.repos_[app.name]=appRepos;}var repo=util.safeGet(appRepos,repoInfo.toURLString());if(repo){fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');}repo=new Repo(repoInfo,this.useRestClient_,app);appRepos[repoInfo.toURLString()]=repo;return repo;};/**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */RepoManager.prototype.forceRestClient=function(forceRestClient){this.useRestClient_=forceRestClient;};return RepoManager;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */var Database=/** @class */function(){/**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */function Database(repo_){this.repo_=repo_;if(!(repo_ instanceof Repo)){fatal(\"Don't call new Database() directly - please use firebase.database().\");}/** @type {Reference} */this.root_=new Reference(repo_,Path.Empty);this.INTERNAL=new DatabaseInternals(this);}Object.defineProperty(Database.prototype,\"app\",{get:function get(){return this.repo_.app;},enumerable:true,configurable:true});Database.prototype.ref=function(path){this.checkDeleted_('ref');util.validateArgCount('database.ref',0,1,arguments.length);if(path instanceof Reference){return this.refFromURL(path.toString());}return path!==undefined?this.root_.child(path):this.root_;};/**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */Database.prototype.refFromURL=function(url){/** @const {string} */var apiName='database.refFromURL';this.checkDeleted_(apiName);util.validateArgCount(apiName,1,1,arguments.length);var parsedURL=parseRepoInfo(url);validateUrl(apiName,1,parsedURL);var repoInfo=parsedURL.repoInfo;if(repoInfo.host!==this.repo_.repoInfo_.host){fatal(apiName+': Host name does not match the current database: '+'(found '+repoInfo.host+' but expected '+this.repo_.repoInfo_.host+')');}return this.ref(parsedURL.path.toString());};/**\r\n     * @param {string} apiName\r\n     */Database.prototype.checkDeleted_=function(apiName){if(this.repo_===null){fatal('Cannot call '+apiName+' on a deleted database.');}};// Make individual repo go offline.\nDatabase.prototype.goOffline=function(){util.validateArgCount('database.goOffline',0,0,arguments.length);this.checkDeleted_('goOffline');this.repo_.interrupt();};Database.prototype.goOnline=function(){util.validateArgCount('database.goOnline',0,0,arguments.length);this.checkDeleted_('goOnline');this.repo_.resume();};Database.ServerValue={TIMESTAMP:{'.sv':'timestamp'}};return Database;}();var DatabaseInternals=/** @class */function(){/** @param {!Database} database */function DatabaseInternals(database){this.database=database;}/** @return {Promise<void>} */DatabaseInternals.prototype.delete=function(){return tslib_1.__awaiter(this,void 0,void 0,function(){return tslib_1.__generator(this,function(_a){this.database.checkDeleted_('delete');RepoManager.getInstance().deleteRepo(this.database.repo_);this.database.repo_=null;this.database.root_=null;this.database.INTERNAL=null;this.database=null;return[2/*return*/];});});};return DatabaseInternals;}();/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *//**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */var forceLongPolling=function forceLongPolling(){WebSocketConnection.forceDisallow();BrowserPollConnection.forceAllow();};var forceWebSockets=function forceWebSockets(){BrowserPollConnection.forceDisallow();};/* Used by App Manager */var isWebSocketsAvailable=function isWebSocketsAvailable(){return WebSocketConnection['isAvailable']();};var setSecurityDebugCallback=function setSecurityDebugCallback(ref,callback){ref.repo.persistentConnection_.securityDebugCallback_=callback;};var stats=function stats(ref,showDelta){ref.repo.stats(showDelta);};var statsIncrementCounter=function statsIncrementCounter(ref,metric){ref.repo.statsIncrementCounter(metric);};var dataUpdateCount=function dataUpdateCount(ref){return ref.repo.dataUpdateCount;};var interceptServerData=function interceptServerData(ref,callback){return ref.repo.interceptServerData_(callback);};var INTERNAL=/*#__PURE__*/Object.freeze({forceLongPolling:forceLongPolling,forceWebSockets:forceWebSockets,isWebSocketsAvailable:isWebSocketsAvailable,setSecurityDebugCallback:setSecurityDebugCallback,stats:stats,statsIncrementCounter:statsIncrementCounter,dataUpdateCount:dataUpdateCount,interceptServerData:interceptServerData});/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var DataConnection=PersistentConnection;/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */PersistentConnection.prototype.simpleListen=function(pathString,onComplete){this.sendRequest('q',{p:pathString},onComplete);};/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */PersistentConnection.prototype.echo=function(data,onEcho){this.sendRequest('echo',{d:data},onEcho);};// RealTimeConnection properties that we use in tests.\nvar RealTimeConnection=Connection;/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */var hijackHash=function hijackHash(newHash){var oldPut=PersistentConnection.prototype.put;PersistentConnection.prototype.put=function(pathString,data,opt_onComplete,opt_hash){if(opt_hash!==undefined){opt_hash=newHash();}oldPut.call(this,pathString,data,opt_onComplete,opt_hash);};return function(){PersistentConnection.prototype.put=oldPut;};};/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */var ConnectionTarget=RepoInfo;/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */var queryIdentifier=function queryIdentifier(query){return query.queryIdentifier();};/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */var listens=function listens(firebaseRef){return firebaseRef.repo.persistentConnection_.listens_;};/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */var forceRestClient=function forceRestClient(_forceRestClient){RepoManager.getInstance().forceRestClient(_forceRestClient);};var TEST_ACCESS=/*#__PURE__*/Object.freeze({DataConnection:DataConnection,RealTimeConnection:RealTimeConnection,hijackHash:hijackHash,ConnectionTarget:ConnectionTarget,queryIdentifier:queryIdentifier,listens:listens,forceRestClient:forceRestClient});/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ServerValue=Database.ServerValue;function registerDatabase(instance){// Register the Database Service with the 'firebase' namespace.\nvar namespace=instance.INTERNAL.registerService('database',function(app,unused,url){return RepoManager.getInstance().databaseFromApp(app,url);},// firebase.database namespace properties\n{Reference:Reference,Query:Query,Database:Database,enableLogging:enableLogging,INTERNAL:INTERNAL,ServerValue:ServerValue,TEST_ACCESS:TEST_ACCESS},null,true);if(util.isNodeSdk()){module.exports=namespace;}}registerDatabase(firebase);exports.registerDatabase=registerDatabase;exports.Database=Database;exports.Query=Query;exports.Reference=Reference;exports.enableLogging=enableLogging;exports.ServerValue=ServerValue;exports.DataSnapshot=DataSnapshot;exports.OnDisconnect=OnDisconnect;\n\n/***/ }),\n\n/***/ \"rplX\":\n/***/ (function(module, exports) {\n\n(function (self) {\n  'use strict';\n\n  if (self.fetch) {\n    return;\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && function () {\n      try {\n        new Blob();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n    var isDataView = function isDataView(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj);\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name');\n    }\n    return name.toLowerCase();\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value;\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function next() {\n        var value = items.shift();\n        return { done: value === undefined, value: value };\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function () {\n        return iterator;\n      };\n    }\n\n    return iterator;\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function (value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function (name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function (name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ',' + value : value;\n  };\n\n  Headers.prototype['delete'] = function (name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function (name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null;\n  };\n\n  Headers.prototype.has = function (name) {\n    return this.map.hasOwnProperty(normalizeName(name));\n  };\n\n  Headers.prototype.set = function (name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function (callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function () {\n    var items = [];\n    this.forEach(function (value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items);\n  };\n\n  Headers.prototype.values = function () {\n    var items = [];\n    this.forEach(function (value) {\n      items.push(value);\n    });\n    return iteratorFor(items);\n  };\n\n  Headers.prototype.entries = function () {\n    var items = [];\n    this.forEach(function (value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items);\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'));\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function (resolve, reject) {\n      reader.onload = function () {\n        resolve(reader.result);\n      };\n      reader.onerror = function () {\n        reject(reader.error);\n      };\n    });\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise;\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise;\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('');\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0);\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer;\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function (body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type');\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function () {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob);\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob');\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]));\n        }\n      };\n\n      this.arrayBuffer = function () {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer);\n        }\n      };\n    }\n\n    this.text = function () {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected;\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob);\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text');\n      } else {\n        return Promise.resolve(this._bodyText);\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function () {\n        return this.text().then(decode);\n      };\n    }\n\n    this.json = function () {\n      return this.text().then(JSON.parse);\n    };\n\n    return this;\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method;\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read');\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests');\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function () {\n    return new Request(this, { body: this._bodyInit });\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function (bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form;\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers;\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function () {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    });\n  };\n\n  Response.error = function () {\n    var response = new Response(null, { status: 0, statusText: '' });\n    response.type = 'error';\n    return response;\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function (url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code');\n    }\n\n    return new Response(null, { status: status, headers: { location: url } });\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function (input, init) {\n    return new Promise(function (resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function () {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function () {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function () {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function (value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    });\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n\n/***/ }),\n\n/***/ \"uXl7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _preact = __webpack_require__(\"EBst\");\n\nif (false) {\n\trequire('preact/devtools');\n} else if (true && 'serviceWorker' in navigator && location.protocol === 'https:') {\n\tnavigator.serviceWorker.register(__webpack_require__.p + 'sw.js');\n}\n\nvar interopDefault = function interopDefault(m) {\n\treturn m && m.default ? m.default : m;\n};\n\nvar app = interopDefault(__webpack_require__(\"JkW7\"));\n\nif (typeof app === 'function') {\n\tvar root = document.body.firstElementChild;\n\n\tvar init = function init() {\n\t\tvar app = interopDefault(__webpack_require__(\"JkW7\"));\n\t\troot = (0, _preact.render)((0, _preact.h)(app), document.body, root);\n\t};\n\n\tif (false) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n\n/***/ }),\n\n/***/ \"yviF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\n__webpack_require__(\"DFDv\");\nvar firebase = _interopDefault(__webpack_require__(\"O4tu\"));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// bundle.efcb0.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"uXl7\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3e5bb050e6823b7f2a8f","import 'whatwg-fetch';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\nvar _meta = createCommonjsModule(function (module) {\nvar META = _uid('meta');\n\n\nvar setDesc = _objectDp.f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !_fails(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n});\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar f$3 = _wks;\n\nvar _wksExt = {\n\tf: f$3\n};\n\nvar _library = false;\n\nvar defineProperty = _objectDp.f;\nvar _wksDefine = function (name) {\n  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: _wksExt.f(name) });\n};\n\n// all enumerable object keys, includes symbols\n\n\n\nvar _enumKeys = function (it) {\n  var result = _objectKeys(it);\n  var getSymbols = _objectGops.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = _objectPie.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$1 = _global.document;\nvar _html = document$1 && document$1.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\nvar hiddenKeys = _enumBugKeys.concat('length', 'prototype');\n\nvar f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return _objectKeysInternal(O, hiddenKeys);\n};\n\nvar _objectGopn = {\n\tf: f$4\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\nvar gOPN = _objectGopn.f;\nvar toString$1 = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nvar f$5 = function getOwnPropertyNames(it) {\n  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));\n};\n\nvar _objectGopnExt = {\n\tf: f$5\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n\tf: f$6\n};\n\n// ECMAScript 6 symbols shim\n\n\n\n\n\nvar META = _meta.KEY;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar gOPD$1 = _objectGopd.f;\nvar dP$1 = _objectDp.f;\nvar gOPN$1 = _objectGopnExt.f;\nvar $Symbol = _global.Symbol;\nvar $JSON = _global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE$2 = 'prototype';\nvar HIDDEN = _wks('_hidden');\nvar TO_PRIMITIVE = _wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = _shared('symbol-registry');\nvar AllSymbols = _shared('symbols');\nvar OPSymbols = _shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE$2];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = _global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = _descriptors && _fails(function () {\n  return _objectCreate(dP$1({}, 'a', {\n    get: function () { return dP$1(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD$1(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP$1(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP$1(ObjectProto, key, protoDesc);\n} : dP$1;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  _anObject(it);\n  key = _toPrimitive(key, true);\n  _anObject(D);\n  if (_has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP$1(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  _anObject(it);\n  var keys = _enumKeys(P = _toIobject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = _toPrimitive(key, true));\n  if (this === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;\n  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = _toIobject(it);\n  key = _toPrimitive(key, true);\n  if (it === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;\n  var D = gOPD$1(it, key);\n  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN$1(_toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, _propertyDesc(1, value));\n    };\n    if (_descriptors && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {\n    return this._k;\n  });\n\n  _objectGopd.f = $getOwnPropertyDescriptor;\n  _objectDp.f = $defineProperty;\n  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;\n  _objectPie.f = $propertyIsEnumerable;\n  _objectGops.f = $getOwnPropertySymbols;\n\n  if (_descriptors && !_library) {\n    _redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  _wksExt.f = function (name) {\n    return wrap(_wks(name));\n  };\n}\n\n_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return _has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!_isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\n_setToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\n_setToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\n_setToStringTag(_global.JSON, 'JSON', true);\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n_wksDefine('asyncIterator');\n\n_wksDefine('observable');\n\nvar symbol = _core.Symbol;\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto$1 = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto$1 : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\nvar _iterStep = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n  }\n}\n\nvar iterator = _wksExt.f('iterator');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/polyfill/dist/index.esm.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","!function(){\"use strict\";function e(e,t){var n,o,r,i,l=W;for(i=arguments.length;i-- >2;)P.push(arguments[i]);t&&null!=t.children&&(P.length||P.push(t.children),delete t.children);while(P.length)if((o=P.pop())&&void 0!==o.pop)for(i=o.length;i--;)P.push(o[i]);else\"boolean\"==typeof o&&(o=null),(r=\"function\"!=typeof e)&&(null==o?o=\"\":\"number\"==typeof o?o+=\"\":\"string\"!=typeof o&&(r=!1)),r&&n?l[l.length-1]+=o:l===W?l=[o]:l.push(o),n=r;var a=new T;return a.nodeName=e,a.children=l,a.attributes=null==t?void 0:t,a.key=null==t?void 0:t.key,void 0!==M.vnode&&M.vnode(a),a}function t(e,t){for(var n in t)e[n]=t[n];return e}function n(e,t){null!=e&&(\"function\"==typeof e?e(t):e.current=t)}function o(n,o){return e(n.nodeName,t(t({},n.attributes),o),arguments.length>2?[].slice.call(arguments,2):n.children)}function r(e){!e.__d&&(e.__d=!0)&&1==V.push(e)&&(M.debounceRendering||D)(i)}function i(){var e;while(e=V.pop())e.__d&&x(e)}function l(e,t,n){return\"string\"==typeof t||\"number\"==typeof t?void 0!==e.splitText:\"string\"==typeof t.nodeName?!e._componentConstructor&&a(e,t.nodeName):n||e._componentConstructor===t.nodeName}function a(e,t){return e.__n===t||e.nodeName.toLowerCase()===t.toLowerCase()}function u(e){var n=t({},e.attributes);n.children=e.children;var o=e.nodeName.defaultProps;if(void 0!==o)for(var r in o)void 0===n[r]&&(n[r]=o[r]);return n}function c(e,t){var n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",e):document.createElement(e);return n.__n=e,n}function p(e){var t=e.parentNode;t&&t.removeChild(e)}function s(e,t,o,r,i){if(\"className\"===t&&(t=\"class\"),\"key\"===t);else if(\"ref\"===t)n(o,null),n(r,e);else if(\"class\"!==t||i)if(\"style\"===t){if(r&&\"string\"!=typeof r&&\"string\"!=typeof o||(e.style.cssText=r||\"\"),r&&\"object\"==typeof r){if(\"string\"!=typeof o)for(var l in o)l in r||(e.style[l]=\"\");for(var l in r)e.style[l]=\"number\"==typeof r[l]&&!1===E.test(l)?r[l]+\"px\":r[l]}}else if(\"dangerouslySetInnerHTML\"===t)r&&(e.innerHTML=r.__html||\"\");else if(\"o\"==t[0]&&\"n\"==t[1]){var a=t!==(t=t.replace(/Capture$/,\"\"));t=t.toLowerCase().substring(2),r?o||e.addEventListener(t,_,a):e.removeEventListener(t,_,a),(e.__l||(e.__l={}))[t]=r}else if(\"list\"!==t&&\"type\"!==t&&!i&&t in e){try{e[t]=null==r?\"\":r}catch(e){}null!=r&&!1!==r||\"spellcheck\"==t||e.removeAttribute(t)}else{var u=i&&t!==(t=t.replace(/^xlink:?/,\"\"));null==r||!1===r?u?e.removeAttributeNS(\"http://www.w3.org/1999/xlink\",t.toLowerCase()):e.removeAttribute(t):\"function\"!=typeof r&&(u?e.setAttributeNS(\"http://www.w3.org/1999/xlink\",t.toLowerCase(),r):e.setAttribute(t,r))}else e.className=r||\"\"}function _(e){return this.__l[e.type](M.event&&M.event(e)||e)}function f(){var e;while(e=A.shift())M.afterMount&&M.afterMount(e),e.componentDidMount&&e.componentDidMount()}function d(e,t,n,o,r,i){H++||(R=null!=r&&void 0!==r.ownerSVGElement,B=null!=e&&!(\"__preactattr_\"in e));var l=h(e,t,n,o,i);return r&&l.parentNode!==r&&r.appendChild(l),--H||(B=!1,i||f()),l}function h(e,t,n,o,r){var i=e,l=R;if(null!=t&&\"boolean\"!=typeof t||(t=\"\"),\"string\"==typeof t||\"number\"==typeof t)return e&&void 0!==e.splitText&&e.parentNode&&(!e._component||r)?e.nodeValue!=t&&(e.nodeValue=t):(i=document.createTextNode(t),e&&(e.parentNode&&e.parentNode.replaceChild(i,e),v(e,!0))),i.__preactattr_=!0,i;var u=t.nodeName;if(\"function\"==typeof u)return N(e,t,n,o);if(R=\"svg\"===u||\"foreignObject\"!==u&&R,u+=\"\",(!e||!a(e,u))&&(i=c(u,R),e)){while(e.firstChild)i.appendChild(e.firstChild);e.parentNode&&e.parentNode.replaceChild(i,e),v(e,!0)}var p=i.firstChild,s=i.__preactattr_,_=t.children;if(null==s){s=i.__preactattr_={};for(var f=i.attributes,d=f.length;d--;)s[f[d].name]=f[d].value}return!B&&_&&1===_.length&&\"string\"==typeof _[0]&&null!=p&&void 0!==p.splitText&&null==p.nextSibling?p.nodeValue!=_[0]&&(p.nodeValue=_[0]):(_&&_.length||null!=p)&&m(i,_,n,o,B||null!=s.dangerouslySetInnerHTML),y(i,t.attributes,s),R=l,i}function m(e,t,n,o,r){var i,a,u,c,s,_=e.childNodes,f=[],d={},m=0,b=0,y=_.length,g=0,w=t?t.length:0;if(0!==y)for(var C=0;C<y;C++){var x=_[C],N=x.__preactattr_,k=w&&N?x._component?x._component.__k:N.key:null;null!=k?(m++,d[k]=x):(N||(void 0!==x.splitText?!r||x.nodeValue.trim():r))&&(f[g++]=x)}if(0!==w)for(var C=0;C<w;C++){c=t[C],s=null;var k=c.key;if(null!=k)m&&void 0!==d[k]&&(s=d[k],d[k]=void 0,m--);else if(b<g)for(i=b;i<g;i++)if(void 0!==f[i]&&l(a=f[i],c,r)){s=a,f[i]=void 0,i===g-1&&g--,i===b&&b++;break}s=h(s,c,n,o),u=_[C],s&&s!==e&&s!==u&&(null==u?e.appendChild(s):s===u.nextSibling?p(u):e.insertBefore(s,u))}if(m)for(var C in d)void 0!==d[C]&&v(d[C],!1);while(b<=g)void 0!==(s=f[g--])&&v(s,!1)}function v(e,t){var o=e._component;o?k(o):(null!=e.__preactattr_&&n(e.__preactattr_.ref,null),!1!==t&&null!=e.__preactattr_||p(e),b(e))}function b(e){e=e.lastChild;while(e){var t=e.previousSibling;v(e,!0),e=t}}function y(e,t,n){var o;for(o in n)t&&null!=t[o]||null==n[o]||s(e,o,n[o],n[o]=void 0,R);for(o in t)\"children\"===o||\"innerHTML\"===o||o in n&&t[o]===(\"value\"===o||\"checked\"===o?e[o]:n[o])||s(e,o,n[o],n[o]=t[o],R)}function g(e,t,n){var o,r=F.length;e.prototype&&e.prototype.render?(o=new e(t,n),U.call(o,t,n)):(o=new U(t,n),o.constructor=e,o.render=w);while(r--)if(F[r].constructor===e)return o.__b=F[r].__b,F.splice(r,1),o;return o}function w(e,t,n){return this.constructor(e,n)}function C(e,t,o,i,l){e.__x||(e.__x=!0,e.__r=t.ref,e.__k=t.key,delete t.ref,delete t.key,void 0===e.constructor.getDerivedStateFromProps&&(!e.base||l?e.componentWillMount&&e.componentWillMount():e.componentWillReceiveProps&&e.componentWillReceiveProps(t,i)),i&&i!==e.context&&(e.__c||(e.__c=e.context),e.context=i),e.__p||(e.__p=e.props),e.props=t,e.__x=!1,0!==o&&(1!==o&&!1===M.syncComponentUpdates&&e.base?r(e):x(e,1,l)),n(e.__r,e))}function x(e,n,o,r){if(!e.__x){var i,l,a,c=e.props,p=e.state,s=e.context,_=e.__p||c,h=e.__s||p,m=e.__c||s,b=e.base,y=e.__b,w=b||y,N=e._component,U=!1,S=m;if(e.constructor.getDerivedStateFromProps&&(p=t(t({},p),e.constructor.getDerivedStateFromProps(c,p)),e.state=p),b&&(e.props=_,e.state=h,e.context=m,2!==n&&e.shouldComponentUpdate&&!1===e.shouldComponentUpdate(c,p,s)?U=!0:e.componentWillUpdate&&e.componentWillUpdate(c,p,s),e.props=c,e.state=p,e.context=s),e.__p=e.__s=e.__c=e.__b=null,e.__d=!1,!U){i=e.render(c,p,s),e.getChildContext&&(s=t(t({},s),e.getChildContext())),b&&e.getSnapshotBeforeUpdate&&(S=e.getSnapshotBeforeUpdate(_,h));var L,T,P=i&&i.nodeName;if(\"function\"==typeof P){var W=u(i);l=N,l&&l.constructor===P&&W.key==l.__k?C(l,W,1,s,!1):(L=l,e._component=l=g(P,W,s),l.__b=l.__b||y,l.__u=e,C(l,W,0,s,!1),x(l,1,o,!0)),T=l.base}else a=w,L=N,L&&(a=e._component=null),(w||1===n)&&(a&&(a._component=null),T=d(a,i,s,o||!b,w&&w.parentNode,!0));if(w&&T!==w&&l!==N){var D=w.parentNode;D&&T!==D&&(D.replaceChild(T,w),L||(w._component=null,v(w,!1)))}if(L&&k(L),e.base=T,T&&!r){var E=e,V=e;while(V=V.__u)(E=V).base=T;T._component=E,T._componentConstructor=E.constructor}}!b||o?A.push(e):U||(e.componentDidUpdate&&e.componentDidUpdate(_,h,S),M.afterUpdate&&M.afterUpdate(e));while(e.__h.length)e.__h.pop().call(e);H||r||f()}}function N(e,t,n,o){var r=e&&e._component,i=r,l=e,a=r&&e._componentConstructor===t.nodeName,c=a,p=u(t);while(r&&!c&&(r=r.__u))c=r.constructor===t.nodeName;return r&&c&&(!o||r._component)?(C(r,p,3,n,o),e=r.base):(i&&!a&&(k(i),e=l=null),r=g(t.nodeName,p,n),e&&!r.__b&&(r.__b=e,l=null),C(r,p,1,n,o),e=r.base,l&&e!==l&&(l._component=null,v(l,!1))),e}function k(e){M.beforeUnmount&&M.beforeUnmount(e);var t=e.base;e.__x=!0,e.componentWillUnmount&&e.componentWillUnmount(),e.base=null;var o=e._component;o?k(o):t&&(null!=t.__preactattr_&&n(t.__preactattr_.ref,null),e.__b=t,p(t),F.push(e),b(t)),n(e.__r,null)}function U(e,t){this.__d=!0,this.context=t,this.props=e,this.state=this.state||{},this.__h=[]}function S(e,t,n){return d(n,e,{},!1,t,!1)}function L(){return{}}var T=function(){},M={},P=[],W=[],D=\"function\"==typeof Promise?Promise.resolve().then.bind(Promise.resolve()):setTimeout,E=/acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,V=[],A=[],H=0,R=!1,B=!1,F=[];t(U.prototype,{setState:function(e,n){this.__s||(this.__s=this.state),this.state=t(t({},this.state),\"function\"==typeof e?e(this.state,this.props):e),n&&this.__h.push(n),r(this)},forceUpdate:function(e){e&&this.__h.push(e),x(this,2)},render:function(){}});var j={h:e,createElement:e,cloneElement:o,createRef:L,Component:U,render:S,rerender:i,options:M};\"undefined\"!=typeof module?module.exports=j:self.preact=j}();\n//# sourceMappingURL=preact.min.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/preact/dist/preact.min.js","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/classnames/index.js","import firebase from 'firebase/app'\nimport 'firebase/database'\n\nconst config = {\n  apiKey: \"AIzaSyBeyNtKCVeK7dSnZX0xr6qWCrKj5PnTmfM\",\n  authDomain: \"flexicon-757a0.firebaseapp.com\",\n  databaseURL: \"https://flexicon-757a0.firebaseio.com\",\n  projectId: \"flexicon-757a0\",\n  storageBucket: \"flexicon-757a0.appspot.com\",\n  messagingSenderId: \"357714471064\"\n}\n\nfirebase.initializeApp(config)\nexport default firebase\n\n\n\n// WEBPACK FOOTER //\n// ./firebase.js","import './style'\nimport { Component } from 'preact'\n// import ScaleText from \"react-scale-text\"\nimport firebase from './firebase.js'\nimport './assets/style.css'\n\nconst Logo = require('./assets/flexicon.svg')\n\nexport default class App extends Component {\n\tstate = {\n\t\tword: '',\n\t\ttranslation: '',\n\t\ttranslations: [],\n\t\taddWord: '',\n\t\taddTranslation: '',\n\n\t\tshowStartPage: true,\n\t\tshowAddNewWord: false,\n\t\tshowWordAdded: false,\n\t\tplusHover: false,\n\t\tshowShare: false\n\t}\n\n\tisShowAddNewBlock = false;\n\n\tgreet = ''\n\n\thandleChange = (e) => {\n\t\tthis.setState({ word: e.target.value })\n\t\tthis.checkWord()\n\t}\n\n\thandleAddWordChange = (e) => {\n\t\tthis.setState({ addWord: e.target.value })\n\t}\n\n\thandleAddTranslationChange = (e) => {\n\t\tthis.setState({ addTranslation: e.target.value })\n\t}\n\n\tcheckWord = () => {\n\t\tthis.setState({ translation: '' })\n\t\tlet obj = this.state.translations.find(word => word.word === this.state.word)\n\t\tif (obj) {\n\t\t\tthis.setState({ translation: obj.translation })\n\t\t}\n\t}\n\n\taddTranslation = () => {\n\t\tconst translationsRef = firebase.database().ref('translations');\n\t\tconst item = {\n\t\t\tword: this.state.addWord,\n\t\t\ttranslation: this.state.addTranslation\n\t\t}\n\t\tif (this.state.addWord.length > 0 && this.state.addTranslation.length > 0) {\n\t\t\ttranslationsRef.push(item);\n\t\t\tthis.setState({\n\t\t\t\taddWord: '',\n\t\t\t\taddTranslation: '',\n\t\t\t\tshowWordAdded: true\n\t\t\t});\n\t\t}\n\t}\n\n\tpopulate = () => {\n\t\tconst translationsRef = firebase.database().ref('translations');\n\n\t\ttranslations.map(o => translationsRef.push(o));\n\t}\n\n\tshowAddNew = () => {\n\t\tthis.setState({ plusHover: true })\n\t}\n\n\thideAddNew = () => {\n\t\tthis.setState({ plusHover: false })\n\t}\n\n\tshowShare = () => {\n\t\tthis.setState({ showShare: true })\n\t}\n\n\thideShare = () => {\n\t\tthis.setState({ showShare: false })\n\t}\n\n\ttoggleAddNewWord = () => {\n\t\tthis.setState({\n\t\t\tshowAddNewWord: !this.state.showAddNewWord,\n\t\t\tshowWordAdded: false,\n\t\t\tword: '',\n\t\t\ttranslation: ''\n\t\t})\n\t\tthis.isShowAddNewBlock ? this.isShowAddNewBlock = false : setTimeout(() => this.isShowAddNewBlock = true, 100)\n\t}\n\n\thideStartPage = () => {\n\t\tthis.setState({ showStartPage: false })\n\t}\n\n\tfbShare = () => {\n\t\tFB.ui({\n\t\t\tmethod: 'share',\n\t\t\thref: `https://www.linkedin.com/shareArticle?mini=true&url=${window.location.href}?word=${this.state.word}`\n\t\t}, function(response){});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.greet = this.getRandomString()\n\t\tconst translationsRef = firebase.database().ref('translations');\n\t\ttranslationsRef.on('value', (snapshot) => {\n\t\t\tlet translations = snapshot.val()\n\t\t\tlet newState = []\n\t\t\tfor (let item in translations) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tid: item,\n\t\t\t\t\tword: translations[item].word,\n\t\t\t\t\ttranslation: translations[item].translation\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\ttranslations: newState\n\t\t\t})\n\n\t\t\tconst url = new URL(window.location.href);\n\t\t\tconst searchParam = url.searchParams.get(\"word\");\n\t\t\tif (searchParam) {\n\t\t\t\tthis.setState({ addWord: searchParam })\n\t\t\t\tthis.setState({ word: searchParam })\n\t\t\t\tthis.checkWord()\n\t\t\t\tthis.setState({ showStartPage: false }) \n\t\t\t}\n\t\t})\n\t\t\n\t\tdocument.onclick = (e) => {\n\t\t\tif(e.target.className !== 'add-new-block'\n\t\t\t\t\t&& e.target.className !== 'add-new-block-input'\n\t\t\t\t\t&& e.target.className !== 'add-btn'\n\t\t\t\t\t&& this.isShowAddNewBlock){\n\t\t\t\tthis.toggleAddNewWord();\n\t\t\t}\n\t\t};\n\t}\n\n\tgetRandomString = () => {\n\t\tconst okies = ['бомба!', 'пушка!', 'го!', 'погнали!', 'изи', 'збс', 'лойс', 'эщкере'];\n\t\treturn okies[Math.floor(Math.random() * okies.length)];\n\t}\n\n\trender() {\n\t\tconst classNames = require('classnames')\n\t\tconst addNewClass = classNames({\n      'add-new-container_text': true,\n      'hide': !this.state.plusHover\n\t\t})\n\n\t\treturn (\n\t\t\t<div style={'height: 85%'}>\n\t\t\t\t{ this.state.showStartPage ?\n\t\t\t\t\t<div className='startPage'>\n\t\t\t\t\t\t<div className='startPage_text'>Флексикон – толковый словарь молодежного сленга, который даже бабушке объяснит, что лойс и лось – это разные вещи.</div>\n\t\t\t\t\t\t<div className='startPage_btn' onClick={this.hideStartPage}>{this.greet}</div>\n\t\t\t\t\t</div> : ''\n\t\t\t\t}\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<img src='/assets/r.svg' alt='R' />\n\t\t\t\t\t<p className='line' />\n\t\t\t\t\t<div className='head'>\n\t\t\t\t\t\t<img src='/assets/flexicon.svg' alt='Flexicon' />\n\t\t\t\t\t\t<div className=\"add-new-container\">\n\t\t\t\t\t\t\t<div className={addNewClass}>добавить новое слово</div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='plus'\n\t\t\t\t\t\t\t\tsrc='/assets/plus.svg'\n\t\t\t\t\t\t\t\talt='plus'\n\t\t\t\t\t\t\t\tonMouseEnter={this.showAddNew}\n\t\t\t\t\t\t\t\tonMouseLeave={this.hideAddNew}\n\t\t\t\t\t\t\t\tonClick={this.toggleAddNewWord}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.showAddNewWord ?\n\t\t\t\t\t\t\t\t\t<div className='add-new-block'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='напиши слово'\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.addWord}\n\t\t\t\t\t\t\t\t\t\t\tonInput={this.handleAddWordChange}\n\t\t\t\t\t\t\t\t\t\t\tclassName='add-new-block-input'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='напиши перевод'\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.addTranslation}\n\t\t\t\t\t\t\t\t\t\t\tonInput={this.handleAddTranslationChange}\n\t\t\t\t\t\t\t\t\t\t\tclassName='add-new-block-input'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className='add-btn' onClick={this.addTranslation}>добавить+</div>\n\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.showWordAdded ? \n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"wordAdded\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"wordAddedText\">Пушка, твое слово добавлено в словарь! Можешь сразу чекнуть его в нашем флексиконе!</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"wordAddedOk\" onClick={this.toggleAddNewWord}>ОКИЧ</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div> : ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{ \n\t\t\t\t\t\t!this.state.showAddNewWord ?\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName='text-to-translate'\n\t\t\t\t\t\t\t\t\tvalue={this.state.word}\n\t\t\t\t\t\t\t\t\tonInput={this.handleChange}\n\t\t\t\t\t\t\t\t\tplaceholder='напиши слово'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='translation-result parent'>\n\t\t\t\t\t\t\t\t\t<span>{this.state.translation}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div> : ''\t\t\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"shareContainer\"\n\t\t\t\t\t\tstyle={this.state.showShare ? 'width: 100%' : ''}\n\t\t\t\t\t\tonMouseEnter={this.showShare}\n\t\t\t\t\t\tonMouseLeave={this.hideShare}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"box\">\n\t\t\t\t\t\t\t<img src='/assets/arrow.svg' />\n\t\t\t\t\t\t\t<span>share</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.showShare ?\n\t\t\t\t\t\t\t\t<div className=\"shareBlock\">\n\t\t\t\t\t\t\t\t\t<a href='#' onClick={this.fbShare}>facebook</a>\n\t\t\t\t\t\t\t\t\t<a href={`https://telegram.me/share/url?url=${window.location.href}?word=${this.state.word}&text=Чекни перевод`} target=\"_blank\">telegram</a>\n\t\t\t\t\t\t\t\t</div> : ''\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.5.9',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/app/dist/index.cjs.js","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/util/dist/index.cjs.js","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslib/tslib.es6.js","module.exports = __webpack_public_path__ + \"13b3b0f3b1234192175252dfb48e82d5.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/flexicon.svg\n// module id = V+3I\n// module chunks = 0","/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/logger/dist/index.esm.js","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/index.cjs.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/whatwg-fetch/fetch.js","'use strict';\n\nvar _preact = require('preact');\n\nif (process.env.NODE_ENV === 'development') {\n\trequire('preact/devtools');\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator && location.protocol === 'https:') {\n\tnavigator.serviceWorker.register(__webpack_public_path__ + 'sw.js');\n}\n\nconst interopDefault = m => m && m.default ? m.default : m;\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root = document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\troot = (0, _preact.render)((0, _preact.h)(app), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/preact-cli/lib/lib/entry.js","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/firebase/app/dist/index.cjs.js"],"sourceRoot":""}